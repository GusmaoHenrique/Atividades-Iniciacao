

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Jul 05 12:06:50 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4550 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	nvCOMRAM
    64  000031                     __pnvCOMRAM:
    65                           	callstack 0
    66  000031                     _tempoInt:
    67                           	callstack 0
    68  000031                     	ds	2
    69  0000                     _TMR0	set	4054
    70  0000                     _ADRESH	set	4036
    71  0000                     _ADRESL	set	4035
    72  0000                     _ADCON0bits	set	4034
    73  0000                     _T0CONbits	set	4053
    74  0000                     _ADCON2	set	4032
    75  0000                     _ADCON1	set	4033
    76  0000                     _ADCON0	set	4034
    77  0000                     _TRISA	set	3986
    78  0000                     _PORTD	set	3971
    79  0000                     _TRISD	set	3989
    80  0000                     _PORTDbits	set	3971
    81  0000                     _PSA	set	32427
    82  0000                     _T0SE	set	32428
    83  0000                     _T0CS	set	32429
    84  0000                     _T08BIT	set	32430
    85  0000                     _TMR0ON	set	32431
    86  0000                     _TMR0IE	set	32661
    87  0000                     _PEIE	set	32662
    88  0000                     _GIE	set	32663
    89  0000                     _TMR0IF	set	32658
    90                           
    91                           ; #config settings
    92                           
    93                           	psect	cinit
    94  000794                     __pcinit:
    95                           	callstack 0
    96  000794                     start_initialization:
    97                           	callstack 0
    98  000794                     __initialization:
    99                           	callstack 0
   100                           
   101                           ; Clear objects allocated to COMRAM (2 bytes)
   102  000794  6A34               	clrf	(__pbssCOMRAM+1)& (0+255),c
   103  000796  6A33               	clrf	__pbssCOMRAM& (0+255),c
   104  000798                     end_of_initialization:
   105                           	callstack 0
   106  000798                     __end_of__initialization:
   107                           	callstack 0
   108  000798  9035               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   109  00079A  9235               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   110  00079C  0100               	movlb	0
   111  00079E  EFDD  F000         	goto	_main	;jump to C main() function
   112                           
   113                           	psect	bssCOMRAM
   114  000033                     __pbssCOMRAM:
   115                           	callstack 0
   116  000033                     _dente:
   117                           	callstack 0
   118  000033                     	ds	2
   119                           
   120                           	psect	cstackCOMRAM
   121  000001                     __pcstackCOMRAM:
   122                           	callstack 0
   123  000001                     ??_my_isr_routine:
   124  000001                     
   125                           ; 1 bytes @ 0x0
   126  000001                     	ds	1
   127  000002                     ?_adc_read:
   128                           	callstack 0
   129  000002                     ?___ftpack:
   130                           	callstack 0
   131  000002                     ___ftpack@arg:
   132                           	callstack 0
   133                           
   134                           ; 3 bytes @ 0x1
   135  000002                     	ds	2
   136  000004                     ??_adc_read:
   137                           
   138                           ; 1 bytes @ 0x3
   139  000004                     	ds	1
   140  000005                     ___ftpack@exp:
   141                           	callstack 0
   142                           
   143                           ; 1 bytes @ 0x4
   144  000005                     	ds	1
   145  000006                     ___ftpack@sign:
   146                           	callstack 0
   147  000006                     adc_read@result:
   148                           	callstack 0
   149                           
   150                           ; 2 bytes @ 0x5
   151  000006                     	ds	1
   152  000007                     ??___ftpack:
   153                           
   154                           ; 1 bytes @ 0x6
   155  000007                     	ds	1
   156  000008                     adc_read@canal:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0x7
   160  000008                     	ds	2
   161  00000A                     ?___ftadd:
   162                           	callstack 0
   163  00000A                     ?___ftmul:
   164                           	callstack 0
   165  00000A                     ?___awtoft:
   166                           	callstack 0
   167  00000A                     ___awtoft@c:
   168                           	callstack 0
   169  00000A                     ___ftadd@f1:
   170                           	callstack 0
   171  00000A                     ___ftmul@f1:
   172                           	callstack 0
   173                           
   174                           ; 3 bytes @ 0x9
   175  00000A                     	ds	3
   176  00000D                     ___awtoft@sign:
   177                           	callstack 0
   178  00000D                     ___ftadd@f2:
   179                           	callstack 0
   180  00000D                     ___ftmul@f2:
   181                           	callstack 0
   182                           
   183                           ; 3 bytes @ 0xC
   184  00000D                     	ds	3
   185  000010                     ??___ftadd:
   186  000010                     ??___ftmul:
   187                           
   188                           ; 1 bytes @ 0xF
   189  000010                     	ds	3
   190  000013                     ___ftadd@sign:
   191                           	callstack 0
   192  000013                     ___ftmul@exp:
   193                           	callstack 0
   194                           
   195                           ; 1 bytes @ 0x12
   196  000013                     	ds	1
   197  000014                     ___ftadd@exp2:
   198                           	callstack 0
   199  000014                     ___ftmul@f3_as_product:
   200                           	callstack 0
   201                           
   202                           ; 3 bytes @ 0x13
   203  000014                     	ds	1
   204  000015                     ___ftadd@exp1:
   205                           	callstack 0
   206                           
   207                           ; 1 bytes @ 0x14
   208  000015                     	ds	1
   209  000016                     ?___ftsub:
   210                           	callstack 0
   211  000016                     ___ftsub@f1:
   212                           	callstack 0
   213                           
   214                           ; 3 bytes @ 0x15
   215  000016                     	ds	1
   216  000017                     ___ftmul@cntr:
   217                           	callstack 0
   218                           
   219                           ; 1 bytes @ 0x16
   220  000017                     	ds	1
   221  000018                     ___ftmul@sign:
   222                           	callstack 0
   223                           
   224                           ; 1 bytes @ 0x17
   225  000018                     	ds	1
   226  000019                     ?___ftdiv:
   227                           	callstack 0
   228  000019                     ___ftdiv@f1:
   229                           	callstack 0
   230  000019                     ___ftsub@f2:
   231                           	callstack 0
   232                           
   233                           ; 3 bytes @ 0x18
   234  000019                     	ds	3
   235  00001C                     ?___fttol:
   236                           	callstack 0
   237  00001C                     ___ftdiv@f2:
   238                           	callstack 0
   239  00001C                     ___fttol@f1:
   240                           	callstack 0
   241                           
   242                           ; 3 bytes @ 0x1B
   243  00001C                     	ds	3
   244  00001F                     ??___ftdiv:
   245                           
   246                           ; 1 bytes @ 0x1E
   247  00001F                     	ds	1
   248  000020                     ??___fttol:
   249                           
   250                           ; 1 bytes @ 0x1F
   251  000020                     	ds	2
   252  000022                     ___ftdiv@cntr:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0x21
   256  000022                     	ds	1
   257  000023                     ___ftdiv@f3:
   258                           	callstack 0
   259                           
   260                           ; 3 bytes @ 0x22
   261  000023                     	ds	2
   262  000025                     ___fttol@sign1:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x24
   266  000025                     	ds	1
   267  000026                     ___ftdiv@exp:
   268                           	callstack 0
   269  000026                     ___fttol@lval:
   270                           	callstack 0
   271                           
   272                           ; 4 bytes @ 0x25
   273  000026                     	ds	1
   274  000027                     ___ftdiv@sign:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0x26
   278  000027                     	ds	3
   279  00002A                     ___fttol@exp1:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x29
   283  00002A                     	ds	1
   284  00002B                     main@adx:
   285                           	callstack 0
   286                           
   287                           ; 3 bytes @ 0x2A
   288  00002B                     	ds	3
   289  00002E                     main@tempo:
   290                           	callstack 0
   291                           
   292                           ; 3 bytes @ 0x2D
   293  00002E                     	ds	3
   294                           
   295 ;;
   296 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   297 ;;
   298 ;; *************** function _main *****************
   299 ;; Defined at:
   300 ;;		line 39 in file "main.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;		None
   303 ;; Auto vars:     Size  Location     Type
   304 ;;  tempo           3   45[COMRAM] float 
   305 ;;  adx             3   42[COMRAM] float 
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, status,2, status,0, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   315 ;;      Params:         0       0       0       0       0       0       0       0       0
   316 ;;      Locals:         6       0       0       0       0       0       0       0       0
   317 ;;      Temps:          0       0       0       0       0       0       0       0       0
   318 ;;      Totals:         6       0       0       0       0       0       0       0       0
   319 ;;Total ram usage:        6 bytes
   320 ;; Hardware stack levels required when called:    4
   321 ;; This function calls:
   322 ;;		_InitConfig
   323 ;;		_InitTimer0
   324 ;;		___awtoft
   325 ;;		___ftdiv
   326 ;;		___ftmul
   327 ;;		___ftsub
   328 ;;		___fttol
   329 ;;		_adc_read
   330 ;; This function is called by:
   331 ;;		Startup code after reset
   332 ;; This function uses a non-reentrant model
   333 ;;
   334                           
   335                           	psect	text0
   336  0001BA                     __ptext0:
   337                           	callstack 0
   338  0001BA                     _main:
   339                           	callstack 27
   340                           
   341                           ;main.c: 41: InitConfig();
   342                           
   343                           ;incstack = 0
   344  0001BA  ECAC  F003         	call	_InitConfig	;wreg free
   345                           
   346                           ;main.c: 42: InitTimer0();
   347  0001BE  ECBC  F003         	call	_InitTimer0	;wreg free
   348  0001C2                     l1447:
   349                           
   350                           ;main.c: 47: {;main.c: 48: adx = adc_read(0);
   351  0001C2  0E00               	movlw	0
   352  0001C4  EC74  F003         	call	_adc_read
   353  0001C8  C002  F00A         	movff	?_adc_read,___awtoft@c
   354  0001CC  C003  F00B         	movff	?_adc_read+1,___awtoft@c+1
   355  0001D0  EC90  F003         	call	___awtoft	;wreg free
   356  0001D4  C00A  F02B         	movff	?___awtoft,main@adx
   357  0001D8  C00B  F02C         	movff	?___awtoft+1,main@adx+1
   358  0001DC  C00C  F02D         	movff	?___awtoft+2,main@adx+2
   359                           
   360                           ;main.c: 49: tempo = (1833.0*adx)/1023.0;
   361  0001E0  0E20               	movlw	32
   362  0001E2  6E0D               	movwf	___ftmul@f2^0,c
   363  0001E4  0EE5               	movlw	229
   364  0001E6  6E0E               	movwf	(___ftmul@f2+1)^0,c
   365  0001E8  0E44               	movlw	68
   366  0001EA  6E0F               	movwf	(___ftmul@f2+2)^0,c
   367  0001EC  C02B  F00A         	movff	main@adx,___ftmul@f1
   368  0001F0  C02C  F00B         	movff	main@adx+1,___ftmul@f1+1
   369  0001F4  C02D  F00C         	movff	main@adx+2,___ftmul@f1+2
   370  0001F8  EC68  F001         	call	___ftmul	;wreg free
   371  0001FC  C00A  F019         	movff	?___ftmul,___ftdiv@f1
   372  000200  C00B  F01A         	movff	?___ftmul+1,___ftdiv@f1+1
   373  000204  C00C  F01B         	movff	?___ftmul+2,___ftdiv@f1+2
   374  000208  0EC0               	movlw	192
   375  00020A  6E1C               	movwf	___ftdiv@f2^0,c
   376  00020C  0E7F               	movlw	127
   377  00020E  6E1D               	movwf	(___ftdiv@f2+1)^0,c
   378  000210  0E44               	movlw	68
   379  000212  6E1E               	movwf	(___ftdiv@f2+2)^0,c
   380  000214  ECE2  F001         	call	___ftdiv	;wreg free
   381  000218  C019  F02E         	movff	?___ftdiv,main@tempo
   382  00021C  C01A  F02F         	movff	?___ftdiv+1,main@tempo+1
   383  000220  C01B  F030         	movff	?___ftdiv+2,main@tempo+2
   384                           
   385                           ;main.c: 50: tempo = 2000.0-tempo;
   386  000224  0E00               	movlw	0
   387  000226  6E16               	movwf	___ftsub@f1^0,c
   388  000228  0EFA               	movlw	250
   389  00022A  6E17               	movwf	(___ftsub@f1+1)^0,c
   390  00022C  0E44               	movlw	68
   391  00022E  6E18               	movwf	(___ftsub@f1+2)^0,c
   392  000230  C02E  F019         	movff	main@tempo,___ftsub@f2
   393  000234  C02F  F01A         	movff	main@tempo+1,___ftsub@f2+1
   394  000238  C030  F01B         	movff	main@tempo+2,___ftsub@f2+2
   395  00023C  EC54  F003         	call	___ftsub	;wreg free
   396  000240  C016  F02E         	movff	?___ftsub,main@tempo
   397  000244  C017  F02F         	movff	?___ftsub+1,main@tempo+1
   398  000248  C018  F030         	movff	?___ftsub+2,main@tempo+2
   399                           
   400                           ;main.c: 51: tempo *=6;
   401  00024C  C02E  F00A         	movff	main@tempo,___ftmul@f1
   402  000250  C02F  F00B         	movff	main@tempo+1,___ftmul@f1+1
   403  000254  C030  F00C         	movff	main@tempo+2,___ftmul@f1+2
   404  000258  0E00               	movlw	0
   405  00025A  6E0D               	movwf	___ftmul@f2^0,c
   406  00025C  0EC0               	movlw	192
   407  00025E  6E0E               	movwf	(___ftmul@f2+1)^0,c
   408  000260  0E40               	movlw	64
   409  000262  6E0F               	movwf	(___ftmul@f2+2)^0,c
   410  000264  EC68  F001         	call	___ftmul	;wreg free
   411  000268  C00A  F02E         	movff	?___ftmul,main@tempo
   412  00026C  C00B  F02F         	movff	?___ftmul+1,main@tempo+1
   413  000270  C00C  F030         	movff	?___ftmul+2,main@tempo+2
   414                           
   415                           ;main.c: 52: tempoInt = 65536-tempo;
   416  000274  C02E  F019         	movff	main@tempo,___ftsub@f2
   417  000278  C02F  F01A         	movff	main@tempo+1,___ftsub@f2+1
   418  00027C  C030  F01B         	movff	main@tempo+2,___ftsub@f2+2
   419  000280  0E00               	movlw	0
   420  000282  6E16               	movwf	___ftsub@f1^0,c
   421  000284  0E80               	movlw	128
   422  000286  6E17               	movwf	(___ftsub@f1+1)^0,c
   423  000288  0E47               	movlw	71
   424  00028A  6E18               	movwf	(___ftsub@f1+2)^0,c
   425  00028C  EC54  F003         	call	___ftsub	;wreg free
   426  000290  C016  F01C         	movff	?___ftsub,___fttol@f1
   427  000294  C017  F01D         	movff	?___ftsub+1,___fttol@f1+1
   428  000298  C018  F01E         	movff	?___ftsub+2,___fttol@f1+2
   429  00029C  EC55  F002         	call	___fttol	;wreg free
   430  0002A0  C01C  F031         	movff	?___fttol,_tempoInt
   431  0002A4  C01D  F032         	movff	?___fttol+1,_tempoInt+1
   432                           
   433                           ;main.c: 54: if(dente <=35 && dente >=25)
   434  0002A8  BE34               	btfsc	(_dente+1)^0,7,c
   435  0002AA  D006               	goto	u1120
   436  0002AC  5034               	movf	(_dente+1)^0,w,c
   437  0002AE  E10E               	bnz	l33
   438  0002B0  0E24               	movlw	36
   439  0002B2  5C33               	subwf	_dente^0,w,c
   440  0002B4  B0D8               	btfsc	status,0,c
   441  0002B6  D00A               	goto	l33
   442  0002B8                     u1120:
   443  0002B8  BE34               	btfsc	(_dente+1)^0,7,c
   444  0002BA  D008               	goto	l33
   445  0002BC  5034               	movf	(_dente+1)^0,w,c
   446  0002BE  E104               	bnz	u1130
   447  0002C0  0E19               	movlw	25
   448  0002C2  5C33               	subwf	_dente^0,w,c
   449  0002C4  A0D8               	btfss	status,0,c
   450  0002C6  D002               	goto	l33
   451  0002C8                     u1130:
   452                           
   453                           ;main.c: 55: PORTDbits.RD2 = 1;
   454  0002C8  8483               	bsf	131,2,c	;volatile
   455  0002CA  D77B               	goto	l1447
   456  0002CC                     l33:
   457                           
   458                           ;main.c: 56: else;main.c: 57: PORTDbits.RD2 = 0;
   459  0002CC  9483               	bcf	131,2,c	;volatile
   460  0002CE  D779               	goto	l1447
   461  0002D0                     __end_of_main:
   462                           	callstack 0
   463                           
   464 ;; *************** function _adc_read *****************
   465 ;; Defined at:
   466 ;;		line 39 in file "functions.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;  canal           1    wreg     unsigned char 
   469 ;; Auto vars:     Size  Location     Type
   470 ;;  canal           1    7[COMRAM] unsigned char 
   471 ;;  result          2    5[COMRAM] int 
   472 ;; Return value:  Size  Location     Type
   473 ;;                  2    1[COMRAM] int 
   474 ;; Registers used:
   475 ;;		wreg, status,2, status,0
   476 ;; Tracked objects:
   477 ;;		On entry : 0/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   481 ;;      Params:         2       0       0       0       0       0       0       0       0
   482 ;;      Locals:         3       0       0       0       0       0       0       0       0
   483 ;;      Temps:          2       0       0       0       0       0       0       0       0
   484 ;;      Totals:         7       0       0       0       0       0       0       0       0
   485 ;;Total ram usage:        7 bytes
   486 ;; Hardware stack levels used:    1
   487 ;; Hardware stack levels required when called:    1
   488 ;; This function calls:
   489 ;;		Nothing
   490 ;; This function is called by:
   491 ;;		_main
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           	psect	text1
   496  0006E8                     __ptext1:
   497                           	callstack 0
   498  0006E8                     _adc_read:
   499                           	callstack 29
   500                           
   501                           ;incstack = 0
   502                           ;adc_read@canal stored from wreg
   503  0006E8  6E08               	movwf	adc_read@canal^0,c
   504                           
   505                           ;functions.c: 41: int result;;functions.c: 42: ADCON0 = ADCON0 | ((canal & 0x0F) << 2);
   506  0006EA  C008  F004         	movff	adc_read@canal,??_adc_read
   507  0006EE  0E0F               	movlw	15
   508  0006F0  1604               	andwf	??_adc_read^0,f,c
   509  0006F2  90D8               	bcf	status,0,c
   510  0006F4  3604               	rlcf	??_adc_read^0,f,c
   511  0006F6  90D8               	bcf	status,0,c
   512  0006F8  3404               	rlcf	??_adc_read^0,w,c
   513  0006FA  10C2               	iorwf	194,w,c	;volatile
   514  0006FC  6EC2               	movwf	194,c	;volatile
   515                           
   516                           ;functions.c: 44: ADCON0bits.GO_nDONE = 1;
   517  0006FE  82C2               	bsf	194,1,c	;volatile
   518  000700                     l86:
   519  000700  B2C2               	btfsc	194,1,c	;volatile
   520  000702  D7FE               	goto	l86
   521                           
   522                           ;functions.c: 47: result = ADRESL + (ADRESH << 8);
   523  000704  50C4               	movf	196,w,c	;volatile
   524  000706  6E05               	movwf	(??_adc_read+1)^0,c
   525  000708  6A04               	clrf	??_adc_read^0,c
   526  00070A  50C3               	movf	195,w,c	;volatile
   527  00070C  2404               	addwf	??_adc_read^0,w,c
   528  00070E  6E06               	movwf	adc_read@result^0,c
   529  000710  0E00               	movlw	0
   530  000712  2005               	addwfc	(??_adc_read+1)^0,w,c
   531  000714  6E07               	movwf	(adc_read@result+1)^0,c
   532                           
   533                           ;functions.c: 49: return result;
   534  000716  C006  F002         	movff	adc_read@result,?_adc_read
   535  00071A  C007  F003         	movff	adc_read@result+1,?_adc_read+1
   536  00071E  0012               	return		;funcret
   537  000720                     __end_of_adc_read:
   538                           	callstack 0
   539                           
   540 ;; *************** function ___fttol *****************
   541 ;; Defined at:
   542 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fttol.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;  f1              3   27[COMRAM] float 
   545 ;; Auto vars:     Size  Location     Type
   546 ;;  lval            4   37[COMRAM] unsigned long 
   547 ;;  exp1            1   41[COMRAM] unsigned char 
   548 ;;  sign1           1   36[COMRAM] unsigned char 
   549 ;; Return value:  Size  Location     Type
   550 ;;                  4   27[COMRAM] long 
   551 ;; Registers used:
   552 ;;		wreg, status,2, status,0
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   558 ;;      Params:         4       0       0       0       0       0       0       0       0
   559 ;;      Locals:         6       0       0       0       0       0       0       0       0
   560 ;;      Temps:          5       0       0       0       0       0       0       0       0
   561 ;;      Totals:        15       0       0       0       0       0       0       0       0
   562 ;;Total ram usage:       15 bytes
   563 ;; Hardware stack levels used:    1
   564 ;; Hardware stack levels required when called:    1
   565 ;; This function calls:
   566 ;;		Nothing
   567 ;; This function is called by:
   568 ;;		_main
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           	psect	text2
   573  0004AA                     __ptext2:
   574                           	callstack 0
   575  0004AA                     ___fttol:
   576                           	callstack 29
   577                           
   578                           ;incstack = 0
   579  0004AA  C01E  F020         	movff	___fttol@f1+2,??___fttol
   580  0004AE  6A21               	clrf	(??___fttol+1)^0,c
   581  0004B0  6A22               	clrf	(??___fttol+2)^0,c
   582  0004B2  341D               	rlcf	(___fttol@f1+1)^0,w,c
   583  0004B4  3620               	rlcf	??___fttol^0,f,c
   584  0004B6  E301               	bnc	u1041
   585  0004B8  8021               	bsf	(??___fttol+1)^0,0,c
   586  0004BA                     u1041:
   587  0004BA  5020               	movf	??___fttol^0,w,c
   588  0004BC  6E2A               	movwf	___fttol@exp1^0,c
   589  0004BE  502A               	movf	___fttol@exp1^0,w,c
   590  0004C0  A4D8               	btfss	status,2,c
   591  0004C2  D009               	goto	l1405
   592  0004C4                     u1050:
   593  0004C4  0E00               	movlw	0
   594  0004C6  6E1C               	movwf	?___fttol^0,c
   595  0004C8  0E00               	movlw	0
   596  0004CA  6E1D               	movwf	(?___fttol+1)^0,c
   597  0004CC  0E00               	movlw	0
   598  0004CE  6E1E               	movwf	(?___fttol+2)^0,c
   599  0004D0  0E00               	movlw	0
   600  0004D2  6E1F               	movwf	(?___fttol+3)^0,c
   601  0004D4  0012               	return	
   602  0004D6                     l1405:
   603  0004D6  0E17               	movlw	23
   604  0004D8  6E20               	movwf	??___fttol^0,c
   605  0004DA  C01C  F021         	movff	___fttol@f1,??___fttol+1
   606  0004DE  C01D  F022         	movff	___fttol@f1+1,??___fttol+2
   607  0004E2  C01E  F023         	movff	___fttol@f1+2,??___fttol+3
   608  0004E6  2820               	incf	??___fttol^0,w,c
   609  0004E8  6E24               	movwf	(??___fttol+4)^0,c
   610  0004EA  D004               	goto	u1060
   611  0004EC                     u1065:
   612  0004EC  90D8               	bcf	status,0,c
   613  0004EE  3223               	rrcf	(??___fttol+3)^0,f,c
   614  0004F0  3222               	rrcf	(??___fttol+2)^0,f,c
   615  0004F2  3221               	rrcf	(??___fttol+1)^0,f,c
   616  0004F4                     u1060:
   617  0004F4  2E24               	decfsz	(??___fttol+4)^0,f,c
   618  0004F6  D7FA               	goto	u1065
   619  0004F8  5021               	movf	(??___fttol+1)^0,w,c
   620  0004FA  6E25               	movwf	___fttol@sign1^0,c
   621  0004FC  8E1D               	bsf	(___fttol@f1+1)^0,7,c
   622  0004FE  0EFF               	movlw	255
   623  000500  161C               	andwf	___fttol@f1^0,f,c
   624  000502  0EFF               	movlw	255
   625  000504  161D               	andwf	(___fttol@f1+1)^0,f,c
   626  000506  0E00               	movlw	0
   627  000508  161E               	andwf	(___fttol@f1+2)^0,f,c
   628  00050A  501C               	movf	___fttol@f1^0,w,c
   629  00050C  6E26               	movwf	___fttol@lval^0,c
   630  00050E  501D               	movf	(___fttol@f1+1)^0,w,c
   631  000510  6E27               	movwf	(___fttol@lval+1)^0,c
   632  000512  501E               	movf	(___fttol@f1+2)^0,w,c
   633  000514  6E28               	movwf	(___fttol@lval+2)^0,c
   634  000516  6A29               	clrf	(___fttol@lval+3)^0,c
   635  000518  0E8E               	movlw	142
   636  00051A  5E2A               	subwf	___fttol@exp1^0,f,c
   637  00051C  AE2A               	btfss	___fttol@exp1^0,7,c
   638  00051E  D00D               	goto	l1427
   639  000520  502A               	movf	___fttol@exp1^0,w,c
   640  000522  0A80               	xorlw	128
   641  000524  0F8F               	addlw	143
   642  000526  A0D8               	btfss	status,0,c
   643  000528  D7CD               	goto	u1050
   644  00052A                     l1423:
   645  00052A  90D8               	bcf	status,0,c
   646  00052C  3229               	rrcf	(___fttol@lval+3)^0,f,c
   647  00052E  3228               	rrcf	(___fttol@lval+2)^0,f,c
   648  000530  3227               	rrcf	(___fttol@lval+1)^0,f,c
   649  000532  3226               	rrcf	___fttol@lval^0,f,c
   650  000534  3E2A               	incfsz	___fttol@exp1^0,f,c
   651  000536  D7F9               	goto	l1423
   652  000538  D00D               	goto	u1100
   653  00053A                     l1427:
   654  00053A  0E17               	movlw	23
   655  00053C  642A               	cpfsgt	___fttol@exp1^0,c
   656  00053E  D007               	goto	l1435
   657  000540  D7C1               	goto	u1050
   658  000542                     l1433:
   659  000542  90D8               	bcf	status,0,c
   660  000544  3626               	rlcf	___fttol@lval^0,f,c
   661  000546  3627               	rlcf	(___fttol@lval+1)^0,f,c
   662  000548  3628               	rlcf	(___fttol@lval+2)^0,f,c
   663  00054A  3629               	rlcf	(___fttol@lval+3)^0,f,c
   664  00054C  062A               	decf	___fttol@exp1^0,f,c
   665  00054E                     l1435:
   666  00054E  502A               	movf	___fttol@exp1^0,w,c
   667  000550  A4D8               	btfss	status,2,c
   668  000552  D7F7               	goto	l1433
   669  000554                     u1100:
   670  000554  5025               	movf	___fttol@sign1^0,w,c
   671  000556  B4D8               	btfsc	status,2,c
   672  000558  D008               	goto	l1441
   673  00055A  1E29               	comf	(___fttol@lval+3)^0,f,c
   674  00055C  1E28               	comf	(___fttol@lval+2)^0,f,c
   675  00055E  1E27               	comf	(___fttol@lval+1)^0,f,c
   676  000560  6C26               	negf	___fttol@lval^0,c
   677  000562  0E00               	movlw	0
   678  000564  2227               	addwfc	(___fttol@lval+1)^0,f,c
   679  000566  2228               	addwfc	(___fttol@lval+2)^0,f,c
   680  000568  2229               	addwfc	(___fttol@lval+3)^0,f,c
   681  00056A                     l1441:
   682  00056A  C026  F01C         	movff	___fttol@lval,?___fttol
   683  00056E  C027  F01D         	movff	___fttol@lval+1,?___fttol+1
   684  000572  C028  F01E         	movff	___fttol@lval+2,?___fttol+2
   685  000576  C029  F01F         	movff	___fttol@lval+3,?___fttol+3
   686  00057A  0012               	return		;funcret
   687  00057C                     __end_of___fttol:
   688                           	callstack 0
   689                           
   690 ;; *************** function ___ftsub *****************
   691 ;; Defined at:
   692 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\ftsub.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;  f1              3   21[COMRAM] float 
   695 ;;  f2              3   24[COMRAM] float 
   696 ;; Auto vars:     Size  Location     Type
   697 ;;		None
   698 ;; Return value:  Size  Location     Type
   699 ;;                  3   21[COMRAM] float 
   700 ;; Registers used:
   701 ;;		wreg, status,2, status,0, cstack
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   707 ;;      Params:         6       0       0       0       0       0       0       0       0
   708 ;;      Locals:         0       0       0       0       0       0       0       0       0
   709 ;;      Temps:          0       0       0       0       0       0       0       0       0
   710 ;;      Totals:         6       0       0       0       0       0       0       0       0
   711 ;;Total ram usage:        6 bytes
   712 ;; Hardware stack levels used:    1
   713 ;; Hardware stack levels required when called:    3
   714 ;; This function calls:
   715 ;;		___ftadd
   716 ;; This function is called by:
   717 ;;		_main
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           	psect	text3
   722  0006A8                     __ptext3:
   723                           	callstack 0
   724  0006A8                     ___ftsub:
   725                           	callstack 27
   726                           
   727                           ;incstack = 0
   728  0006A8  5019               	movf	___ftsub@f2^0,w,c
   729  0006AA  101A               	iorwf	(___ftsub@f2+1)^0,w,c
   730  0006AC  101B               	iorwf	(___ftsub@f2+2)^0,w,c
   731  0006AE  B4D8               	btfsc	status,2,c
   732  0006B0  D006               	goto	l1383
   733  0006B2  0E00               	movlw	0
   734  0006B4  1A19               	xorwf	___ftsub@f2^0,f,c
   735  0006B6  0E00               	movlw	0
   736  0006B8  1A1A               	xorwf	(___ftsub@f2+1)^0,f,c
   737  0006BA  0E80               	movlw	128
   738  0006BC  1A1B               	xorwf	(___ftsub@f2+2)^0,f,c
   739  0006BE                     l1383:
   740  0006BE  C016  F00A         	movff	___ftsub@f1,___ftadd@f1
   741  0006C2  C017  F00B         	movff	___ftsub@f1+1,___ftadd@f1+1
   742  0006C6  C018  F00C         	movff	___ftsub@f1+2,___ftadd@f1+2
   743  0006CA  C019  F00D         	movff	___ftsub@f2,___ftadd@f2
   744  0006CE  C01A  F00E         	movff	___ftsub@f2+1,___ftadd@f2+1
   745  0006D2  C01B  F00F         	movff	___ftsub@f2+2,___ftadd@f2+2
   746  0006D6  EC09  F000         	call	___ftadd	;wreg free
   747  0006DA  C00A  F016         	movff	?___ftadd,?___ftsub
   748  0006DE  C00B  F017         	movff	?___ftadd+1,?___ftsub+1
   749  0006E2  C00C  F018         	movff	?___ftadd+2,?___ftsub+2
   750  0006E6  0012               	return		;funcret
   751  0006E8                     __end_of___ftsub:
   752                           	callstack 0
   753                           
   754 ;; *************** function ___ftadd *****************
   755 ;; Defined at:
   756 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\ftadd.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;  f1              3    9[COMRAM] float 
   759 ;;  f2              3   12[COMRAM] float 
   760 ;; Auto vars:     Size  Location     Type
   761 ;;  exp1            1   20[COMRAM] unsigned char 
   762 ;;  exp2            1   19[COMRAM] unsigned char 
   763 ;;  sign            1   18[COMRAM] unsigned char 
   764 ;; Return value:  Size  Location     Type
   765 ;;                  3    9[COMRAM] float 
   766 ;; Registers used:
   767 ;;		wreg, status,2, status,0, cstack
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   773 ;;      Params:         6       0       0       0       0       0       0       0       0
   774 ;;      Locals:         3       0       0       0       0       0       0       0       0
   775 ;;      Temps:          3       0       0       0       0       0       0       0       0
   776 ;;      Totals:        12       0       0       0       0       0       0       0       0
   777 ;;Total ram usage:       12 bytes
   778 ;; Hardware stack levels used:    1
   779 ;; Hardware stack levels required when called:    2
   780 ;; This function calls:
   781 ;;		___ftpack
   782 ;; This function is called by:
   783 ;;		___ftsub
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           	psect	text4
   788  000012                     __ptext4:
   789                           	callstack 0
   790  000012                     ___ftadd:
   791                           	callstack 27
   792                           
   793                           ;incstack = 0
   794  000012  C00C  F010         	movff	___ftadd@f1+2,??___ftadd
   795  000016  6A11               	clrf	(??___ftadd+1)^0,c
   796  000018  6A12               	clrf	(??___ftadd+2)^0,c
   797  00001A  340B               	rlcf	(___ftadd@f1+1)^0,w,c
   798  00001C  3610               	rlcf	??___ftadd^0,f,c
   799  00001E  E301               	bnc	u691
   800  000020  8011               	bsf	(??___ftadd+1)^0,0,c
   801  000022                     u691:
   802  000022  5010               	movf	??___ftadd^0,w,c
   803  000024  6E15               	movwf	___ftadd@exp1^0,c
   804  000026  C00F  F010         	movff	___ftadd@f2+2,??___ftadd
   805  00002A  6A11               	clrf	(??___ftadd+1)^0,c
   806  00002C  6A12               	clrf	(??___ftadd+2)^0,c
   807  00002E  340E               	rlcf	(___ftadd@f2+1)^0,w,c
   808  000030  3610               	rlcf	??___ftadd^0,f,c
   809  000032  E301               	bnc	u701
   810  000034  8011               	bsf	(??___ftadd+1)^0,0,c
   811  000036                     u701:
   812  000036  5010               	movf	??___ftadd^0,w,c
   813  000038  6E14               	movwf	___ftadd@exp2^0,c
   814  00003A  5015               	movf	___ftadd@exp1^0,w,c
   815  00003C  B4D8               	btfsc	status,2,c
   816  00003E  D00A               	goto	u730
   817  000040  5014               	movf	___ftadd@exp2^0,w,c
   818  000042  5C15               	subwf	___ftadd@exp1^0,w,c
   819  000044  B0D8               	btfsc	status,0,c
   820  000046  D00D               	goto	l1213
   821  000048  5015               	movf	___ftadd@exp1^0,w,c
   822  00004A  5C14               	subwf	___ftadd@exp2^0,w,c
   823  00004C  6E10               	movwf	??___ftadd^0,c
   824  00004E  0E18               	movlw	24
   825  000050  6410               	cpfsgt	??___ftadd^0,c
   826  000052  D007               	goto	l1213
   827  000054                     u730:
   828  000054  C00D  F00A         	movff	___ftadd@f2,?___ftadd
   829  000058  C00E  F00B         	movff	___ftadd@f2+1,?___ftadd+1
   830  00005C  C00F  F00C         	movff	___ftadd@f2+2,?___ftadd+2
   831  000060  0012               	return	
   832  000062                     l1213:
   833  000062  5014               	movf	___ftadd@exp2^0,w,c
   834  000064  B4D8               	btfsc	status,2,c
   835  000066  D00A               	goto	u760
   836  000068  5015               	movf	___ftadd@exp1^0,w,c
   837  00006A  5C14               	subwf	___ftadd@exp2^0,w,c
   838  00006C  B0D8               	btfsc	status,0,c
   839  00006E  D00D               	goto	l1219
   840  000070  5014               	movf	___ftadd@exp2^0,w,c
   841  000072  5C15               	subwf	___ftadd@exp1^0,w,c
   842  000074  6E10               	movwf	??___ftadd^0,c
   843  000076  0E18               	movlw	24
   844  000078  6410               	cpfsgt	??___ftadd^0,c
   845  00007A  D007               	goto	l1219
   846  00007C                     u760:
   847  00007C  C00A  F00A         	movff	___ftadd@f1,?___ftadd
   848  000080  C00B  F00B         	movff	___ftadd@f1+1,?___ftadd+1
   849  000084  C00C  F00C         	movff	___ftadd@f1+2,?___ftadd+2
   850  000088  0012               	return	
   851  00008A                     l1219:
   852  00008A  0E06               	movlw	6
   853  00008C  6E13               	movwf	___ftadd@sign^0,c
   854  00008E  BE0C               	btfsc	(___ftadd@f1+2)^0,7,c
   855  000090  8E13               	bsf	___ftadd@sign^0,7,c
   856  000092  BE0F               	btfsc	(___ftadd@f2+2)^0,7,c
   857  000094  8C13               	bsf	___ftadd@sign^0,6,c
   858  000096  8E0B               	bsf	(___ftadd@f1+1)^0,7,c
   859  000098  0EFF               	movlw	255
   860  00009A  160A               	andwf	___ftadd@f1^0,f,c
   861  00009C  0EFF               	movlw	255
   862  00009E  160B               	andwf	(___ftadd@f1+1)^0,f,c
   863  0000A0  0E00               	movlw	0
   864  0000A2  160C               	andwf	(___ftadd@f1+2)^0,f,c
   865  0000A4  8E0E               	bsf	(___ftadd@f2+1)^0,7,c
   866  0000A6  0EFF               	movlw	255
   867  0000A8  160D               	andwf	___ftadd@f2^0,f,c
   868  0000AA  0EFF               	movlw	255
   869  0000AC  160E               	andwf	(___ftadd@f2+1)^0,f,c
   870  0000AE  0E00               	movlw	0
   871  0000B0  160F               	andwf	(___ftadd@f2+2)^0,f,c
   872  0000B2  5014               	movf	___ftadd@exp2^0,w,c
   873  0000B4  5C15               	subwf	___ftadd@exp1^0,w,c
   874  0000B6  B0D8               	btfsc	status,0,c
   875  0000B8  D01B               	goto	l1245
   876  0000BA                     u790:
   877  0000BA  90D8               	bcf	status,0,c
   878  0000BC  360D               	rlcf	___ftadd@f2^0,f,c
   879  0000BE  360E               	rlcf	(___ftadd@f2+1)^0,f,c
   880  0000C0  360F               	rlcf	(___ftadd@f2+2)^0,f,c
   881  0000C2  0614               	decf	___ftadd@exp2^0,f,c
   882  0000C4  5015               	movf	___ftadd@exp1^0,w,c
   883  0000C6  1814               	xorwf	___ftadd@exp2^0,w,c
   884  0000C8  B4D8               	btfsc	status,2,c
   885  0000CA  D00D               	goto	l1243
   886  0000CC  0613               	decf	___ftadd@sign^0,f,c
   887  0000CE  C013  F010         	movff	___ftadd@sign,??___ftadd
   888  0000D2  0E07               	movlw	7
   889  0000D4  1610               	andwf	??___ftadd^0,f,c
   890  0000D6  B4D8               	btfsc	status,2,c
   891  0000D8  D006               	goto	l1243
   892  0000DA  D7EF               	goto	u790
   893  0000DC                     l1241:
   894  0000DC  90D8               	bcf	status,0,c
   895  0000DE  320C               	rrcf	(___ftadd@f1+2)^0,f,c
   896  0000E0  320B               	rrcf	(___ftadd@f1+1)^0,f,c
   897  0000E2  320A               	rrcf	___ftadd@f1^0,f,c
   898  0000E4  2A15               	incf	___ftadd@exp1^0,f,c
   899  0000E6                     l1243:
   900  0000E6  5014               	movf	___ftadd@exp2^0,w,c
   901  0000E8  1815               	xorwf	___ftadd@exp1^0,w,c
   902  0000EA  B4D8               	btfsc	status,2,c
   903  0000EC  D01F               	goto	u860
   904  0000EE  D7F6               	goto	l1241
   905  0000F0                     l1245:
   906  0000F0  5015               	movf	___ftadd@exp1^0,w,c
   907  0000F2  5C14               	subwf	___ftadd@exp2^0,w,c
   908  0000F4  B0D8               	btfsc	status,0,c
   909  0000F6  D01A               	goto	u860
   910  0000F8                     u830:
   911  0000F8  90D8               	bcf	status,0,c
   912  0000FA  360A               	rlcf	___ftadd@f1^0,f,c
   913  0000FC  360B               	rlcf	(___ftadd@f1+1)^0,f,c
   914  0000FE  360C               	rlcf	(___ftadd@f1+2)^0,f,c
   915  000100  0615               	decf	___ftadd@exp1^0,f,c
   916  000102  5015               	movf	___ftadd@exp1^0,w,c
   917  000104  1814               	xorwf	___ftadd@exp2^0,w,c
   918  000106  B4D8               	btfsc	status,2,c
   919  000108  D00D               	goto	l1255
   920  00010A  0613               	decf	___ftadd@sign^0,f,c
   921  00010C  C013  F010         	movff	___ftadd@sign,??___ftadd
   922  000110  0E07               	movlw	7
   923  000112  1610               	andwf	??___ftadd^0,f,c
   924  000114  B4D8               	btfsc	status,2,c
   925  000116  D006               	goto	l1255
   926  000118  D7EF               	goto	u830
   927  00011A                     l1253:
   928  00011A  90D8               	bcf	status,0,c
   929  00011C  320F               	rrcf	(___ftadd@f2+2)^0,f,c
   930  00011E  320E               	rrcf	(___ftadd@f2+1)^0,f,c
   931  000120  320D               	rrcf	___ftadd@f2^0,f,c
   932  000122  2A14               	incf	___ftadd@exp2^0,f,c
   933  000124                     l1255:
   934  000124  5014               	movf	___ftadd@exp2^0,w,c
   935  000126  1815               	xorwf	___ftadd@exp1^0,w,c
   936  000128  A4D8               	btfss	status,2,c
   937  00012A  D7F7               	goto	l1253
   938  00012C                     u860:
   939  00012C  AE13               	btfss	___ftadd@sign^0,7,c
   940  00012E  D00C               	goto	l422
   941  000130  0EFF               	movlw	255
   942  000132  1A0A               	xorwf	___ftadd@f1^0,f,c
   943  000134  0EFF               	movlw	255
   944  000136  1A0B               	xorwf	(___ftadd@f1+1)^0,f,c
   945  000138  0EFF               	movlw	255
   946  00013A  1A0C               	xorwf	(___ftadd@f1+2)^0,f,c
   947  00013C  0E01               	movlw	1
   948  00013E  260A               	addwf	___ftadd@f1^0,f,c
   949  000140  0E00               	movlw	0
   950  000142  220B               	addwfc	(___ftadd@f1+1)^0,f,c
   951  000144  0E00               	movlw	0
   952  000146  220C               	addwfc	(___ftadd@f1+2)^0,f,c
   953  000148                     l422:
   954  000148  AC13               	btfss	___ftadd@sign^0,6,c
   955  00014A  D00C               	goto	l1261
   956  00014C  0EFF               	movlw	255
   957  00014E  1A0D               	xorwf	___ftadd@f2^0,f,c
   958  000150  0EFF               	movlw	255
   959  000152  1A0E               	xorwf	(___ftadd@f2+1)^0,f,c
   960  000154  0EFF               	movlw	255
   961  000156  1A0F               	xorwf	(___ftadd@f2+2)^0,f,c
   962  000158  0E01               	movlw	1
   963  00015A  260D               	addwf	___ftadd@f2^0,f,c
   964  00015C  0E00               	movlw	0
   965  00015E  220E               	addwfc	(___ftadd@f2+1)^0,f,c
   966  000160  0E00               	movlw	0
   967  000162  220F               	addwfc	(___ftadd@f2+2)^0,f,c
   968  000164                     l1261:
   969  000164  0E00               	movlw	0
   970  000166  6E13               	movwf	___ftadd@sign^0,c
   971  000168  500A               	movf	___ftadd@f1^0,w,c
   972  00016A  260D               	addwf	___ftadd@f2^0,f,c
   973  00016C  500B               	movf	(___ftadd@f1+1)^0,w,c
   974  00016E  220E               	addwfc	(___ftadd@f2+1)^0,f,c
   975  000170  500C               	movf	(___ftadd@f1+2)^0,w,c
   976  000172  220F               	addwfc	(___ftadd@f2+2)^0,f,c
   977  000174  AE0F               	btfss	(___ftadd@f2+2)^0,7,c
   978  000176  D00E               	goto	l1271
   979  000178  0EFF               	movlw	255
   980  00017A  1A0D               	xorwf	___ftadd@f2^0,f,c
   981  00017C  0EFF               	movlw	255
   982  00017E  1A0E               	xorwf	(___ftadd@f2+1)^0,f,c
   983  000180  0EFF               	movlw	255
   984  000182  1A0F               	xorwf	(___ftadd@f2+2)^0,f,c
   985  000184  0E01               	movlw	1
   986  000186  260D               	addwf	___ftadd@f2^0,f,c
   987  000188  0E00               	movlw	0
   988  00018A  220E               	addwfc	(___ftadd@f2+1)^0,f,c
   989  00018C  0E00               	movlw	0
   990  00018E  220F               	addwfc	(___ftadd@f2+2)^0,f,c
   991  000190  0E01               	movlw	1
   992  000192  6E13               	movwf	___ftadd@sign^0,c
   993  000194                     l1271:
   994  000194  C00D  F002         	movff	___ftadd@f2,___ftpack@arg
   995  000198  C00E  F003         	movff	___ftadd@f2+1,___ftpack@arg+1
   996  00019C  C00F  F004         	movff	___ftadd@f2+2,___ftpack@arg+2
   997  0001A0  C015  F005         	movff	___ftadd@exp1,___ftpack@exp
   998  0001A4  C013  F006         	movff	___ftadd@sign,___ftpack@sign
   999  0001A8  ECBE  F002         	call	___ftpack	;wreg free
  1000  0001AC  C002  F00A         	movff	?___ftpack,?___ftadd
  1001  0001B0  C003  F00B         	movff	?___ftpack+1,?___ftadd+1
  1002  0001B4  C004  F00C         	movff	?___ftpack+2,?___ftadd+2
  1003  0001B8  0012               	return		;funcret
  1004  0001BA                     __end_of___ftadd:
  1005                           	callstack 0
  1006                           
  1007 ;; *************** function ___ftmul *****************
  1008 ;; Defined at:
  1009 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\ftmul.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  f1              3    9[COMRAM] float 
  1012 ;;  f2              3   12[COMRAM] float 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  f3_as_produc    3   19[COMRAM] unsigned um
  1015 ;;  sign            1   23[COMRAM] unsigned char 
  1016 ;;  cntr            1   22[COMRAM] unsigned char 
  1017 ;;  exp             1   18[COMRAM] unsigned char 
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  3    9[COMRAM] float 
  1020 ;; Registers used:
  1021 ;;		wreg, status,2, status,0, cstack
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1027 ;;      Params:         6       0       0       0       0       0       0       0       0
  1028 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1029 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1030 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1031 ;;Total ram usage:       15 bytes
  1032 ;; Hardware stack levels used:    1
  1033 ;; Hardware stack levels required when called:    2
  1034 ;; This function calls:
  1035 ;;		___ftpack
  1036 ;; This function is called by:
  1037 ;;		_main
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text5
  1042  0002D0                     __ptext5:
  1043                           	callstack 0
  1044  0002D0                     ___ftmul:
  1045                           	callstack 28
  1046                           
  1047                           ;incstack = 0
  1048  0002D0  C00C  F010         	movff	___ftmul@f1+2,??___ftmul
  1049  0002D4  6A11               	clrf	(??___ftmul+1)^0,c
  1050  0002D6  6A12               	clrf	(??___ftmul+2)^0,c
  1051  0002D8  340B               	rlcf	(___ftmul@f1+1)^0,w,c
  1052  0002DA  3610               	rlcf	??___ftmul^0,f,c
  1053  0002DC  E301               	bnc	u961
  1054  0002DE  8011               	bsf	(??___ftmul+1)^0,0,c
  1055  0002E0                     u961:
  1056  0002E0  5010               	movf	??___ftmul^0,w,c
  1057  0002E2  6E13               	movwf	___ftmul@exp^0,c
  1058  0002E4  5013               	movf	___ftmul@exp^0,w,c
  1059  0002E6  A4D8               	btfss	status,2,c
  1060  0002E8  D007               	goto	l1337
  1061  0002EA  0E00               	movlw	0
  1062  0002EC  6E0A               	movwf	?___ftmul^0,c
  1063  0002EE  0E00               	movlw	0
  1064  0002F0  6E0B               	movwf	(?___ftmul+1)^0,c
  1065  0002F2  0E00               	movlw	0
  1066  0002F4  6E0C               	movwf	(?___ftmul+2)^0,c
  1067  0002F6  0012               	return	
  1068  0002F8                     l1337:
  1069  0002F8  C00F  F010         	movff	___ftmul@f2+2,??___ftmul
  1070  0002FC  6A11               	clrf	(??___ftmul+1)^0,c
  1071  0002FE  6A12               	clrf	(??___ftmul+2)^0,c
  1072  000300  340E               	rlcf	(___ftmul@f2+1)^0,w,c
  1073  000302  3610               	rlcf	??___ftmul^0,f,c
  1074  000304  E301               	bnc	u981
  1075  000306  8011               	bsf	(??___ftmul+1)^0,0,c
  1076  000308                     u981:
  1077  000308  5010               	movf	??___ftmul^0,w,c
  1078  00030A  6E18               	movwf	___ftmul@sign^0,c
  1079  00030C  5018               	movf	___ftmul@sign^0,w,c
  1080  00030E  A4D8               	btfss	status,2,c
  1081  000310  D007               	goto	l1343
  1082  000312  0E00               	movlw	0
  1083  000314  6E0A               	movwf	?___ftmul^0,c
  1084  000316  0E00               	movlw	0
  1085  000318  6E0B               	movwf	(?___ftmul+1)^0,c
  1086  00031A  0E00               	movlw	0
  1087  00031C  6E0C               	movwf	(?___ftmul+2)^0,c
  1088  00031E  0012               	return	
  1089  000320                     l1343:
  1090  000320  5018               	movf	___ftmul@sign^0,w,c
  1091  000322  0F7B               	addlw	123
  1092  000324  2613               	addwf	___ftmul@exp^0,f,c
  1093  000326  C00C  F018         	movff	___ftmul@f1+2,___ftmul@sign
  1094  00032A  500F               	movf	(___ftmul@f2+2)^0,w,c
  1095  00032C  1A18               	xorwf	___ftmul@sign^0,f,c
  1096  00032E  0E80               	movlw	128
  1097  000330  1618               	andwf	___ftmul@sign^0,f,c
  1098  000332  8E0B               	bsf	(___ftmul@f1+1)^0,7,c
  1099  000334  8E0E               	bsf	(___ftmul@f2+1)^0,7,c
  1100  000336  0EFF               	movlw	255
  1101  000338  160D               	andwf	___ftmul@f2^0,f,c
  1102  00033A  0EFF               	movlw	255
  1103  00033C  160E               	andwf	(___ftmul@f2+1)^0,f,c
  1104  00033E  0E00               	movlw	0
  1105  000340  160F               	andwf	(___ftmul@f2+2)^0,f,c
  1106  000342  0E00               	movlw	0
  1107  000344  6E14               	movwf	___ftmul@f3_as_product^0,c
  1108  000346  0E00               	movlw	0
  1109  000348  6E15               	movwf	(___ftmul@f3_as_product+1)^0,c
  1110  00034A  0E00               	movlw	0
  1111  00034C  6E16               	movwf	(___ftmul@f3_as_product+2)^0,c
  1112  00034E  0E07               	movlw	7
  1113  000350  6E17               	movwf	___ftmul@cntr^0,c
  1114  000352                     l1357:
  1115  000352  A00A               	btfss	___ftmul@f1^0,0,c
  1116  000354  D006               	goto	l1361
  1117  000356  500D               	movf	___ftmul@f2^0,w,c
  1118  000358  2614               	addwf	___ftmul@f3_as_product^0,f,c
  1119  00035A  500E               	movf	(___ftmul@f2+1)^0,w,c
  1120  00035C  2215               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  1121  00035E  500F               	movf	(___ftmul@f2+2)^0,w,c
  1122  000360  2216               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  1123  000362                     l1361:
  1124  000362  90D8               	bcf	status,0,c
  1125  000364  320C               	rrcf	(___ftmul@f1+2)^0,f,c
  1126  000366  320B               	rrcf	(___ftmul@f1+1)^0,f,c
  1127  000368  320A               	rrcf	___ftmul@f1^0,f,c
  1128  00036A  90D8               	bcf	status,0,c
  1129  00036C  360D               	rlcf	___ftmul@f2^0,f,c
  1130  00036E  360E               	rlcf	(___ftmul@f2+1)^0,f,c
  1131  000370  360F               	rlcf	(___ftmul@f2+2)^0,f,c
  1132  000372  2E17               	decfsz	___ftmul@cntr^0,f,c
  1133  000374  D7EE               	goto	l1357
  1134  000376  0E09               	movlw	9
  1135  000378  6E17               	movwf	___ftmul@cntr^0,c
  1136  00037A                     l1367:
  1137  00037A  A00A               	btfss	___ftmul@f1^0,0,c
  1138  00037C  D006               	goto	l1371
  1139  00037E  500D               	movf	___ftmul@f2^0,w,c
  1140  000380  2614               	addwf	___ftmul@f3_as_product^0,f,c
  1141  000382  500E               	movf	(___ftmul@f2+1)^0,w,c
  1142  000384  2215               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  1143  000386  500F               	movf	(___ftmul@f2+2)^0,w,c
  1144  000388  2216               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  1145  00038A                     l1371:
  1146  00038A  90D8               	bcf	status,0,c
  1147  00038C  320C               	rrcf	(___ftmul@f1+2)^0,f,c
  1148  00038E  320B               	rrcf	(___ftmul@f1+1)^0,f,c
  1149  000390  320A               	rrcf	___ftmul@f1^0,f,c
  1150  000392  90D8               	bcf	status,0,c
  1151  000394  3216               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  1152  000396  3215               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  1153  000398  3214               	rrcf	___ftmul@f3_as_product^0,f,c
  1154  00039A  2E17               	decfsz	___ftmul@cntr^0,f,c
  1155  00039C  D7EE               	goto	l1367
  1156  00039E  C014  F002         	movff	___ftmul@f3_as_product,___ftpack@arg
  1157  0003A2  C015  F003         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1158  0003A6  C016  F004         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1159  0003AA  C013  F005         	movff	___ftmul@exp,___ftpack@exp
  1160  0003AE  C018  F006         	movff	___ftmul@sign,___ftpack@sign
  1161  0003B2  ECBE  F002         	call	___ftpack	;wreg free
  1162  0003B6  C002  F00A         	movff	?___ftpack,?___ftmul
  1163  0003BA  C003  F00B         	movff	?___ftpack+1,?___ftmul+1
  1164  0003BE  C004  F00C         	movff	?___ftpack+2,?___ftmul+2
  1165  0003C2  0012               	return		;funcret
  1166  0003C4                     __end_of___ftmul:
  1167                           	callstack 0
  1168                           
  1169 ;; *************** function ___ftdiv *****************
  1170 ;; Defined at:
  1171 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\ftdiv.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;  f1              3   24[COMRAM] float 
  1174 ;;  f2              3   27[COMRAM] float 
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  f3              3   34[COMRAM] float 
  1177 ;;  sign            1   38[COMRAM] unsigned char 
  1178 ;;  exp             1   37[COMRAM] unsigned char 
  1179 ;;  cntr            1   33[COMRAM] unsigned char 
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  3   24[COMRAM] float 
  1182 ;; Registers used:
  1183 ;;		wreg, status,2, status,0, cstack
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1189 ;;      Params:         6       0       0       0       0       0       0       0       0
  1190 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1191 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1192 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1193 ;;Total ram usage:       15 bytes
  1194 ;; Hardware stack levels used:    1
  1195 ;; Hardware stack levels required when called:    2
  1196 ;; This function calls:
  1197 ;;		___ftpack
  1198 ;; This function is called by:
  1199 ;;		_main
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           	psect	text6
  1204  0003C4                     __ptext6:
  1205                           	callstack 0
  1206  0003C4                     ___ftdiv:
  1207                           	callstack 28
  1208                           
  1209                           ;incstack = 0
  1210  0003C4  C01B  F01F         	movff	___ftdiv@f1+2,??___ftdiv
  1211  0003C8  6A20               	clrf	(??___ftdiv+1)^0,c
  1212  0003CA  6A21               	clrf	(??___ftdiv+2)^0,c
  1213  0003CC  341A               	rlcf	(___ftdiv@f1+1)^0,w,c
  1214  0003CE  361F               	rlcf	??___ftdiv^0,f,c
  1215  0003D0  E301               	bnc	u911
  1216  0003D2  8020               	bsf	(??___ftdiv+1)^0,0,c
  1217  0003D4                     u911:
  1218  0003D4  501F               	movf	??___ftdiv^0,w,c
  1219  0003D6  6E26               	movwf	___ftdiv@exp^0,c
  1220  0003D8  5026               	movf	___ftdiv@exp^0,w,c
  1221  0003DA  A4D8               	btfss	status,2,c
  1222  0003DC  D007               	goto	l1291
  1223  0003DE  0E00               	movlw	0
  1224  0003E0  6E19               	movwf	?___ftdiv^0,c
  1225  0003E2  0E00               	movlw	0
  1226  0003E4  6E1A               	movwf	(?___ftdiv+1)^0,c
  1227  0003E6  0E00               	movlw	0
  1228  0003E8  6E1B               	movwf	(?___ftdiv+2)^0,c
  1229  0003EA  0012               	return	
  1230  0003EC                     l1291:
  1231  0003EC  C01E  F01F         	movff	___ftdiv@f2+2,??___ftdiv
  1232  0003F0  6A20               	clrf	(??___ftdiv+1)^0,c
  1233  0003F2  6A21               	clrf	(??___ftdiv+2)^0,c
  1234  0003F4  341D               	rlcf	(___ftdiv@f2+1)^0,w,c
  1235  0003F6  361F               	rlcf	??___ftdiv^0,f,c
  1236  0003F8  E301               	bnc	u931
  1237  0003FA  8020               	bsf	(??___ftdiv+1)^0,0,c
  1238  0003FC                     u931:
  1239  0003FC  501F               	movf	??___ftdiv^0,w,c
  1240  0003FE  6E27               	movwf	___ftdiv@sign^0,c
  1241  000400  5027               	movf	___ftdiv@sign^0,w,c
  1242  000402  A4D8               	btfss	status,2,c
  1243  000404  D007               	goto	l1297
  1244  000406  0E00               	movlw	0
  1245  000408  6E19               	movwf	?___ftdiv^0,c
  1246  00040A  0E00               	movlw	0
  1247  00040C  6E1A               	movwf	(?___ftdiv+1)^0,c
  1248  00040E  0E00               	movlw	0
  1249  000410  6E1B               	movwf	(?___ftdiv+2)^0,c
  1250  000412  0012               	return	
  1251  000414                     l1297:
  1252  000414  0E00               	movlw	0
  1253  000416  6E23               	movwf	___ftdiv@f3^0,c
  1254  000418  0E00               	movlw	0
  1255  00041A  6E24               	movwf	(___ftdiv@f3+1)^0,c
  1256  00041C  0E00               	movlw	0
  1257  00041E  6E25               	movwf	(___ftdiv@f3+2)^0,c
  1258  000420  5027               	movf	___ftdiv@sign^0,w,c
  1259  000422  0F89               	addlw	137
  1260  000424  5E26               	subwf	___ftdiv@exp^0,f,c
  1261  000426  C01B  F027         	movff	___ftdiv@f1+2,___ftdiv@sign
  1262  00042A  501E               	movf	(___ftdiv@f2+2)^0,w,c
  1263  00042C  1A27               	xorwf	___ftdiv@sign^0,f,c
  1264  00042E  0E80               	movlw	128
  1265  000430  1627               	andwf	___ftdiv@sign^0,f,c
  1266  000432  8E1A               	bsf	(___ftdiv@f1+1)^0,7,c
  1267  000434  0EFF               	movlw	255
  1268  000436  1619               	andwf	___ftdiv@f1^0,f,c
  1269  000438  0EFF               	movlw	255
  1270  00043A  161A               	andwf	(___ftdiv@f1+1)^0,f,c
  1271  00043C  0E00               	movlw	0
  1272  00043E  161B               	andwf	(___ftdiv@f1+2)^0,f,c
  1273  000440  8E1D               	bsf	(___ftdiv@f2+1)^0,7,c
  1274  000442  0EFF               	movlw	255
  1275  000444  161C               	andwf	___ftdiv@f2^0,f,c
  1276  000446  0EFF               	movlw	255
  1277  000448  161D               	andwf	(___ftdiv@f2+1)^0,f,c
  1278  00044A  0E00               	movlw	0
  1279  00044C  161E               	andwf	(___ftdiv@f2+2)^0,f,c
  1280  00044E  0E18               	movlw	24
  1281  000450  6E22               	movwf	___ftdiv@cntr^0,c
  1282  000452                     l1317:
  1283  000452  90D8               	bcf	status,0,c
  1284  000454  3623               	rlcf	___ftdiv@f3^0,f,c
  1285  000456  3624               	rlcf	(___ftdiv@f3+1)^0,f,c
  1286  000458  3625               	rlcf	(___ftdiv@f3+2)^0,f,c
  1287  00045A  501C               	movf	___ftdiv@f2^0,w,c
  1288  00045C  5C19               	subwf	___ftdiv@f1^0,w,c
  1289  00045E  501D               	movf	(___ftdiv@f2+1)^0,w,c
  1290  000460  581A               	subwfb	(___ftdiv@f1+1)^0,w,c
  1291  000462  501E               	movf	(___ftdiv@f2+2)^0,w,c
  1292  000464  581B               	subwfb	(___ftdiv@f1+2)^0,w,c
  1293  000466  A0D8               	btfss	status,0,c
  1294  000468  D007               	goto	l433
  1295  00046A  501C               	movf	___ftdiv@f2^0,w,c
  1296  00046C  5E19               	subwf	___ftdiv@f1^0,f,c
  1297  00046E  501D               	movf	(___ftdiv@f2+1)^0,w,c
  1298  000470  5A1A               	subwfb	(___ftdiv@f1+1)^0,f,c
  1299  000472  501E               	movf	(___ftdiv@f2+2)^0,w,c
  1300  000474  5A1B               	subwfb	(___ftdiv@f1+2)^0,f,c
  1301  000476  8023               	bsf	___ftdiv@f3^0,0,c
  1302  000478                     l433:
  1303  000478  90D8               	bcf	status,0,c
  1304  00047A  3619               	rlcf	___ftdiv@f1^0,f,c
  1305  00047C  361A               	rlcf	(___ftdiv@f1+1)^0,f,c
  1306  00047E  361B               	rlcf	(___ftdiv@f1+2)^0,f,c
  1307  000480  2E22               	decfsz	___ftdiv@cntr^0,f,c
  1308  000482  D7E7               	goto	l1317
  1309  000484  C023  F002         	movff	___ftdiv@f3,___ftpack@arg
  1310  000488  C024  F003         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1311  00048C  C025  F004         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1312  000490  C026  F005         	movff	___ftdiv@exp,___ftpack@exp
  1313  000494  C027  F006         	movff	___ftdiv@sign,___ftpack@sign
  1314  000498  ECBE  F002         	call	___ftpack	;wreg free
  1315  00049C  C002  F019         	movff	?___ftpack,?___ftdiv
  1316  0004A0  C003  F01A         	movff	?___ftpack+1,?___ftdiv+1
  1317  0004A4  C004  F01B         	movff	?___ftpack+2,?___ftdiv+2
  1318  0004A8  0012               	return		;funcret
  1319  0004AA                     __end_of___ftdiv:
  1320                           	callstack 0
  1321                           
  1322 ;; *************** function ___awtoft *****************
  1323 ;; Defined at:
  1324 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awtoft.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;  c               2    9[COMRAM] int 
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  sign            1   12[COMRAM] unsigned char 
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  3    9[COMRAM] float 
  1331 ;; Registers used:
  1332 ;;		wreg, status,2, status,0, cstack
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1338 ;;      Params:         3       0       0       0       0       0       0       0       0
  1339 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1340 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1341 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1342 ;;Total ram usage:        4 bytes
  1343 ;; Hardware stack levels used:    1
  1344 ;; Hardware stack levels required when called:    2
  1345 ;; This function calls:
  1346 ;;		___ftpack
  1347 ;; This function is called by:
  1348 ;;		_main
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text7
  1353  000720                     __ptext7:
  1354                           	callstack 0
  1355  000720                     ___awtoft:
  1356                           	callstack 28
  1357                           
  1358                           ;incstack = 0
  1359  000720  0E00               	movlw	0
  1360  000722  6E0D               	movwf	___awtoft@sign^0,c
  1361  000724  AE0B               	btfss	(___awtoft@c+1)^0,7,c
  1362  000726  D006               	goto	l1395
  1363  000728  6C0A               	negf	___awtoft@c^0,c
  1364  00072A  1E0B               	comf	(___awtoft@c+1)^0,f,c
  1365  00072C  B0D8               	btfsc	status,0,c
  1366  00072E  2A0B               	incf	(___awtoft@c+1)^0,f,c
  1367  000730  0E01               	movlw	1
  1368  000732  6E0D               	movwf	___awtoft@sign^0,c
  1369  000734                     l1395:
  1370  000734  C00A  F002         	movff	___awtoft@c,___ftpack@arg
  1371  000738  C00B  F003         	movff	___awtoft@c+1,___ftpack@arg+1
  1372  00073C  6A04               	clrf	(___ftpack@arg+2)^0,c
  1373  00073E  0E8E               	movlw	142
  1374  000740  6E05               	movwf	___ftpack@exp^0,c
  1375  000742  C00D  F006         	movff	___awtoft@sign,___ftpack@sign
  1376  000746  ECBE  F002         	call	___ftpack	;wreg free
  1377  00074A  C002  F00A         	movff	?___ftpack,?___awtoft
  1378  00074E  C003  F00B         	movff	?___ftpack+1,?___awtoft+1
  1379  000752  C004  F00C         	movff	?___ftpack+2,?___awtoft+2
  1380  000756  0012               	return		;funcret
  1381  000758                     __end_of___awtoft:
  1382                           	callstack 0
  1383                           
  1384 ;; *************** function ___ftpack *****************
  1385 ;; Defined at:
  1386 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\float.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  arg             3    1[COMRAM] unsigned um
  1389 ;;  exp             1    4[COMRAM] unsigned char 
  1390 ;;  sign            1    5[COMRAM] unsigned char 
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;		None
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  3    1[COMRAM] float 
  1395 ;; Registers used:
  1396 ;;		wreg, status,2, status,0
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1402 ;;      Params:         5       0       0       0       0       0       0       0       0
  1403 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1404 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1405 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1406 ;;Total ram usage:        8 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; Hardware stack levels required when called:    1
  1409 ;; This function calls:
  1410 ;;		Nothing
  1411 ;; This function is called by:
  1412 ;;		___awtoft
  1413 ;;		___ftadd
  1414 ;;		___ftdiv
  1415 ;;		___ftmul
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           	psect	text8
  1420  00057C                     __ptext8:
  1421                           	callstack 0
  1422  00057C                     ___ftpack:
  1423                           	callstack 27
  1424                           
  1425                           ;incstack = 0
  1426  00057C  5005               	movf	___ftpack@exp^0,w,c
  1427  00057E  B4D8               	btfsc	status,2,c
  1428  000580  D005               	goto	u620
  1429  000582  5002               	movf	___ftpack@arg^0,w,c
  1430  000584  1003               	iorwf	(___ftpack@arg+1)^0,w,c
  1431  000586  1004               	iorwf	(___ftpack@arg+2)^0,w,c
  1432  000588  A4D8               	btfss	status,2,c
  1433  00058A  D00C               	goto	l1179
  1434  00058C                     u620:
  1435  00058C  0E00               	movlw	0
  1436  00058E  6E02               	movwf	?___ftpack^0,c
  1437  000590  0E00               	movlw	0
  1438  000592  6E03               	movwf	(?___ftpack+1)^0,c
  1439  000594  0E00               	movlw	0
  1440  000596  6E04               	movwf	(?___ftpack+2)^0,c
  1441  000598  0012               	return	
  1442  00059A                     l1177:
  1443  00059A  2A05               	incf	___ftpack@exp^0,f,c
  1444  00059C  90D8               	bcf	status,0,c
  1445  00059E  3204               	rrcf	(___ftpack@arg+2)^0,f,c
  1446  0005A0  3203               	rrcf	(___ftpack@arg+1)^0,f,c
  1447  0005A2  3202               	rrcf	___ftpack@arg^0,f,c
  1448  0005A4                     l1179:
  1449  0005A4  0E00               	movlw	0
  1450  0005A6  1402               	andwf	___ftpack@arg^0,w,c
  1451  0005A8  6E07               	movwf	??___ftpack^0,c
  1452  0005AA  0E00               	movlw	0
  1453  0005AC  1403               	andwf	(___ftpack@arg+1)^0,w,c
  1454  0005AE  6E08               	movwf	(??___ftpack+1)^0,c
  1455  0005B0  0EFE               	movlw	254
  1456  0005B2  1404               	andwf	(___ftpack@arg+2)^0,w,c
  1457  0005B4  6E09               	movwf	(??___ftpack+2)^0,c
  1458  0005B6  5007               	movf	??___ftpack^0,w,c
  1459  0005B8  1008               	iorwf	(??___ftpack+1)^0,w,c
  1460  0005BA  1009               	iorwf	(??___ftpack+2)^0,w,c
  1461  0005BC  B4D8               	btfsc	status,2,c
  1462  0005BE  D00C               	goto	l1185
  1463  0005C0  D7EC               	goto	l1177
  1464  0005C2                     l1181:
  1465  0005C2  2A05               	incf	___ftpack@exp^0,f,c
  1466  0005C4  0E01               	movlw	1
  1467  0005C6  2602               	addwf	___ftpack@arg^0,f,c
  1468  0005C8  0E00               	movlw	0
  1469  0005CA  2203               	addwfc	(___ftpack@arg+1)^0,f,c
  1470  0005CC  0E00               	movlw	0
  1471  0005CE  2204               	addwfc	(___ftpack@arg+2)^0,f,c
  1472  0005D0  90D8               	bcf	status,0,c
  1473  0005D2  3204               	rrcf	(___ftpack@arg+2)^0,f,c
  1474  0005D4  3203               	rrcf	(___ftpack@arg+1)^0,f,c
  1475  0005D6  3202               	rrcf	___ftpack@arg^0,f,c
  1476  0005D8                     l1185:
  1477  0005D8  0E00               	movlw	0
  1478  0005DA  1402               	andwf	___ftpack@arg^0,w,c
  1479  0005DC  6E07               	movwf	??___ftpack^0,c
  1480  0005DE  0E00               	movlw	0
  1481  0005E0  1403               	andwf	(___ftpack@arg+1)^0,w,c
  1482  0005E2  6E08               	movwf	(??___ftpack+1)^0,c
  1483  0005E4  0EFF               	movlw	255
  1484  0005E6  1404               	andwf	(___ftpack@arg+2)^0,w,c
  1485  0005E8  6E09               	movwf	(??___ftpack+2)^0,c
  1486  0005EA  5007               	movf	??___ftpack^0,w,c
  1487  0005EC  1008               	iorwf	(??___ftpack+1)^0,w,c
  1488  0005EE  1009               	iorwf	(??___ftpack+2)^0,w,c
  1489  0005F0  B4D8               	btfsc	status,2,c
  1490  0005F2  D006               	goto	l1189
  1491  0005F4  D7E6               	goto	l1181
  1492  0005F6                     l1187:
  1493  0005F6  0605               	decf	___ftpack@exp^0,f,c
  1494  0005F8  90D8               	bcf	status,0,c
  1495  0005FA  3602               	rlcf	___ftpack@arg^0,f,c
  1496  0005FC  3603               	rlcf	(___ftpack@arg+1)^0,f,c
  1497  0005FE  3604               	rlcf	(___ftpack@arg+2)^0,f,c
  1498  000600                     l1189:
  1499  000600  BE03               	btfsc	(___ftpack@arg+1)^0,7,c
  1500  000602  D003               	goto	u660
  1501  000604  0E02               	movlw	2
  1502  000606  6005               	cpfslt	___ftpack@exp^0,c
  1503  000608  D7F6               	goto	l1187
  1504  00060A                     u660:
  1505  00060A  A005               	btfss	___ftpack@exp^0,0,c
  1506  00060C  9E03               	bcf	(___ftpack@arg+1)^0,7,c
  1507  00060E  90D8               	bcf	status,0,c
  1508  000610  3205               	rrcf	___ftpack@exp^0,f,c
  1509  000612  5005               	movf	___ftpack@exp^0,w,c
  1510  000614  1204               	iorwf	(___ftpack@arg+2)^0,f,c
  1511  000616  5006               	movf	___ftpack@sign^0,w,c
  1512  000618  A4D8               	btfss	status,2,c
  1513  00061A  8E04               	bsf	(___ftpack@arg+2)^0,7,c
  1514  00061C  C002  F002         	movff	___ftpack@arg,?___ftpack
  1515  000620  C003  F003         	movff	___ftpack@arg+1,?___ftpack+1
  1516  000624  C004  F004         	movff	___ftpack@arg+2,?___ftpack+2
  1517  000628  0012               	return		;funcret
  1518  00062A                     __end_of___ftpack:
  1519                           	callstack 0
  1520                           
  1521 ;; *************** function _InitTimer0 *****************
  1522 ;; Defined at:
  1523 ;;		line 26 in file "functions.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg, status,2
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1537 ;;      Params:         0       0       0       0       0       0       0       0       0
  1538 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1539 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1540 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1541 ;;Total ram usage:        0 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; Hardware stack levels required when called:    1
  1544 ;; This function calls:
  1545 ;;		Nothing
  1546 ;; This function is called by:
  1547 ;;		_main
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text9
  1552  000778                     __ptext9:
  1553                           	callstack 0
  1554  000778                     _InitTimer0:
  1555                           	callstack 29
  1556                           
  1557                           ;functions.c: 28: TMR0ON = 0;
  1558                           
  1559                           ;incstack = 0
  1560  000778  9ED5               	bcf	4053,7,c	;volatile
  1561                           
  1562                           ;functions.c: 29: T08BIT = 0;
  1563  00077A  9CD5               	bcf	4053,6,c	;volatile
  1564                           
  1565                           ;functions.c: 30: T0CS = 0;
  1566  00077C  9AD5               	bcf	4053,5,c	;volatile
  1567                           
  1568                           ;functions.c: 31: T0SE = 0;
  1569  00077E  98D5               	bcf	4053,4,c	;volatile
  1570                           
  1571                           ;functions.c: 32: PSA = 1;
  1572  000780  86D5               	bsf	4053,3,c	;volatile
  1573                           
  1574                           ;functions.c: 33: T0CONbits.T0PS0 = 0;
  1575  000782  90D5               	bcf	213,0,c	;volatile
  1576                           
  1577                           ;functions.c: 34: T0CONbits.T0PS1 = 0;
  1578  000784  92D5               	bcf	213,1,c	;volatile
  1579                           
  1580                           ;functions.c: 35: T0CONbits.T0PS2 = 0;
  1581  000786  94D5               	bcf	213,2,c	;volatile
  1582                           
  1583                           ;functions.c: 36: TMR0 = 64360;
  1584  000788  0EFB               	movlw	251
  1585  00078A  6ED7               	movwf	215,c	;volatile
  1586  00078C  0E68               	movlw	104
  1587  00078E  6ED6               	movwf	214,c	;volatile
  1588                           
  1589                           ;functions.c: 37: TMR0ON = 1;
  1590  000790  8ED5               	bsf	4053,7,c	;volatile
  1591  000792  0012               	return		;funcret
  1592  000794                     __end_of_InitTimer0:
  1593                           	callstack 0
  1594                           
  1595 ;; *************** function _InitConfig *****************
  1596 ;; Defined at:
  1597 ;;		line 11 in file "functions.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;		None
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      void 
  1604 ;; Registers used:
  1605 ;;		wreg, status,2
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1611 ;;      Params:         0       0       0       0       0       0       0       0       0
  1612 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1613 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1614 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1615 ;;Total ram usage:        0 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:    1
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_main
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text10
  1626  000758                     __ptext10:
  1627                           	callstack 0
  1628  000758                     _InitConfig:
  1629                           	callstack 29
  1630                           
  1631                           ;functions.c: 13: TRISD = 0x00;
  1632                           
  1633                           ;incstack = 0
  1634  000758  0E00               	movlw	0
  1635  00075A  6E95               	movwf	149,c	;volatile
  1636                           
  1637                           ;functions.c: 14: PORTD = 0x00;
  1638  00075C  0E00               	movlw	0
  1639  00075E  6E83               	movwf	131,c	;volatile
  1640                           
  1641                           ;functions.c: 15: TRISA = 0xFF;
  1642  000760  6892               	setf	146,c	;volatile
  1643                           
  1644                           ;functions.c: 16: ADCON0 = 0x01;
  1645  000762  0E01               	movlw	1
  1646  000764  6EC2               	movwf	194,c	;volatile
  1647                           
  1648                           ;functions.c: 17: ADCON1 = 0x0E;
  1649  000766  0E0E               	movlw	14
  1650  000768  6EC1               	movwf	193,c	;volatile
  1651                           
  1652                           ;functions.c: 18: ADCON2 = 0x80;
  1653  00076A  0E80               	movlw	128
  1654  00076C  6EC0               	movwf	192,c	;volatile
  1655                           
  1656                           ;functions.c: 21: GIE = 1;
  1657  00076E  8EF2               	bsf	4082,7,c	;volatile
  1658                           
  1659                           ;functions.c: 22: PEIE = 1;
  1660  000770  8CF2               	bsf	4082,6,c	;volatile
  1661                           
  1662                           ;functions.c: 23: TMR0IE = 1;
  1663  000772  8AF2               	bsf	4082,5,c	;volatile
  1664                           
  1665                           ;functions.c: 24: TMR0IF = 0;
  1666  000774  94F2               	bcf	4082,2,c	;volatile
  1667  000776  0012               	return		;funcret
  1668  000778                     __end_of_InitConfig:
  1669                           	callstack 0
  1670                           
  1671 ;; *************** function _my_isr_routine *****************
  1672 ;; Defined at:
  1673 ;;		line 17 in file "main.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;		None
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;		None
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg, status,2, status,0
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1687 ;;      Params:         0       0       0       0       0       0       0       0       0
  1688 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1689 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1690 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1691 ;;Total ram usage:        1 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; This function calls:
  1694 ;;		Nothing
  1695 ;; This function is called by:
  1696 ;;		Interrupt level 2
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	intcode
  1701  000008                     __pintcode:
  1702                           	callstack 0
  1703  000008                     _my_isr_routine:
  1704                           	callstack 27
  1705                           
  1706                           ;incstack = 0
  1707  000008  8235               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1708  00000A  ED15  F003         	call	int_func,f	;refresh shadow registers
  1709                           
  1710                           	psect	intcode_body
  1711  00062A                     __pintcode_body:
  1712                           	callstack 27
  1713  00062A                     int_func:
  1714                           	callstack 27
  1715  00062A  0006               	pop		; remove dummy address from shadow register refresh
  1716                           
  1717                           ;main.c: 19: if(TMR0IF)
  1718  00062C  A4F2               	btfss	4082,2,c	;volatile
  1719  00062E  D03A               	goto	i2l27
  1720                           
  1721                           ;main.c: 20: {;main.c: 21: TMR0 = tempoInt;
  1722  000630  C031  FFD6         	movff	_tempoInt,4054	;volatile
  1723  000634  C032  FFD7         	movff	_tempoInt+1,4055	;volatile
  1724                           
  1725                           ;main.c: 22: TMR0IF = 0;
  1726  000638  94F2               	bcf	4082,2,c	;volatile
  1727                           
  1728                           ;main.c: 23: dente ++;
  1729  00063A  4A33               	infsnz	_dente^0,f,c
  1730  00063C  2A34               	incf	(_dente+1)^0,f,c
  1731                           
  1732                           ;main.c: 24: if(dente <= 58)
  1733  00063E  BE34               	btfsc	(_dente+1)^0,7,c
  1734  000640  D006               	goto	i2u53_40
  1735  000642  5034               	movf	(_dente+1)^0,w,c
  1736  000644  E110               	bnz	i2l1141
  1737  000646  0E3B               	movlw	59
  1738  000648  5C33               	subwf	_dente^0,w,c
  1739  00064A  B0D8               	btfsc	status,0,c
  1740  00064C  D00C               	goto	i2l1141
  1741  00064E                     i2u53_40:
  1742                           
  1743                           ;main.c: 25: {;main.c: 26: PORTDbits.RD0 = !PORTDbits.RD0;
  1744  00064E  B083               	btfsc	131,0,c	;volatile
  1745  000650  D003               	goto	i2u54_40
  1746  000652  6A01               	clrf	??_my_isr_routine^0,c
  1747  000654  2A01               	incf	??_my_isr_routine^0,f,c
  1748  000656  D001               	goto	i2u55_48
  1749  000658                     i2u54_40:
  1750  000658  6A01               	clrf	??_my_isr_routine^0,c
  1751  00065A                     i2u55_48:
  1752  00065A  5083               	movf	131,w,c	;volatile
  1753  00065C  1801               	xorwf	??_my_isr_routine^0,w,c
  1754  00065E  0BFE               	andlw	-2
  1755  000660  1801               	xorwf	??_my_isr_routine^0,w,c
  1756  000662  6E83               	movwf	131,c	;volatile
  1757                           
  1758                           ;main.c: 27: }
  1759  000664  D00E               	goto	i2l1147
  1760  000666                     i2l1141:
  1761                           
  1762                           ;main.c: 28: else if(dente <= 60)
  1763  000666  BE34               	btfsc	(_dente+1)^0,7,c
  1764  000668  D006               	goto	i2u56_40
  1765  00066A  5034               	movf	(_dente+1)^0,w,c
  1766  00066C  E106               	bnz	i2l1145
  1767  00066E  0E3D               	movlw	61
  1768  000670  5C33               	subwf	_dente^0,w,c
  1769  000672  B0D8               	btfsc	status,0,c
  1770  000674  D002               	goto	i2l1145
  1771  000676                     i2u56_40:
  1772                           
  1773                           ;main.c: 29: {;main.c: 30: PORTDbits.RD0 = 0;
  1774  000676  9083               	bcf	131,0,c	;volatile
  1775                           
  1776                           ;main.c: 31: }
  1777  000678  D004               	goto	i2l1147
  1778  00067A                     i2l1145:
  1779                           
  1780                           ;main.c: 32: else dente = 0;
  1781  00067A  0E00               	movlw	0
  1782  00067C  6E34               	movwf	(_dente+1)^0,c
  1783  00067E  0E00               	movlw	0
  1784  000680  6E33               	movwf	_dente^0,c
  1785  000682                     i2l1147:
  1786                           
  1787                           ;main.c: 33: if (dente == 1)
  1788  000682  0433               	decf	_dente^0,w,c
  1789  000684  1034               	iorwf	(_dente+1)^0,w,c
  1790  000686  A4D8               	btfss	status,2,c
  1791  000688  D00D               	goto	i2l27
  1792                           
  1793                           ;main.c: 34: {;main.c: 35: PORTDbits.RD1 =~ PORTDbits.RD1;
  1794  00068A  A283               	btfss	131,1,c	;volatile
  1795  00068C  D002               	goto	i2u58_40
  1796  00068E  0E01               	movlw	1
  1797  000690  D001               	goto	i2u58_46
  1798  000692                     i2u58_40:
  1799  000692  0E00               	movlw	0
  1800  000694                     i2u58_46:
  1801  000694  0AFF               	xorlw	255
  1802  000696  6E01               	movwf	??_my_isr_routine^0,c
  1803  000698  4601               	rlncf	??_my_isr_routine^0,f,c
  1804  00069A  5083               	movf	131,w,c	;volatile
  1805  00069C  1801               	xorwf	??_my_isr_routine^0,w,c
  1806  00069E  0BFD               	andlw	-3
  1807  0006A0  1801               	xorwf	??_my_isr_routine^0,w,c
  1808  0006A2  6E83               	movwf	131,c	;volatile
  1809  0006A4                     i2l27:
  1810  0006A4  9235               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1811  0006A6  0011               	retfie		f
  1812  0006A8                     __end_of_my_isr_routine:
  1813                           	callstack 0
  1814  0000                     
  1815                           	psect	rparam
  1816  0000                     
  1817                           	psect	temp
  1818  000035                     btemp:
  1819                           	callstack 0
  1820  000035                     	ds	1
  1821  0000                     int$flags	set	btemp
  1822  0000                     wtemp8	set	btemp+1
  1823  0000                     ttemp5	set	btemp+1
  1824  0000                     ttemp6	set	btemp+4
  1825  0000                     ttemp7	set	btemp+8
  1826                           
  1827                           	psect	idloc
  1828                           
  1829                           ;Config register IDLOC0 @ 0x200000
  1830                           ;	unspecified, using default values
  1831  200000                     	org	2097152
  1832  200000  FF                 	db	255
  1833                           
  1834                           ;Config register IDLOC1 @ 0x200001
  1835                           ;	unspecified, using default values
  1836  200001                     	org	2097153
  1837  200001  FF                 	db	255
  1838                           
  1839                           ;Config register IDLOC2 @ 0x200002
  1840                           ;	unspecified, using default values
  1841  200002                     	org	2097154
  1842  200002  FF                 	db	255
  1843                           
  1844                           ;Config register IDLOC3 @ 0x200003
  1845                           ;	unspecified, using default values
  1846  200003                     	org	2097155
  1847  200003  FF                 	db	255
  1848                           
  1849                           ;Config register IDLOC4 @ 0x200004
  1850                           ;	unspecified, using default values
  1851  200004                     	org	2097156
  1852  200004  FF                 	db	255
  1853                           
  1854                           ;Config register IDLOC5 @ 0x200005
  1855                           ;	unspecified, using default values
  1856  200005                     	org	2097157
  1857  200005  FF                 	db	255
  1858                           
  1859                           ;Config register IDLOC6 @ 0x200006
  1860                           ;	unspecified, using default values
  1861  200006                     	org	2097158
  1862  200006  FF                 	db	255
  1863                           
  1864                           ;Config register IDLOC7 @ 0x200007
  1865                           ;	unspecified, using default values
  1866  200007                     	org	2097159
  1867  200007  FF                 	db	255
  1868                           
  1869                           	psect	config
  1870                           
  1871                           ;Config register CONFIG1L @ 0x300000
  1872                           ;	PLL Prescaler Selection bits
  1873                           ;	PLLDIV = 4, Divide by 4 (16 MHz oscillator input)
  1874                           ;	System Clock Postscaler Selection bits
  1875                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1876                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1877                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1878  300000                     	org	3145728
  1879  300000  03                 	db	3
  1880                           
  1881                           ;Config register CONFIG1H @ 0x300001
  1882                           ;	Oscillator Selection bits
  1883                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  1884                           ;	Fail-Safe Clock Monitor Enable bit
  1885                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1886                           ;	Internal/External Oscillator Switchover bit
  1887                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1888  300001                     	org	3145729
  1889  300001  0E                 	db	14
  1890                           
  1891                           ;Config register CONFIG2L @ 0x300002
  1892                           ;	Power-up Timer Enable bit
  1893                           ;	PWRT = OFF, PWRT disabled
  1894                           ;	Brown-out Reset Enable bits
  1895                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1896                           ;	Brown-out Reset Voltage bits
  1897                           ;	BORV = 3, Minimum setting 2.05V
  1898                           ;	USB Voltage Regulator Enable bit
  1899                           ;	VREGEN = OFF, USB voltage regulator disabled
  1900  300002                     	org	3145730
  1901  300002  19                 	db	25
  1902                           
  1903                           ;Config register CONFIG2H @ 0x300003
  1904                           ;	Watchdog Timer Enable bit
  1905                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1906                           ;	Watchdog Timer Postscale Select bits
  1907                           ;	WDTPS = 32768, 1:32768
  1908  300003                     	org	3145731
  1909  300003  1E                 	db	30
  1910                           
  1911                           ; Padding undefined space
  1912  300004                     	org	3145732
  1913  300004  FF                 	db	255
  1914                           
  1915                           ;Config register CONFIG3H @ 0x300005
  1916                           ;	CCP2 MUX bit
  1917                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1918                           ;	PORTB A/D Enable bit
  1919                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1920                           ;	Low-Power Timer 1 Oscillator Enable bit
  1921                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1922                           ;	MCLR Pin Enable bit
  1923                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  1924  300005                     	org	3145733
  1925  300005  01                 	db	1
  1926                           
  1927                           ;Config register CONFIG4L @ 0x300006
  1928                           ;	Stack Full/Underflow Reset Enable bit
  1929                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1930                           ;	Single-Supply ICSP Enable bit
  1931                           ;	LVP = ON, Single-Supply ICSP enabled
  1932                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1933                           ;	ICPRT = OFF, ICPORT disabled
  1934                           ;	Extended Instruction Set Enable bit
  1935                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1936                           ;	Background Debugger Enable bit
  1937                           ;	DEBUG = 0x1, unprogrammed default
  1938  300006                     	org	3145734
  1939  300006  85                 	db	133
  1940                           
  1941                           ; Padding undefined space
  1942  300007                     	org	3145735
  1943  300007  FF                 	db	255
  1944                           
  1945                           ;Config register CONFIG5L @ 0x300008
  1946                           ;	unspecified, using default values
  1947                           ;	Code Protection bit
  1948                           ;	CP0 = 0x1, unprogrammed default
  1949                           ;	Code Protection bit
  1950                           ;	CP1 = 0x1, unprogrammed default
  1951                           ;	Code Protection bit
  1952                           ;	CP2 = 0x1, unprogrammed default
  1953                           ;	Code Protection bit
  1954                           ;	CP3 = 0x1, unprogrammed default
  1955  300008                     	org	3145736
  1956  300008  0F                 	db	15
  1957                           
  1958                           ;Config register CONFIG5H @ 0x300009
  1959                           ;	unspecified, using default values
  1960                           ;	Boot Block Code Protection bit
  1961                           ;	CPB = 0x1, unprogrammed default
  1962                           ;	Data EEPROM Code Protection bit
  1963                           ;	CPD = 0x1, unprogrammed default
  1964  300009                     	org	3145737
  1965  300009  C0                 	db	192
  1966                           
  1967                           ;Config register CONFIG6L @ 0x30000A
  1968                           ;	unspecified, using default values
  1969                           ;	Write Protection bit
  1970                           ;	WRT0 = 0x1, unprogrammed default
  1971                           ;	Write Protection bit
  1972                           ;	WRT1 = 0x1, unprogrammed default
  1973                           ;	Write Protection bit
  1974                           ;	WRT2 = 0x1, unprogrammed default
  1975                           ;	Write Protection bit
  1976                           ;	WRT3 = 0x1, unprogrammed default
  1977  30000A                     	org	3145738
  1978  30000A  0F                 	db	15
  1979                           
  1980                           ;Config register CONFIG6H @ 0x30000B
  1981                           ;	unspecified, using default values
  1982                           ;	Configuration Register Write Protection bit
  1983                           ;	WRTC = 0x1, unprogrammed default
  1984                           ;	Boot Block Write Protection bit
  1985                           ;	WRTB = 0x1, unprogrammed default
  1986                           ;	Data EEPROM Write Protection bit
  1987                           ;	WRTD = 0x1, unprogrammed default
  1988  30000B                     	org	3145739
  1989  30000B  E0                 	db	224
  1990                           
  1991                           ;Config register CONFIG7L @ 0x30000C
  1992                           ;	unspecified, using default values
  1993                           ;	Table Read Protection bit
  1994                           ;	EBTR0 = 0x1, unprogrammed default
  1995                           ;	Table Read Protection bit
  1996                           ;	EBTR1 = 0x1, unprogrammed default
  1997                           ;	Table Read Protection bit
  1998                           ;	EBTR2 = 0x1, unprogrammed default
  1999                           ;	Table Read Protection bit
  2000                           ;	EBTR3 = 0x1, unprogrammed default
  2001  30000C                     	org	3145740
  2002  30000C  0F                 	db	15
  2003                           
  2004                           ;Config register CONFIG7H @ 0x30000D
  2005                           ;	unspecified, using default values
  2006                           ;	Boot Block Table Read Protection bit
  2007                           ;	EBTRB = 0x1, unprogrammed default
  2008  30000D                     	org	3145741
  2009  30000D  40                 	db	64
  2010                           tosu	equ	0xFFF
  2011                           tosh	equ	0xFFE
  2012                           tosl	equ	0xFFD
  2013                           stkptr	equ	0xFFC
  2014                           pclatu	equ	0xFFB
  2015                           pclath	equ	0xFFA
  2016                           pcl	equ	0xFF9
  2017                           tblptru	equ	0xFF8
  2018                           tblptrh	equ	0xFF7
  2019                           tblptrl	equ	0xFF6
  2020                           tablat	equ	0xFF5
  2021                           prodh	equ	0xFF4
  2022                           prodl	equ	0xFF3
  2023                           indf0	equ	0xFEF
  2024                           postinc0	equ	0xFEE
  2025                           postdec0	equ	0xFED
  2026                           preinc0	equ	0xFEC
  2027                           plusw0	equ	0xFEB
  2028                           fsr0h	equ	0xFEA
  2029                           fsr0l	equ	0xFE9
  2030                           wreg	equ	0xFE8
  2031                           indf1	equ	0xFE7
  2032                           postinc1	equ	0xFE6
  2033                           postdec1	equ	0xFE5
  2034                           preinc1	equ	0xFE4
  2035                           plusw1	equ	0xFE3
  2036                           fsr1h	equ	0xFE2
  2037                           fsr1l	equ	0xFE1
  2038                           bsr	equ	0xFE0
  2039                           indf2	equ	0xFDF
  2040                           postinc2	equ	0xFDE
  2041                           postdec2	equ	0xFDD
  2042                           preinc2	equ	0xFDC
  2043                           plusw2	equ	0xFDB
  2044                           fsr2h	equ	0xFDA
  2045                           fsr2l	equ	0xFD9
  2046                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      52
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___fttol
    ___fttol->___ftsub
    ___ftsub->___ftadd
    ___ftadd->___ftpack
    ___ftmul->___ftpack
    ___ftdiv->___ftmul
    ___awtoft->___ftpack

Critical Paths under _my_isr_routine in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_isr_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr_routine in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr_routine in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_isr_routine in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _my_isr_routine in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _my_isr_routine in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _my_isr_routine in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _my_isr_routine in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   14937
                                             42 COMRAM     6     6      0
                         _InitConfig
                         _InitTimer0
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                           _adc_read
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             7     5      2      45
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     328
                                             27 COMRAM    15    11      4
                            ___ftsub (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    4459
                                             21 COMRAM     6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    3962
                                              9 COMRAM    12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3600
                                              9 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3402
                                             24 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    3011
                                              9 COMRAM     4     1      3
                           ___ftpack
                           _adc_read (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2844
                                              1 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitConfig                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _my_isr_routine                                       1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitConfig
   _InitTimer0
   ___awtoft
     ___ftpack
     _adc_read (ARG)
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftmul
     ___ftpack
   ___ftsub
     ___ftadd
       ___ftpack
   ___fttol
     ___ftsub (ARG)
       ___ftadd
         ___ftpack
   _adc_read

 _my_isr_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     30      34       1       55.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      34      20        0.0%
DATA                 0      0      34       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Jul 05 12:06:50 2020

                     l33 02CC                       l86 0700             ___ftadd@exp1 0015  
           ___ftadd@exp2 0014             ___ftadd@sign 0013                      l422 0148  
                    l433 0478                      _GIE 007F97                      u620 058C  
                    u701 0036                      u730 0054                      u660 060A  
                    u830 00F8                      u911 03D4                      _PSA 007EAB  
                    u760 007C                      u931 03FC                      u691 0022  
                    u860 012C                      u790 00BA                      u961 02E0  
                    u981 0308             ___ftdiv@cntr 0022             ___ftdiv@sign 0027  
                   l1213 0062                     l1241 00DC                     l1243 00E6  
                   l1219 008A                     l1181 05C2                     l1317 0452  
                   l1261 0164                     l1253 011A                     l1245 00F0  
                   l1405 04D6                     l1343 0320                     l1271 0194  
                   l1255 0124                     l1423 052A                     l1185 05D8  
                   l1177 059A                     l1361 0362                     l1337 02F8  
                   l1441 056A                     l1433 0542                     l1187 05F6  
                   l1179 05A4                     l1291 03EC                     l1371 038A  
                   l1435 054E                     l1427 053A                     l1189 0600  
                   l1357 0352                     l1367 037A                     l1383 06BE  
                   l1447 01C2                     l1297 0414                     l1395 0734  
                   _T0CS 007EAD                     u1100 0554                     u1120 02B8  
                   u1041 04BA                     u1050 04C4                     u1130 02C8  
                   u1060 04F4                     u1065 04EC                     _T0SE 007EAC  
                   _PEIE 007F96                     i2l27 06A4                     _TMR0 000FD6  
                   _main 01BA             ___ftpack@arg 0002             ___ftpack@exp 0005  
                   btemp 0035                     start 000E             ___ftmul@cntr 0017  
           ___param_bank 000000             ___ftmul@sign 0018             ___fttol@exp1 002A  
           ___fttol@lval 0026                    ?_main 0001          __end_of___ftadd 01BA  
        __end_of___ftdiv 04AA          __end_of___ftmul 03C4          __end_of___ftsub 06E8  
        __end_of___fttol 057C                    _PORTD 000F83                    _TRISA 000F92  
                  _TRISD 000F95            ___awtoft@sign 000D                    _dente 0033  
          ___ftpack@sign 0006                    ttemp5 0036                    ttemp6 0039  
                  ttemp7 003D                    status 000FD8                    wtemp8 0036  
             _InitConfig 0758          __initialization 0794               _InitTimer0 0778  
           __end_of_main 02D0                   ??_main 002B            ___fttol@sign1 0025  
          __activetblptr 000000                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _T08BIT 007EAE         __end_of___awtoft 0758         __end_of___ftpack 062A  
       __end_of_adc_read 0720                   i2l1141 0666                   i2l1145 067A  
                 i2l1147 0682                   _TMR0IE 007F95                   _TMR0IF 007F92  
                 _TMR0ON 007EAF                ??___ftadd 0010                ??___ftdiv 001F  
              ??___ftmul 0010                ??___ftsub 001C                ??___fttol 0020  
  ___ftmul@f3_as_product 0014               __accesstop 0060  __end_of__initialization 0798  
             ___ftadd@f1 000A               ___ftadd@f2 000D            ___rparam_used 000001  
             ___ftdiv@f1 0019               ___ftdiv@f2 001C               ___ftdiv@f3 0023  
            ?_InitConfig 0001               ___awtoft@c 000A               ___ftmul@f1 000A  
             ___ftmul@f2 000D               ___ftsub@f1 0016               ___ftsub@f2 0019  
             ___fttol@f1 001C           __pcstackCOMRAM 0001              ?_InitTimer0 0001  
             __pnvCOMRAM 0031           adc_read@result 0006                ?___awtoft 000A  
              ?___ftpack 0002                ?_adc_read 0002      __size_of_InitConfig 0020  
                i2u53_40 064E                  i2u54_40 0658                  i2u56_40 0676  
                i2u55_48 065A                  i2u58_40 0692                  i2u58_46 0694  
    __size_of_InitTimer0 001C  __size_of_my_isr_routine 06A0                  __Hparam 0000  
                __Lparam 0000                  ___ftadd 0012                  ___ftdiv 03C4  
                ___ftmul 02D0                  ___ftsub 06A8                  ___fttol 04AA  
                __pcinit 0794               ??___awtoft 000D               ??___ftpack 0007  
                __ramtop 0800               ??_adc_read 0004                  __ptext0 01BA  
                __ptext1 06E8                  __ptext2 04AA                  __ptext3 06A8  
                __ptext4 0012                  __ptext5 02D0                  __ptext6 03C4  
                __ptext7 0720                  __ptext8 057C                  __ptext9 0778  
              _T0CONbits 000FD5                  main@adx 002B           __pintcode_body 062A  
   end_of_initialization 0798                  int_func 062A                _PORTDbits 000F83  
            ___ftdiv@exp 0026             ??_InitConfig 0002              ___ftmul@exp 0013  
           ??_InitTimer0 0002      start_initialization 0794       __end_of_InitConfig 0778  
         _my_isr_routine 0008       __end_of_InitTimer0 0794        __size_of___awtoft 0038  
      __size_of___ftpack 00AE        __size_of_adc_read 0038              __pbssCOMRAM 0033  
 __end_of_my_isr_routine 06A8            adc_read@canal 0008                __pintcode 0008  
               ?___ftadd 000A                 ?___ftdiv 0019                 ?___ftmul 000A  
               ?___ftsub 0016                 ?___fttol 001C          ?_my_isr_routine 0001  
             _ADCON0bits 000FC2                main@tempo 002E                 __Hrparam 0000  
               __Lrparam 0000         __size_of___ftadd 01A8         __size_of___ftdiv 00E6  
       __size_of___ftmul 00F4         __size_of___ftsub 0040         __size_of___fttol 00D2  
               ___awtoft 0720                 ___ftpack 057C                 _adc_read 06E8  
               __ptext10 0758            __size_of_main 0116                 _tempoInt 0031  
               int$flags 0035                 intlevel2 0000         ??_my_isr_routine 0001  
