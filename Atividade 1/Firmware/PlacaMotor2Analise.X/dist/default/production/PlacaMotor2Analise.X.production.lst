

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Jul 05 12:21:12 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4550 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     _TMR0	set	4054
    79  0000                     _TRISDbits	set	3989
    80  0000                     _PORTDbits	set	3971
    81  0000                     _T0CONbits	set	4053
    82  0000                     _ADCON2	set	4032
    83  0000                     _ADCON1	set	4033
    84  0000                     _ADCON0	set	4034
    85  0000                     _PORTD	set	3971
    86  0000                     _TRISD	set	3989
    87  0000                     _PORTBbits	set	3969
    88  0000                     _TRISB	set	3987
    89  0000                     _TRISA	set	3986
    90  0000                     _PSA	set	32427
    91  0000                     _T0SE	set	32428
    92  0000                     _T0CS	set	32429
    93  0000                     _T08BIT	set	32430
    94  0000                     _TMR0ON	set	32431
    95  0000                     _INTEDG0	set	32654
    96  0000                     _INT0IF	set	32657
    97  0000                     _TMR0IF	set	32658
    98  0000                     _INT0IE	set	32660
    99  0000                     _TMR0IE	set	32661
   100  0000                     _PEIE	set	32662
   101  0000                     _GIE	set	32663
   102                           
   103                           	psect	smallconst
   104  000800                     __psmallconst:
   105                           	callstack 0
   106  000800  00                 	db	0
   107  000801                     STR_3:
   108  000801  2E                 	db	46
   109  000802  31                 	db	49	;'1'
   110  000803  66                 	db	102	;'f'
   111  000804  00                 	db	0
   112  000805                     STR_4:
   113  000805  72                 	db	114	;'r'
   114  000806  70                 	db	112	;'p'
   115  000807  6D                 	db	109	;'m'
   116  000808  00                 	db	0
   117  000809                     STR_1:
   118  000809  25                 	db	37
   119  00080A  64                 	db	100	;'d'
   120  00080B  00                 	db	0
   121  00080C                     STR_2:
   122  00080C  75                 	db	117	;'u'
   123  00080D  73                 	db	115	;'s'
   124  00080E  00                 	db	0
   125  00080F  00                 	db	0	; dummy byte at the end
   126  0000                     
   127                           ; #config settings
   128                           
   129                           	psect	cinit
   130  0022DA                     __pcinit:
   131                           	callstack 0
   132  0022DA                     start_initialization:
   133                           	callstack 0
   134  0022DA                     __initialization:
   135                           	callstack 0
   136                           
   137                           ; Clear objects allocated to BANK0 (48 bytes)
   138  0022DA  EE00  F09E         	lfsr	0,__pbssBANK0
   139  0022DE  0E30               	movlw	48
   140  0022E0                     clear_0:
   141  0022E0  6AEE               	clrf	postinc0,c
   142  0022E2  06E8               	decf	wreg,f,c
   143  0022E4  E1FD               	bnz	clear_0
   144                           
   145                           ; Clear objects allocated to COMRAM (13 bytes)
   146  0022E6  EE00  F046         	lfsr	0,__pbssCOMRAM
   147  0022EA  0E0D               	movlw	13
   148  0022EC                     clear_1:
   149  0022EC  6AEE               	clrf	postinc0,c
   150  0022EE  06E8               	decf	wreg,f,c
   151  0022F0  E1FD               	bnz	clear_1
   152  0022F2                     end_of_initialization:
   153                           	callstack 0
   154  0022F2                     __end_of__initialization:
   155                           	callstack 0
   156  0022F2  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   157  0022F4  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   158  0022F6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   159  0022F8  6EF8               	movwf	tblptru,c
   160  0022FA  0100               	movlb	0
   161  0022FC  EF5B  F009         	goto	_main	;jump to C main() function
   162                           
   163                           	psect	bssCOMRAM
   164  000046                     __pbssCOMRAM:
   165                           	callstack 0
   166  000046                     _subida:
   167                           	callstack 0
   168  000046                     	ds	4
   169  00004A                     _prec:
   170                           	callstack 0
   171  00004A                     	ds	2
   172  00004C                     _flags:
   173                           	callstack 0
   174  00004C                     	ds	2
   175  00004E                     _RS:
   176                           	callstack 0
   177  00004E                     	ds	1
   178  00004F                     _temp:
   179                           	callstack 0
   180  00004F                     	ds	4
   181                           
   182                           	psect	bssBANK0
   183  00009E                     __pbssBANK0:
   184                           	callstack 0
   185  00009E                     _descida:
   186                           	callstack 0
   187  00009E                     	ds	4
   188  0000A2                     _nout:
   189                           	callstack 0
   190  0000A2                     	ds	2
   191  0000A4                     _width:
   192                           	callstack 0
   193  0000A4                     	ds	2
   194  0000A6                     _falha:
   195                           	callstack 0
   196  0000A6                     	ds	2
   197  0000A8                     _auxx:
   198                           	callstack 0
   199  0000A8                     	ds	2
   200  0000AA                     _dbuf:
   201                           	callstack 0
   202  0000AA                     	ds	32
   203  0000CA                     _rotacao:
   204                           	callstack 0
   205  0000CA                     	ds	4
   206                           
   207                           	psect	cstackBANK0
   208  000060                     __pcstackBANK0:
   209                           	callstack 0
   210  000060                     _dtoa$823:
   211                           	callstack 0
   212                           
   213                           ; 2 bytes @ 0x0
   214  000060                     	ds	2
   215  000062                     dtoa@p:
   216                           	callstack 0
   217                           
   218                           ; 2 bytes @ 0x2
   219  000062                     	ds	2
   220  000064                     dtoa@w:
   221                           	callstack 0
   222                           
   223                           ; 2 bytes @ 0x4
   224  000064                     	ds	2
   225  000066                     dtoa@s:
   226                           	callstack 0
   227                           
   228                           ; 2 bytes @ 0x6
   229  000066                     	ds	2
   230  000068                     dtoa@n:
   231                           	callstack 0
   232                           
   233                           ; 8 bytes @ 0x8
   234  000068                     	ds	8
   235  000070                     dtoa@i:
   236                           	callstack 0
   237                           
   238                           ; 2 bytes @ 0x10
   239  000070                     	ds	2
   240  000072                     vfpfcnvrt@ll:
   241                           	callstack 0
   242                           
   243                           ; 8 bytes @ 0x12
   244  000072                     	ds	8
   245  00007A                     ?_vfprintf:
   246                           	callstack 0
   247  00007A                     vfprintf@fp:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0x1A
   251  00007A                     	ds	2
   252  00007C                     vfprintf@fmt:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x1C
   256  00007C                     	ds	2
   257  00007E                     vfprintf@ap:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x1E
   261  00007E                     	ds	2
   262  000080                     ?_sprintf:
   263                           	callstack 0
   264  000080                     sprintf@s:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x20
   268  000080                     	ds	2
   269  000082                     sprintf@fmt:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0x22
   273  000082                     	ds	8
   274  00008A                     sprintf@ap:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x2A
   278  00008A                     	ds	2
   279  00008C                     sprintf@f:
   280                           	callstack 0
   281                           
   282                           ; 6 bytes @ 0x2C
   283  00008C                     	ds	6
   284  000092                     main@txt:
   285                           	callstack 0
   286                           
   287                           ; 6 bytes @ 0x32
   288  000092                     	ds	6
   289  000098                     main@txt2:
   290                           	callstack 0
   291                           
   292                           ; 6 bytes @ 0x38
   293  000098                     	ds	6
   294                           
   295                           	psect	cstackCOMRAM
   296  000001                     __pcstackCOMRAM:
   297                           	callstack 0
   298  000001                     ?i2___lmul:
   299                           	callstack 0
   300  000001                     i2___lmul@multiplier:
   301                           	callstack 0
   302                           
   303                           ; 4 bytes @ 0x0
   304  000001                     	ds	4
   305  000005                     i2___lmul@multiplicand:
   306                           	callstack 0
   307                           
   308                           ; 4 bytes @ 0x4
   309  000005                     	ds	4
   310  000009                     i2___lmul@product:
   311                           	callstack 0
   312                           
   313                           ; 4 bytes @ 0x8
   314  000009                     	ds	4
   315  00000D                     ??_LCD_Write_Nibble:
   316  00000D                     ?_strlen:
   317                           	callstack 0
   318  00000D                     ?___fldiv:
   319                           	callstack 0
   320  00000D                     ?___flmul:
   321                           	callstack 0
   322  00000D                     ?___lmul:
   323                           	callstack 0
   324  00000D                     ?___aodiv:
   325                           	callstack 0
   326  00000D                     ?___aomod:
   327                           	callstack 0
   328  00000D                     fputc@c:
   329                           	callstack 0
   330  00000D                     strlen@s:
   331                           	callstack 0
   332  00000D                     ___lmul@multiplier:
   333                           	callstack 0
   334  00000D                     ___fldiv@b:
   335                           	callstack 0
   336  00000D                     ___flmul@b:
   337                           	callstack 0
   338  00000D                     ___aodiv@dividend:
   339                           	callstack 0
   340  00000D                     ___aomod@dividend:
   341                           	callstack 0
   342                           
   343                           ; 8 bytes @ 0xC
   344  00000D                     	ds	1
   345  00000E                     LCD_Write_Nibble@n:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0xD
   349  00000E                     	ds	1
   350  00000F                     ??_LCD_Cmd:
   351  00000F                     LCD_Print@LCD_Str:
   352                           	callstack 0
   353  00000F                     fputc@fp:
   354                           	callstack 0
   355  00000F                     strlen@a:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0xE
   359  00000F                     	ds	1
   360  000010                     LCD_Cmd@Command:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0xF
   364  000010                     	ds	1
   365  000011                     ??_LCD_Begin:
   366  000011                     ??_LCD_Print:
   367  000011                     ??_fputc:
   368  000011                     LCD_Goto@row:
   369                           	callstack 0
   370  000011                     ___lmul@multiplicand:
   371                           	callstack 0
   372  000011                     ___fldiv@a:
   373                           	callstack 0
   374  000011                     ___flmul@a:
   375                           	callstack 0
   376                           
   377                           ; 4 bytes @ 0x10
   378  000011                     	ds	1
   379  000012                     ??_LCD_Goto:
   380                           
   381                           ; 1 bytes @ 0x11
   382  000012                     	ds	2
   383  000014                     LCD_Goto@col:
   384                           	callstack 0
   385  000014                     LCD_Print@i:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x13
   389  000014                     	ds	1
   390  000015                     ??___fldiv:
   391  000015                     ??___flmul:
   392  000015                     ___lmul@product:
   393                           	callstack 0
   394  000015                     ___aodiv@divisor:
   395                           	callstack 0
   396  000015                     ___aomod@divisor:
   397                           	callstack 0
   398                           
   399                           ; 8 bytes @ 0x14
   400  000015                     	ds	1
   401  000016                     fputs@s:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x15
   405  000016                     	ds	2
   406  000018                     fputs@fp:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x17
   410  000018                     	ds	1
   411  000019                     ?___xxtofl:
   412                           	callstack 0
   413  000019                     ___flmul@sign:
   414                           	callstack 0
   415  000019                     ___fldiv@rem:
   416                           	callstack 0
   417  000019                     ___xxtofl@val:
   418                           	callstack 0
   419                           
   420                           ; 4 bytes @ 0x18
   421  000019                     	ds	1
   422  00001A                     fputs@c:
   423                           	callstack 0
   424  00001A                     ___flmul@grs:
   425                           	callstack 0
   426                           
   427                           ; 4 bytes @ 0x19
   428  00001A                     	ds	1
   429  00001B                     fputs@i:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x1A
   433  00001B                     	ds	2
   434  00001D                     ??___xxtofl:
   435  00001D                     ?_pad:
   436                           	callstack 0
   437  00001D                     ___aodiv@counter:
   438                           	callstack 0
   439  00001D                     ___aomod@counter:
   440                           	callstack 0
   441  00001D                     ___fldiv@sign:
   442                           	callstack 0
   443  00001D                     pad@fp:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x1C
   447  00001D                     	ds	1
   448  00001E                     ___aodiv@sign:
   449                           	callstack 0
   450  00001E                     ___aomod@sign:
   451                           	callstack 0
   452  00001E                     ___flmul@aexp:
   453                           	callstack 0
   454  00001E                     ___fldiv@new_exp:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x1D
   458  00001E                     	ds	1
   459  00001F                     ?_abs:
   460                           	callstack 0
   461  00001F                     ___flmul@bexp:
   462                           	callstack 0
   463  00001F                     pad@buf:
   464                           	callstack 0
   465  00001F                     abs@a:
   466                           	callstack 0
   467  00001F                     ___aodiv@quotient:
   468                           	callstack 0
   469                           
   470                           ; 8 bytes @ 0x1E
   471  00001F                     	ds	1
   472  000020                     ___fldiv@grs:
   473                           	callstack 0
   474  000020                     ___flmul@prod:
   475                           	callstack 0
   476                           
   477                           ; 4 bytes @ 0x1F
   478  000020                     	ds	1
   479  000021                     ??_abs:
   480  000021                     ___xxtofl@sign:
   481                           	callstack 0
   482  000021                     pad@p:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x20
   486  000021                     	ds	1
   487  000022                     ___xxtofl@exp:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0x21
   491  000022                     	ds	1
   492  000023                     ??_pad:
   493  000023                     ___xxtofl@arg:
   494                           	callstack 0
   495                           
   496                           ; 4 bytes @ 0x22
   497  000023                     	ds	1
   498  000024                     ___fldiv@bexp:
   499                           	callstack 0
   500  000024                     ___flmul@temp:
   501                           	callstack 0
   502  000024                     pad@i:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x23
   506  000024                     	ds	1
   507  000025                     ___fldiv@aexp:
   508                           	callstack 0
   509                           
   510                           ; 1 bytes @ 0x24
   511  000025                     	ds	1
   512  000026                     pad@w:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x25
   516  000026                     	ds	2
   517  000028                     ?_dtoa:
   518                           	callstack 0
   519  000028                     dtoa@fp:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x27
   523  000028                     	ds	2
   524  00002A                     dtoa@d:
   525                           	callstack 0
   526                           
   527                           ; 8 bytes @ 0x29
   528  00002A                     	ds	8
   529  000032                     ??_dtoa:
   530                           
   531                           ; 1 bytes @ 0x31
   532  000032                     	ds	8
   533  00003A                     ?_vfpfcnvrt:
   534                           	callstack 0
   535  00003A                     vfpfcnvrt@fp:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x39
   539  00003A                     	ds	2
   540  00003C                     vfpfcnvrt@fmt:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x3B
   544  00003C                     	ds	2
   545  00003E                     vfpfcnvrt@ap:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x3D
   549  00003E                     	ds	2
   550  000040                     ??_vfpfcnvrt:
   551                           
   552                           ; 1 bytes @ 0x3F
   553  000040                     	ds	2
   554  000042                     vfprintf@cfmt:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x41
   558  000042                     	ds	2
   559  000044                     ??_main:
   560                           
   561                           ; 1 bytes @ 0x43
   562  000044                     	ds	2
   563                           
   564 ;;
   565 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   566 ;;
   567 ;; *************** function _main *****************
   568 ;; Defined at:
   569 ;;		line 54 in file "main_1.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;  txt2            6   56[BANK0 ] unsigned char [6]
   574 ;;  txt             6   50[BANK0 ] unsigned char [6]
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      void 
   577 ;; Registers used:
   578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   584 ;;      Params:         0       0       0       0       0       0       0       0       0
   585 ;;      Locals:         0      12       0       0       0       0       0       0       0
   586 ;;      Temps:          2       0       0       0       0       0       0       0       0
   587 ;;      Totals:         2      12       0       0       0       0       0       0       0
   588 ;;Total ram usage:       14 bytes
   589 ;; Hardware stack levels required when called:   10
   590 ;; This function calls:
   591 ;;		_InitConfig
   592 ;;		_InitTimer0
   593 ;;		_LCD_Begin
   594 ;;		_LCD_Cmd
   595 ;;		_LCD_Goto
   596 ;;		_LCD_Print
   597 ;;		___fldiv
   598 ;;		___flmul
   599 ;;		___lmul
   600 ;;		___xxtofl
   601 ;;		_sprintf
   602 ;; This function is called by:
   603 ;;		Startup code after reset
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           	psect	text0
   608  0012B6                     __ptext0:
   609                           	callstack 0
   610  0012B6                     _main:
   611                           	callstack 21
   612  0012B6                     
   613                           ;main_1.c: 56:     char txt [6];;main_1.c: 57:     char txt2 [6];;main_1.c: 59:     Init
      +                          Config();
   614  0012B6  EC58  F011         	call	_InitConfig	;wreg free
   615                           
   616                           ;main_1.c: 60:     InitTimer0();
   617  0012BA  EC80  F011         	call	_InitTimer0	;wreg free
   618  0012BE                     
   619                           ;main_1.c: 62:     LCD_Begin();
   620  0012BE  ECF2  F00D         	call	_LCD_Begin	;wreg free
   621  0012C2                     
   622                           ;main_1.c: 63:     _delay((unsigned long)((100)*(32000000/4000.0)));
   623  0012C2  0E05               	movlw	5
   624  0012C4  6E45               	movwf	(??_main+1)^0,c
   625  0012C6  0E0F               	movlw	15
   626  0012C8  6E44               	movwf	??_main^0,c
   627  0012CA  0EF1               	movlw	241
   628  0012CC                     u2677:
   629  0012CC  2EE8               	decfsz	wreg,f,c
   630  0012CE  D7FE               	bra	u2677
   631  0012D0  2E44               	decfsz	??_main^0,f,c
   632  0012D2  D7FC               	bra	u2677
   633  0012D4  2E45               	decfsz	(??_main+1)^0,f,c
   634  0012D6  D7FA               	bra	u2677
   635  0012D8  F000               	nop	
   636  0012DA                     
   637                           ;main_1.c: 64:     LCD_Cmd(0x01);
   638  0012DA  0E01               	movlw	1
   639  0012DC  ECD7  F010         	call	_LCD_Cmd
   640  0012E0                     l2878:
   641                           
   642                           ;main_1.c: 66:     {;main_1.c: 67:         sprintf(txt2, "%d", temp);
   643  0012E0  0E98               	movlw	low main@txt2
   644  0012E2  0100               	movlb	0	; () banked
   645  0012E4  6F80               	movwf	sprintf@s& (0+255),b
   646  0012E6  0E00               	movlw	high main@txt2
   647  0012E8  6F81               	movwf	(sprintf@s+1)& (0+255),b
   648  0012EA  0E09               	movlw	low STR_1
   649  0012EC  6F82               	movwf	sprintf@fmt& (0+255),b
   650  0012EE  0E08               	movlw	high STR_1
   651  0012F0  6F83               	movwf	(sprintf@fmt+1)& (0+255),b
   652  0012F2  C04F  F084         	movff	_temp,?_sprintf+4
   653  0012F6  C050  F085         	movff	_temp+1,?_sprintf+5
   654  0012FA  C051  F086         	movff	_temp+2,?_sprintf+6
   655  0012FE  C052  F087         	movff	_temp+3,?_sprintf+7
   656  001302  ECAE  F010         	call	_sprintf	;wreg free
   657  001306                     
   658                           ;main_1.c: 68:         LCD_Goto(7, 1);
   659  001306  0E01               	movlw	1
   660  001308  6E11               	movwf	LCD_Goto@row^0,c
   661  00130A  0E07               	movlw	7
   662  00130C  EC13  F010         	call	_LCD_Goto
   663  001310                     
   664                           ;main_1.c: 69:         _delay((unsigned long)((100)*(32000000/4000.0)));
   665  001310  0E05               	movlw	5
   666  001312  6E45               	movwf	(??_main+1)^0,c
   667  001314  0E0F               	movlw	15
   668  001316  6E44               	movwf	??_main^0,c
   669  001318  0EF1               	movlw	241
   670  00131A                     u2687:
   671  00131A  2EE8               	decfsz	wreg,f,c
   672  00131C  D7FE               	bra	u2687
   673  00131E  2E44               	decfsz	??_main^0,f,c
   674  001320  D7FC               	bra	u2687
   675  001322  2E45               	decfsz	(??_main+1)^0,f,c
   676  001324  D7FA               	bra	u2687
   677  001326  F000               	nop	
   678  001328                     
   679                           ;main_1.c: 70:         LCD_Print(txt2);
   680  001328  0E98               	movlw	low main@txt2
   681  00132A  6E0F               	movwf	LCD_Print@LCD_Str^0,c
   682  00132C  0E00               	movlw	high main@txt2
   683  00132E  6E10               	movwf	(LCD_Print@LCD_Str+1)^0,c
   684  001330  EC37  F00F         	call	_LCD_Print	;wreg free
   685  001334                     
   686                           ;main_1.c: 71:         LCD_Print("us");
   687  001334  0E0C               	movlw	low STR_2
   688  001336  6E0F               	movwf	LCD_Print@LCD_Str^0,c
   689  001338  0E08               	movlw	high STR_2
   690  00133A  6E10               	movwf	(LCD_Print@LCD_Str+1)^0,c
   691  00133C  EC37  F00F         	call	_LCD_Print	;wreg free
   692  001340                     
   693                           ;main_1.c: 73:         rotacao = temp*60;
   694  001340  C04F  F00D         	movff	_temp,___lmul@multiplier
   695  001344  C050  F00E         	movff	_temp+1,___lmul@multiplier+1
   696  001348  C051  F00F         	movff	_temp+2,___lmul@multiplier+2
   697  00134C  C052  F010         	movff	_temp+3,___lmul@multiplier+3
   698  001350  0E3C               	movlw	60
   699  001352  6E11               	movwf	___lmul@multiplicand^0,c
   700  001354  0E00               	movlw	0
   701  001356  6E12               	movwf	(___lmul@multiplicand+1)^0,c
   702  001358  0E00               	movlw	0
   703  00135A  6E13               	movwf	(___lmul@multiplicand+2)^0,c
   704  00135C  0E00               	movlw	0
   705  00135E  6E14               	movwf	(___lmul@multiplicand+3)^0,c
   706  001360  ECDE  F00F         	call	___lmul	;wreg free
   707  001364  C00D  F019         	movff	?___lmul,___xxtofl@val
   708  001368  C00E  F01A         	movff	?___lmul+1,___xxtofl@val+1
   709  00136C  C00F  F01B         	movff	?___lmul+2,___xxtofl@val+2
   710  001370  C010  F01C         	movff	?___lmul+3,___xxtofl@val+3
   711  001374  0E00               	movlw	0
   712  001376  EC21  F00B         	call	___xxtofl
   713  00137A  C019  F0CA         	movff	?___xxtofl,_rotacao
   714  00137E  C01A  F0CB         	movff	?___xxtofl+1,_rotacao+1
   715  001382  C01B  F0CC         	movff	?___xxtofl+2,_rotacao+2
   716  001386  C01C  F0CD         	movff	?___xxtofl+3,_rotacao+3
   717  00138A                     
   718                           ;main_1.c: 74:         rotacao = 1/rotacao;
   719  00138A  0E00               	movlw	0
   720  00138C  6E0D               	movwf	___fldiv@b^0,c
   721  00138E  0E00               	movlw	0
   722  001390  6E0E               	movwf	(___fldiv@b+1)^0,c
   723  001392  0E80               	movlw	128
   724  001394  6E0F               	movwf	(___fldiv@b+2)^0,c
   725  001396  0E3F               	movlw	63
   726  001398  6E10               	movwf	(___fldiv@b+3)^0,c
   727  00139A  C0CA  F011         	movff	_rotacao,___fldiv@a
   728  00139E  C0CB  F012         	movff	_rotacao+1,___fldiv@a+1
   729  0013A2  C0CC  F013         	movff	_rotacao+2,___fldiv@a+2
   730  0013A6  C0CD  F014         	movff	_rotacao+3,___fldiv@a+3
   731  0013AA  EC1D  F006         	call	___fldiv	;wreg free
   732  0013AE  C00D  F0CA         	movff	?___fldiv,_rotacao
   733  0013B2  C00E  F0CB         	movff	?___fldiv+1,_rotacao+1
   734  0013B6  C00F  F0CC         	movff	?___fldiv+2,_rotacao+2
   735  0013BA  C010  F0CD         	movff	?___fldiv+3,_rotacao+3
   736  0013BE                     
   737                           ;main_1.c: 75:         rotacao *= 60;
   738  0013BE  C0CA  F00D         	movff	_rotacao,___flmul@b
   739  0013C2  C0CB  F00E         	movff	_rotacao+1,___flmul@b+1
   740  0013C6  C0CC  F00F         	movff	_rotacao+2,___flmul@b+2
   741  0013CA  C0CD  F010         	movff	_rotacao+3,___flmul@b+3
   742  0013CE  0E00               	movlw	0
   743  0013D0  6E11               	movwf	___flmul@a^0,c
   744  0013D2  0E00               	movlw	0
   745  0013D4  6E12               	movwf	(___flmul@a+1)^0,c
   746  0013D6  0E70               	movlw	112
   747  0013D8  6E13               	movwf	(___flmul@a+2)^0,c
   748  0013DA  0E42               	movlw	66
   749  0013DC  6E14               	movwf	(___flmul@a+3)^0,c
   750  0013DE  EC08  F004         	call	___flmul	;wreg free
   751  0013E2  C00D  F0CA         	movff	?___flmul,_rotacao
   752  0013E6  C00E  F0CB         	movff	?___flmul+1,_rotacao+1
   753  0013EA  C00F  F0CC         	movff	?___flmul+2,_rotacao+2
   754  0013EE  C010  F0CD         	movff	?___flmul+3,_rotacao+3
   755  0013F2                     
   756                           ;main_1.c: 76:         rotacao *= 1000000;
   757  0013F2  C0CA  F00D         	movff	_rotacao,___flmul@b
   758  0013F6  C0CB  F00E         	movff	_rotacao+1,___flmul@b+1
   759  0013FA  C0CC  F00F         	movff	_rotacao+2,___flmul@b+2
   760  0013FE  C0CD  F010         	movff	_rotacao+3,___flmul@b+3
   761  001402  0E00               	movlw	0
   762  001404  6E11               	movwf	___flmul@a^0,c
   763  001406  0E24               	movlw	36
   764  001408  6E12               	movwf	(___flmul@a+1)^0,c
   765  00140A  0E74               	movlw	116
   766  00140C  6E13               	movwf	(___flmul@a+2)^0,c
   767  00140E  0E49               	movlw	73
   768  001410  6E14               	movwf	(___flmul@a+3)^0,c
   769  001412  EC08  F004         	call	___flmul	;wreg free
   770  001416  C00D  F0CA         	movff	?___flmul,_rotacao
   771  00141A  C00E  F0CB         	movff	?___flmul+1,_rotacao+1
   772  00141E  C00F  F0CC         	movff	?___flmul+2,_rotacao+2
   773  001422  C010  F0CD         	movff	?___flmul+3,_rotacao+3
   774  001426                     
   775                           ;main_1.c: 78:         sprintf(txt, ".1f", rotacao);
   776  001426  0E92               	movlw	low main@txt
   777  001428  0100               	movlb	0	; () banked
   778  00142A  6F80               	movwf	sprintf@s& (0+255),b
   779  00142C  0E00               	movlw	high main@txt
   780  00142E  6F81               	movwf	(sprintf@s+1)& (0+255),b
   781  001430  0E01               	movlw	low STR_3
   782  001432  6F82               	movwf	sprintf@fmt& (0+255),b
   783  001434  0E08               	movlw	high STR_3
   784  001436  6F83               	movwf	(sprintf@fmt+1)& (0+255),b
   785  001438  C0CA  F084         	movff	_rotacao,?_sprintf+4
   786  00143C  C0CB  F085         	movff	_rotacao+1,?_sprintf+5
   787  001440  C0CC  F086         	movff	_rotacao+2,?_sprintf+6
   788  001444  C0CD  F087         	movff	_rotacao+3,?_sprintf+7
   789  001448  ECAE  F010         	call	_sprintf	;wreg free
   790  00144C                     
   791                           ;main_1.c: 79:         LCD_Goto(5, 2);
   792  00144C  0E02               	movlw	2
   793  00144E  6E11               	movwf	LCD_Goto@row^0,c
   794  001450  0E05               	movlw	5
   795  001452  EC13  F010         	call	_LCD_Goto
   796  001456                     
   797                           ;main_1.c: 80:         _delay((unsigned long)((100)*(32000000/4000.0)));
   798  001456  0E05               	movlw	5
   799  001458  6E45               	movwf	(??_main+1)^0,c
   800  00145A  0E0F               	movlw	15
   801  00145C  6E44               	movwf	??_main^0,c
   802  00145E  0EF1               	movlw	241
   803  001460                     u2697:
   804  001460  2EE8               	decfsz	wreg,f,c
   805  001462  D7FE               	bra	u2697
   806  001464  2E44               	decfsz	??_main^0,f,c
   807  001466  D7FC               	bra	u2697
   808  001468  2E45               	decfsz	(??_main+1)^0,f,c
   809  00146A  D7FA               	bra	u2697
   810  00146C  F000               	nop	
   811  00146E                     
   812                           ;main_1.c: 81:         LCD_Print(txt);
   813  00146E  0E92               	movlw	low main@txt
   814  001470  6E0F               	movwf	LCD_Print@LCD_Str^0,c
   815  001472  0E00               	movlw	high main@txt
   816  001474  6E10               	movwf	(LCD_Print@LCD_Str+1)^0,c
   817  001476  EC37  F00F         	call	_LCD_Print	;wreg free
   818  00147A                     
   819                           ;main_1.c: 82:         LCD_Print("rpm");
   820  00147A  0E05               	movlw	low STR_4
   821  00147C  6E0F               	movwf	LCD_Print@LCD_Str^0,c
   822  00147E  0E08               	movlw	high STR_4
   823  001480  6E10               	movwf	(LCD_Print@LCD_Str+1)^0,c
   824  001482  EC37  F00F         	call	_LCD_Print	;wreg free
   825  001486  EF70  F009         	goto	l2878
   826  00148A  EF07  F000         	goto	start
   827  00148E                     __end_of_main:
   828                           	callstack 0
   829                           
   830 ;; *************** function _sprintf *****************
   831 ;; Defined at:
   832 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;  s               2   32[BANK0 ] PTR unsigned char 
   835 ;;		 -> main@txt(6), main@txt2(6), 
   836 ;;  fmt             2   34[BANK0 ] PTR const unsigned char 
   837 ;;		 -> STR_3(4), STR_1(3), 
   838 ;; Auto vars:     Size  Location     Type
   839 ;;  f               6   44[BANK0 ] struct _IO_FILE
   840 ;;  ap              2   42[BANK0 ] PTR void [1]
   841 ;;		 -> ?_sprintf(2), 
   842 ;;  ret             2    0        int 
   843 ;; Return value:  Size  Location     Type
   844 ;;                  2   32[BANK0 ] int 
   845 ;; Registers used:
   846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   852 ;;      Params:         0       8       0       0       0       0       0       0       0
   853 ;;      Locals:         0      10       0       0       0       0       0       0       0
   854 ;;      Temps:          0       0       0       0       0       0       0       0       0
   855 ;;      Totals:         0      18       0       0       0       0       0       0       0
   856 ;;Total ram usage:       18 bytes
   857 ;; Hardware stack levels used:    1
   858 ;; Hardware stack levels required when called:    9
   859 ;; This function calls:
   860 ;;		_vfprintf
   861 ;; This function is called by:
   862 ;;		_main
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866                           	psect	text1
   867  00215C                     __ptext1:
   868                           	callstack 0
   869  00215C                     _sprintf:
   870                           	callstack 21
   871  00215C  0E84               	movlw	low (?_sprintf+4)
   872  00215E  0100               	movlb	0	; () banked
   873  002160  6F8A               	movwf	sprintf@ap& (0+255),b
   874  002162  0E00               	movlw	high (?_sprintf+4)
   875  002164  6F8B               	movwf	(sprintf@ap+1)& (0+255),b
   876  002166  C080  F08C         	movff	sprintf@s,sprintf@f
   877  00216A  C081  F08D         	movff	sprintf@s+1,sprintf@f+1
   878  00216E                     
   879                           ; BSR set to: 0
   880  00216E  0E00               	movlw	0
   881  002170  6F8F               	movwf	(sprintf@f+3)& (0+255),b
   882  002172  0E00               	movlw	0
   883  002174  6F8E               	movwf	(sprintf@f+2)& (0+255),b
   884  002176                     
   885                           ; BSR set to: 0
   886  002176  0E00               	movlw	0
   887  002178  6F91               	movwf	(sprintf@f+5)& (0+255),b
   888  00217A  0E00               	movlw	0
   889  00217C  6F90               	movwf	(sprintf@f+4)& (0+255),b
   890  00217E                     
   891                           ; BSR set to: 0
   892  00217E  0E8C               	movlw	low sprintf@f
   893  002180  6F7A               	movwf	vfprintf@fp& (0+255),b
   894  002182  0E00               	movlw	high sprintf@f
   895  002184  6F7B               	movwf	(vfprintf@fp+1)& (0+255),b
   896  002186  C082  F07C         	movff	sprintf@fmt,vfprintf@fmt
   897  00218A  C083  F07D         	movff	sprintf@fmt+1,vfprintf@fmt+1
   898  00218E  0E8A               	movlw	low sprintf@ap
   899  002190  6F7E               	movwf	vfprintf@ap& (0+255),b
   900  002192  0E00               	movlw	high sprintf@ap
   901  002194  6F7F               	movwf	(vfprintf@ap+1)& (0+255),b
   902  002196  EC7D  F010         	call	_vfprintf	;wreg free
   903  00219A  0100               	movlb	0	; () banked
   904  00219C  518E               	movf	(sprintf@f+2)& (0+255),w,b
   905  00219E  2580               	addwf	sprintf@s& (0+255),w,b
   906  0021A0  6ED9               	movwf	fsr2l,c
   907  0021A2  518F               	movf	(sprintf@f+3)& (0+255),w,b
   908  0021A4  2181               	addwfc	(sprintf@s+1)& (0+255),w,b
   909  0021A6  6EDA               	movwf	fsr2h,c
   910  0021A8  0E00               	movlw	0
   911  0021AA  6EDF               	movwf	indf2,c
   912  0021AC                     
   913                           ; BSR set to: 0
   914  0021AC  0012               	return		;funcret
   915  0021AE                     __end_of_sprintf:
   916                           	callstack 0
   917                           
   918 ;; *************** function _vfprintf *****************
   919 ;; Defined at:
   920 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
   923 ;;		 -> sprintf@f(6), 
   924 ;;  fmt             2   28[BANK0 ] PTR const unsigned char 
   925 ;;		 -> STR_3(4), STR_1(3), 
   926 ;;  ap              2   30[BANK0 ] PTR PTR void 
   927 ;;		 -> sprintf@ap(2), 
   928 ;; Auto vars:     Size  Location     Type
   929 ;;  cfmt            2   65[COMRAM] PTR unsigned char 
   930 ;;		 -> STR_3(4), STR_1(3), 
   931 ;; Return value:  Size  Location     Type
   932 ;;                  2   26[BANK0 ] int 
   933 ;; Registers used:
   934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   940 ;;      Params:         0       6       0       0       0       0       0       0       0
   941 ;;      Locals:         2       0       0       0       0       0       0       0       0
   942 ;;      Temps:          0       0       0       0       0       0       0       0       0
   943 ;;      Totals:         2       6       0       0       0       0       0       0       0
   944 ;;Total ram usage:        8 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; Hardware stack levels required when called:    8
   947 ;; This function calls:
   948 ;;		_vfpfcnvrt
   949 ;; This function is called by:
   950 ;;		_sprintf
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text2
   955  0020FA                     __ptext2:
   956                           	callstack 0
   957  0020FA                     _vfprintf:
   958                           	callstack 21
   959  0020FA                     
   960                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
   961  0020FA  C07C  F042         	movff	vfprintf@fmt,vfprintf@cfmt
   962  0020FE  C07D  F043         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   963  002102                     
   964                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
   965  002102  0E00               	movlw	0
   966  002104  0100               	movlb	0	; () banked
   967  002106  6FA3               	movwf	(_nout+1)& (0+255),b
   968  002108  0E00               	movlw	0
   969  00210A  6FA2               	movwf	_nout& (0+255),b
   970                           
   971                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
   972  00210C  EF9B  F010         	goto	l2856
   973  002110                     l2854:
   974                           
   975                           ; BSR set to: 0
   976                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   977  002110  C07A  F03A         	movff	vfprintf@fp,vfpfcnvrt@fp
   978  002114  C07B  F03B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   979  002118  0E42               	movlw	low vfprintf@cfmt
   980  00211A  6E3C               	movwf	vfpfcnvrt@fmt^0,c
   981  00211C  0E00               	movlw	high vfprintf@cfmt
   982  00211E  6E3D               	movwf	(vfpfcnvrt@fmt+1)^0,c
   983  002120  C07E  F03E         	movff	vfprintf@ap,vfpfcnvrt@ap
   984  002124  C07F  F03F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   985  002128  EC47  F00A         	call	_vfpfcnvrt	;wreg free
   986  00212C  503A               	movf	?_vfpfcnvrt^0,w,c
   987  00212E  0100               	movlb	0	; () banked
   988  002130  27A2               	addwf	_nout& (0+255),f,b
   989  002132  503B               	movf	(?_vfpfcnvrt+1)^0,w,c
   990  002134  23A3               	addwfc	(_nout+1)& (0+255),f,b
   991  002136                     l2856:
   992                           
   993                           ; BSR set to: 0
   994                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
   995  002136  C042  FFF6         	movff	vfprintf@cfmt,tblptrl
   996  00213A  C043  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   997  00213E                     	if	0	;tblptru may be non-zero
   998  00213E                     	endif
   999  00213E                     	if	0	;tblptru may be non-zero
  1000  00213E                     	endif
  1001  00213E  0008               	tblrd		*
  1002  002140  50F5               	movf	tablat,w,c
  1003  002142  0900               	iorlw	0
  1004  002144  A4D8               	btfss	status,2,c
  1005  002146  EFA7  F010         	goto	u2661
  1006  00214A  EFA9  F010         	goto	u2660
  1007  00214E                     u2661:
  1008  00214E  EF88  F010         	goto	l2854
  1009  002152                     u2660:
  1010  002152                     
  1011                           ; BSR set to: 0
  1012                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  1013  002152  C0A2  F07A         	movff	_nout,?_vfprintf
  1014  002156  C0A3  F07B         	movff	_nout+1,?_vfprintf+1
  1015  00215A                     
  1016                           ; BSR set to: 0
  1017  00215A  0012               	return		;funcret
  1018  00215C                     __end_of_vfprintf:
  1019                           	callstack 0
  1020                           
  1021 ;; *************** function _vfpfcnvrt *****************
  1022 ;; Defined at:
  1023 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;  fp              2   57[COMRAM] PTR struct _IO_FILE
  1026 ;;		 -> sprintf@f(6), 
  1027 ;;  fmt             2   59[COMRAM] PTR PTR unsigned char 
  1028 ;;		 -> vfprintf@cfmt(2), 
  1029 ;;  ap              2   61[COMRAM] PTR PTR void 
  1030 ;;		 -> sprintf@ap(2), 
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;  ll              8   18[BANK0 ] long long 
  1033 ;;  llu             8    0        unsigned long long 
  1034 ;;  f               4    0        unsigned long long 
  1035 ;;  vp              3    0        PTR void 
  1036 ;;  ct              3    0        unsigned char [3]
  1037 ;;  cp              3    0        PTR unsigned char 
  1038 ;;  i               2    0        int 
  1039 ;;  done            2    0        int 
  1040 ;;  c               1    0        unsigned char 
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  2   57[COMRAM] int 
  1043 ;; Registers used:
  1044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1050 ;;      Params:         6       0       0       0       0       0       0       0       0
  1051 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1052 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1053 ;;      Totals:         8       8       0       0       0       0       0       0       0
  1054 ;;Total ram usage:       16 bytes
  1055 ;; Hardware stack levels used:    1
  1056 ;; Hardware stack levels required when called:    7
  1057 ;; This function calls:
  1058 ;;		_dtoa
  1059 ;;		_fputc
  1060 ;; This function is called by:
  1061 ;;		_vfprintf
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           	psect	text3
  1066  00148E                     __ptext3:
  1067                           	callstack 0
  1068  00148E                     _vfpfcnvrt:
  1069                           	callstack 21
  1070  00148E                     
  1071                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  1072  00148E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1073  001492  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1074  001496  CFDE FFF6          	movff	postinc2,tblptrl
  1075  00149A  CFDD FFF7          	movff	postdec2,tblptrh
  1076  00149E                     	if	0	;tblptru may be non-zero
  1077  00149E                     	endif
  1078  00149E                     	if	0	;tblptru may be non-zero
  1079  00149E                     	endif
  1080  00149E  0008               	tblrd		*
  1081  0014A0  50F5               	movf	tablat,w,c
  1082  0014A2  0A25               	xorlw	37
  1083  0014A4  A4D8               	btfss	status,2,c
  1084  0014A6  EF57  F00A         	goto	u2621
  1085  0014AA  EF59  F00A         	goto	u2620
  1086  0014AE                     u2621:
  1087  0014AE  EF05  F00B         	goto	l2842
  1088  0014B2                     u2620:
  1089  0014B2                     
  1090                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  1091  0014B2  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1092  0014B6  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1093  0014BA  2ADE               	incf	postinc2,f,c
  1094  0014BC  0E00               	movlw	0
  1095  0014BE  22DD               	addwfc	postdec2,f,c
  1096  0014C0                     
  1097                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  1098  0014C0  0E00               	movlw	0
  1099  0014C2  0100               	movlb	0	; () banked
  1100  0014C4  6FA5               	movwf	(_width+1)& (0+255),b
  1101  0014C6  0E00               	movlw	0
  1102  0014C8  6FA4               	movwf	_width& (0+255),b
  1103  0014CA  C0A4  F04C         	movff	_width,_flags
  1104  0014CE  C0A5  F04D         	movff	_width+1,_flags+1
  1105  0014D2                     
  1106                           ; BSR set to: 0
  1107                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  1108  0014D2  684A               	setf	_prec^0,c
  1109  0014D4  684B               	setf	(_prec+1)^0,c
  1110  0014D6                     
  1111                           ; BSR set to: 0
  1112                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1113  0014D6  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1114  0014DA  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1115  0014DE  CFDE FFF6          	movff	postinc2,tblptrl
  1116  0014E2  CFDD FFF7          	movff	postdec2,tblptrh
  1117  0014E6                     	if	0	;tblptru may be non-zero
  1118  0014E6                     	endif
  1119  0014E6                     	if	0	;tblptru may be non-zero
  1120  0014E6                     	endif
  1121  0014E6  0008               	tblrd		*
  1122  0014E8  50F5               	movf	tablat,w,c
  1123  0014EA  0A64               	xorlw	100
  1124  0014EC  B4D8               	btfsc	status,2,c
  1125  0014EE  EF7B  F00A         	goto	u2631
  1126  0014F2  EF7D  F00A         	goto	u2630
  1127  0014F6                     u2631:
  1128  0014F6  EF8F  F00A         	goto	l2820
  1129  0014FA                     u2630:
  1130  0014FA                     
  1131                           ; BSR set to: 0
  1132  0014FA  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1133  0014FE  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1134  001502  CFDE FFF6          	movff	postinc2,tblptrl
  1135  001506  CFDD FFF7          	movff	postdec2,tblptrh
  1136  00150A                     	if	0	;tblptru may be non-zero
  1137  00150A                     	endif
  1138  00150A                     	if	0	;tblptru may be non-zero
  1139  00150A                     	endif
  1140  00150A  0008               	tblrd		*
  1141  00150C  50F5               	movf	tablat,w,c
  1142  00150E  0A69               	xorlw	105
  1143  001510  A4D8               	btfss	status,2,c
  1144  001512  EF8D  F00A         	goto	u2641
  1145  001516  EF8F  F00A         	goto	u2640
  1146  00151A                     u2641:
  1147  00151A  EFCF  F00A         	goto	l2826
  1148  00151E                     u2640:
  1149  00151E                     l2820:
  1150                           
  1151                           ; BSR set to: 0
  1152                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  1153  00151E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1154  001522  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1155  001526  2ADE               	incf	postinc2,f,c
  1156  001528  0E00               	movlw	0
  1157  00152A  22DD               	addwfc	postdec2,f,c
  1158                           
  1159                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1160  00152C  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1161  001530  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1162  001534  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1163  001538  0E02               	movlw	2
  1164  00153A  26DE               	addwf	postinc2,f,c
  1165  00153C  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1166  001540  0E00               	movlw	0
  1167  001542  22DD               	addwfc	postdec2,f,c
  1168  001544  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1169  001548  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1170  00154C  CFDE F072          	movff	postinc2,vfpfcnvrt@ll
  1171  001550  CFDD F073          	movff	postdec2,vfpfcnvrt@ll+1
  1172  001554  0E00               	movlw	0
  1173  001556  BF73               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1174  001558  0EFF               	movlw	-1
  1175  00155A  6F74               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1176  00155C  6F75               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1177  00155E  6F76               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1178  001560  6F77               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1179  001562  6F78               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1180  001564  6F79               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1181  001566                     
  1182                           ; BSR set to: 0
  1183                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  1184  001566  C03A  F028         	movff	vfpfcnvrt@fp,dtoa@fp
  1185  00156A  C03B  F029         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1186  00156E  C072  F02A         	movff	vfpfcnvrt@ll,dtoa@d
  1187  001572  C073  F02B         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1188  001576  C074  F02C         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1189  00157A  C075  F02D         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1190  00157E  C076  F02E         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1191  001582  C077  F02F         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1192  001586  C078  F030         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1193  00158A  C079  F031         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1194  00158E  ECEA  F007         	call	_dtoa	;wreg free
  1195  001592  C028  F03A         	movff	?_dtoa,?_vfpfcnvrt
  1196  001596  C029  F03B         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1197  00159A  EF20  F00B         	goto	l891
  1198  00159E                     l2826:
  1199                           
  1200                           ; BSR set to: 0
  1201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  1202  00159E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1203  0015A2  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1204  0015A6  CFDE FFF6          	movff	postinc2,tblptrl
  1205  0015AA  CFDD FFF7          	movff	postdec2,tblptrh
  1206  0015AE                     	if	0	;tblptru may be non-zero
  1207  0015AE                     	endif
  1208  0015AE                     	if	0	;tblptru may be non-zero
  1209  0015AE                     	endif
  1210  0015AE  0008               	tblrd		*
  1211  0015B0  50F5               	movf	tablat,w,c
  1212  0015B2  0A25               	xorlw	37
  1213  0015B4  A4D8               	btfss	status,2,c
  1214  0015B6  EFDF  F00A         	goto	u2651
  1215  0015BA  EFE1  F00A         	goto	u2650
  1216  0015BE                     u2651:
  1217  0015BE  EFF8  F00A         	goto	l2836
  1218  0015C2                     u2650:
  1219  0015C2                     
  1220                           ; BSR set to: 0
  1221                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  1222  0015C2  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1223  0015C6  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1224  0015CA  2ADE               	incf	postinc2,f,c
  1225  0015CC  0E00               	movlw	0
  1226  0015CE  22DD               	addwfc	postdec2,f,c
  1227  0015D0                     
  1228                           ; BSR set to: 0
  1229                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  1230  0015D0  0E00               	movlw	0
  1231  0015D2  6E0E               	movwf	(fputc@c+1)^0,c
  1232  0015D4  0E25               	movlw	37
  1233  0015D6  6E0D               	movwf	fputc@c^0,c
  1234  0015D8  C03A  F00F         	movff	vfpfcnvrt@fp,fputc@fp
  1235  0015DC  C03B  F010         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1236  0015E0  EC71  F00E         	call	_fputc	;wreg free
  1237  0015E4                     l2832:
  1238                           
  1239                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  1240  0015E4  0E00               	movlw	0
  1241  0015E6  6E3B               	movwf	(?_vfpfcnvrt+1)^0,c
  1242  0015E8  0E01               	movlw	1
  1243  0015EA  6E3A               	movwf	?_vfpfcnvrt^0,c
  1244  0015EC  EF20  F00B         	goto	l891
  1245  0015F0                     l2836:
  1246                           
  1247                           ; BSR set to: 0
  1248                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  1249  0015F0  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1250  0015F4  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1251  0015F8  2ADE               	incf	postinc2,f,c
  1252  0015FA  0E00               	movlw	0
  1253  0015FC  22DD               	addwfc	postdec2,f,c
  1254  0015FE                     
  1255                           ; BSR set to: 0
  1256                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  1257  0015FE  0E00               	movlw	0
  1258  001600  6E3B               	movwf	(?_vfpfcnvrt+1)^0,c
  1259  001602  0E00               	movlw	0
  1260  001604  6E3A               	movwf	?_vfpfcnvrt^0,c
  1261  001606  EF20  F00B         	goto	l891
  1262  00160A                     l2842:
  1263                           
  1264                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  1265  00160A  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1266  00160E  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1267  001612  CFDE FFF6          	movff	postinc2,tblptrl
  1268  001616  CFDD FFF7          	movff	postdec2,tblptrh
  1269  00161A                     	if	0	;tblptru may be non-zero
  1270  00161A                     	endif
  1271  00161A                     	if	0	;tblptru may be non-zero
  1272  00161A                     	endif
  1273  00161A  0008               	tblrd		*
  1274  00161C  50F5               	movf	tablat,w,c
  1275  00161E  6E0D               	movwf	fputc@c^0,c
  1276  001620  6A0E               	clrf	(fputc@c+1)^0,c
  1277  001622  C03A  F00F         	movff	vfpfcnvrt@fp,fputc@fp
  1278  001626  C03B  F010         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1279  00162A  EC71  F00E         	call	_fputc	;wreg free
  1280  00162E                     
  1281                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  1282  00162E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1283  001632  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1284  001636  2ADE               	incf	postinc2,f,c
  1285  001638  0E00               	movlw	0
  1286  00163A  22DD               	addwfc	postdec2,f,c
  1287  00163C  EFF2  F00A         	goto	l2832
  1288  001640                     l891:
  1289  001640  0012               	return		;funcret
  1290  001642                     __end_of_vfpfcnvrt:
  1291                           	callstack 0
  1292                           
  1293 ;; *************** function _dtoa *****************
  1294 ;; Defined at:
  1295 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;  fp              2   39[COMRAM] PTR struct _IO_FILE
  1298 ;;		 -> sprintf@f(6), 
  1299 ;;  d               8   41[COMRAM] long long 
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;  n               8    8[BANK0 ] long long 
  1302 ;;  i               2   16[BANK0 ] int 
  1303 ;;  s               2    6[BANK0 ] int 
  1304 ;;  w               2    4[BANK0 ] int 
  1305 ;;  p               2    2[BANK0 ] int 
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  2   39[COMRAM] int 
  1308 ;; Registers used:
  1309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1315 ;;      Params:        10       0       0       0       0       0       0       0       0
  1316 ;;      Locals:         0      18       0       0       0       0       0       0       0
  1317 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1318 ;;      Totals:        18      18       0       0       0       0       0       0       0
  1319 ;;Total ram usage:       36 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    6
  1322 ;; This function calls:
  1323 ;;		___aodiv
  1324 ;;		___aomod
  1325 ;;		_abs
  1326 ;;		_pad
  1327 ;; This function is called by:
  1328 ;;		_vfpfcnvrt
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text4
  1333  000FD4                     __ptext4:
  1334                           	callstack 0
  1335  000FD4                     _dtoa:
  1336                           	callstack 21
  1337  000FD4                     
  1338                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  1339  000FD4  C02A  F068         	movff	dtoa@d,dtoa@n
  1340  000FD8  C02B  F069         	movff	dtoa@d+1,dtoa@n+1
  1341  000FDC  C02C  F06A         	movff	dtoa@d+2,dtoa@n+2
  1342  000FE0  C02D  F06B         	movff	dtoa@d+3,dtoa@n+3
  1343  000FE4  C02E  F06C         	movff	dtoa@d+4,dtoa@n+4
  1344  000FE8  C02F  F06D         	movff	dtoa@d+5,dtoa@n+5
  1345  000FEC  C030  F06E         	movff	dtoa@d+6,dtoa@n+6
  1346  000FF0  C031  F06F         	movff	dtoa@d+7,dtoa@n+7
  1347  000FF4                     
  1348                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  1349  000FF4  0100               	movlb	0	; () banked
  1350  000FF6  BF6F               	btfsc	(dtoa@n+7)& (0+255),7,b
  1351  000FF8  EF00  F008         	goto	u2471
  1352  000FFC  EF03  F008         	goto	u2470
  1353  001000                     u2471:
  1354  001000  0E01               	movlw	1
  1355  001002  EF04  F008         	goto	u2480
  1356  001006                     u2470:
  1357  001006  0E00               	movlw	0
  1358  001008                     u2480:
  1359  001008  6F66               	movwf	dtoa@s& (0+255),b
  1360  00100A  6B67               	clrf	(dtoa@s+1)& (0+255),b
  1361                           
  1362                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  1363  00100C  5166               	movf	dtoa@s& (0+255),w,b
  1364  00100E  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  1365  001010  B4D8               	btfsc	status,2,c
  1366  001012  EF0D  F008         	goto	u2491
  1367  001016  EF0F  F008         	goto	u2490
  1368  00101A                     u2491:
  1369  00101A  EF1F  F008         	goto	l2752
  1370  00101E                     u2490:
  1371  00101E                     
  1372                           ; BSR set to: 0
  1373                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  1374  00101E  1F6F               	comf	(dtoa@n+7)& (0+255),f,b
  1375  001020  1F6E               	comf	(dtoa@n+6)& (0+255),f,b
  1376  001022  1F6D               	comf	(dtoa@n+5)& (0+255),f,b
  1377  001024  1F6C               	comf	(dtoa@n+4)& (0+255),f,b
  1378  001026  1F6B               	comf	(dtoa@n+3)& (0+255),f,b
  1379  001028  1F6A               	comf	(dtoa@n+2)& (0+255),f,b
  1380  00102A  1F69               	comf	(dtoa@n+1)& (0+255),f,b
  1381  00102C  6D68               	negf	dtoa@n& (0+255),b
  1382  00102E  0E00               	movlw	0
  1383  001030  2369               	addwfc	(dtoa@n+1)& (0+255),f,b
  1384  001032  236A               	addwfc	(dtoa@n+2)& (0+255),f,b
  1385  001034  236B               	addwfc	(dtoa@n+3)& (0+255),f,b
  1386  001036  236C               	addwfc	(dtoa@n+4)& (0+255),f,b
  1387  001038  236D               	addwfc	(dtoa@n+5)& (0+255),f,b
  1388  00103A  236E               	addwfc	(dtoa@n+6)& (0+255),f,b
  1389  00103C  236F               	addwfc	(dtoa@n+7)& (0+255),f,b
  1390  00103E                     l2752:
  1391                           
  1392                           ; BSR set to: 0
  1393                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  1394  00103E  BE4B               	btfsc	(_prec+1)^0,7,c
  1395  001040  EF24  F008         	goto	u2501
  1396  001044  EF26  F008         	goto	u2500
  1397  001048                     u2501:
  1398  001048  EF27  F008         	goto	l2756
  1399  00104C                     u2500:
  1400  00104C                     
  1401                           ; BSR set to: 0
  1402                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  1403  00104C  924C               	bcf	_flags^0,1,c
  1404  00104E                     l2756:
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  1408  00104E  BE4B               	btfsc	(_prec+1)^0,7,c
  1409  001050  EF34  F008         	goto	u2510
  1410  001054  504B               	movf	(_prec+1)^0,w,c
  1411  001056  E106               	bnz	u2511
  1412  001058  044A               	decf	_prec^0,w,c
  1413  00105A  B0D8               	btfsc	status,0,c
  1414  00105C  EF32  F008         	goto	u2511
  1415  001060  EF34  F008         	goto	u2510
  1416  001064                     u2511:
  1417  001064  EF3A  F008         	goto	l864
  1418  001068                     u2510:
  1419  001068                     
  1420                           ; BSR set to: 0
  1421  001068  0E00               	movlw	0
  1422  00106A  6F63               	movwf	(dtoa@p+1)& (0+255),b
  1423  00106C  0E01               	movlw	1
  1424  00106E  6F62               	movwf	dtoa@p& (0+255),b
  1425  001070  EF3E  F008         	goto	l866
  1426  001074                     l864:
  1427                           
  1428                           ; BSR set to: 0
  1429  001074  C04A  F062         	movff	_prec,dtoa@p
  1430  001078  C04B  F063         	movff	_prec+1,dtoa@p+1
  1431  00107C                     l866:
  1432                           
  1433                           ; BSR set to: 0
  1434                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  1435  00107C  C0A4  F064         	movff	_width,dtoa@w
  1436  001080  C0A5  F065         	movff	_width+1,dtoa@w+1
  1437  001084                     
  1438                           ; BSR set to: 0
  1439                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  1440  001084  5166               	movf	dtoa@s& (0+255),w,b
  1441  001086  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  1442  001088  A4D8               	btfss	status,2,c
  1443  00108A  EF49  F008         	goto	u2521
  1444  00108E  EF4B  F008         	goto	u2520
  1445  001092                     u2521:
  1446  001092  EF52  F008         	goto	l2764
  1447  001096                     u2520:
  1448  001096                     
  1449                           ; BSR set to: 0
  1450  001096  A44C               	btfss	_flags^0,2,c
  1451  001098  EF50  F008         	goto	u2531
  1452  00109C  EF52  F008         	goto	u2530
  1453  0010A0                     u2531:
  1454  0010A0  EF55  F008         	goto	l2766
  1455  0010A4                     u2530:
  1456  0010A4                     l2764:
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  1460  0010A4  0764               	decf	dtoa@w& (0+255),f,b
  1461  0010A6  A0D8               	btfss	status,0,c
  1462  0010A8  0765               	decf	(dtoa@w+1)& (0+255),f,b
  1463  0010AA                     l2766:
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  1467  0010AA  0E00               	movlw	0
  1468  0010AC  6F71               	movwf	(dtoa@i+1)& (0+255),b
  1469  0010AE  0E1F               	movlw	31
  1470  0010B0  6F70               	movwf	dtoa@i& (0+255),b
  1471  0010B2                     
  1472                           ; BSR set to: 0
  1473                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  1474  0010B2  0E00               	movlw	0
  1475  0010B4  6FC9               	movwf	(_dbuf+31)& (0+255),b
  1476                           
  1477                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1478  0010B6  EFDA  F008         	goto	l2780
  1479  0010BA                     l2770:
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  1483  0010BA  0770               	decf	dtoa@i& (0+255),f,b
  1484  0010BC  A0D8               	btfss	status,0,c
  1485  0010BE  0771               	decf	(dtoa@i+1)& (0+255),f,b
  1486  0010C0                     
  1487                           ; BSR set to: 0
  1488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  1489  0010C0  0EAA               	movlw	low _dbuf
  1490  0010C2  2570               	addwf	dtoa@i& (0+255),w,b
  1491  0010C4  6ED9               	movwf	fsr2l,c
  1492  0010C6  0E00               	movlw	high _dbuf
  1493  0010C8  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  1494  0010CA  6EDA               	movwf	fsr2h,c
  1495  0010CC  C068  F00D         	movff	dtoa@n,___aomod@dividend
  1496  0010D0  C069  F00E         	movff	dtoa@n+1,___aomod@dividend+1
  1497  0010D4  C06A  F00F         	movff	dtoa@n+2,___aomod@dividend+2
  1498  0010D8  C06B  F010         	movff	dtoa@n+3,___aomod@dividend+3
  1499  0010DC  C06C  F011         	movff	dtoa@n+4,___aomod@dividend+4
  1500  0010E0  C06D  F012         	movff	dtoa@n+5,___aomod@dividend+5
  1501  0010E4  C06E  F013         	movff	dtoa@n+6,___aomod@dividend+6
  1502  0010E8  C06F  F014         	movff	dtoa@n+7,___aomod@dividend+7
  1503  0010EC  0E0A               	movlw	10
  1504  0010EE  6E15               	movwf	___aomod@divisor^0,c
  1505  0010F0  0E00               	movlw	0
  1506  0010F2  6E16               	movwf	(___aomod@divisor+1)^0,c
  1507  0010F4  0E00               	movlw	0
  1508  0010F6  6E17               	movwf	(___aomod@divisor+2)^0,c
  1509  0010F8  0E00               	movlw	0
  1510  0010FA  6E18               	movwf	(___aomod@divisor+3)^0,c
  1511  0010FC  0E00               	movlw	0
  1512  0010FE  6E19               	movwf	(___aomod@divisor+4)^0,c
  1513  001100  0E00               	movlw	0
  1514  001102  6E1A               	movwf	(___aomod@divisor+5)^0,c
  1515  001104  0E00               	movlw	0
  1516  001106  6E1B               	movwf	(___aomod@divisor+6)^0,c
  1517  001108  0E00               	movlw	0
  1518  00110A  6E1C               	movwf	(___aomod@divisor+7)^0,c
  1519  00110C  ECBF  F00C         	call	___aomod	;wreg free
  1520  001110  C00D  F032         	movff	?___aomod,??_dtoa
  1521  001114  C00E  F033         	movff	?___aomod+1,??_dtoa+1
  1522  001118  C00F  F034         	movff	?___aomod+2,??_dtoa+2
  1523  00111C  C010  F035         	movff	?___aomod+3,??_dtoa+3
  1524  001120  C011  F036         	movff	?___aomod+4,??_dtoa+4
  1525  001124  C012  F037         	movff	?___aomod+5,??_dtoa+5
  1526  001128  C013  F038         	movff	?___aomod+6,??_dtoa+6
  1527  00112C  C014  F039         	movff	?___aomod+7,??_dtoa+7
  1528  001130  C032  F01F         	movff	??_dtoa,abs@a
  1529  001134  C034  F020         	movff	??_dtoa+2,abs@a+1
  1530  001138  EC1D  F011         	call	_abs	;wreg free
  1531  00113C  501F               	movf	?_abs^0,w,c
  1532  00113E  0F30               	addlw	48
  1533  001140  6EDF               	movwf	indf2,c
  1534  001142                     
  1535                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  1536  001142  0100               	movlb	0	; () banked
  1537  001144  0762               	decf	dtoa@p& (0+255),f,b
  1538  001146  A0D8               	btfss	status,0,c
  1539  001148  0763               	decf	(dtoa@p+1)& (0+255),f,b
  1540  00114A                     
  1541                           ; BSR set to: 0
  1542                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  1543  00114A  0764               	decf	dtoa@w& (0+255),f,b
  1544  00114C  A0D8               	btfss	status,0,c
  1545  00114E  0765               	decf	(dtoa@w+1)& (0+255),f,b
  1546  001150                     
  1547                           ; BSR set to: 0
  1548                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  1549  001150  C068  F00D         	movff	dtoa@n,___aodiv@dividend
  1550  001154  C069  F00E         	movff	dtoa@n+1,___aodiv@dividend+1
  1551  001158  C06A  F00F         	movff	dtoa@n+2,___aodiv@dividend+2
  1552  00115C  C06B  F010         	movff	dtoa@n+3,___aodiv@dividend+3
  1553  001160  C06C  F011         	movff	dtoa@n+4,___aodiv@dividend+4
  1554  001164  C06D  F012         	movff	dtoa@n+5,___aodiv@dividend+5
  1555  001168  C06E  F013         	movff	dtoa@n+6,___aodiv@dividend+6
  1556  00116C  C06F  F014         	movff	dtoa@n+7,___aodiv@dividend+7
  1557  001170  0E0A               	movlw	10
  1558  001172  6E15               	movwf	___aodiv@divisor^0,c
  1559  001174  0E00               	movlw	0
  1560  001176  6E16               	movwf	(___aodiv@divisor+1)^0,c
  1561  001178  0E00               	movlw	0
  1562  00117A  6E17               	movwf	(___aodiv@divisor+2)^0,c
  1563  00117C  0E00               	movlw	0
  1564  00117E  6E18               	movwf	(___aodiv@divisor+3)^0,c
  1565  001180  0E00               	movlw	0
  1566  001182  6E19               	movwf	(___aodiv@divisor+4)^0,c
  1567  001184  0E00               	movlw	0
  1568  001186  6E1A               	movwf	(___aodiv@divisor+5)^0,c
  1569  001188  0E00               	movlw	0
  1570  00118A  6E1B               	movwf	(___aodiv@divisor+6)^0,c
  1571  00118C  0E00               	movlw	0
  1572  00118E  6E1C               	movwf	(___aodiv@divisor+7)^0,c
  1573  001190  ECFB  F00B         	call	___aodiv	;wreg free
  1574  001194  C00D  F068         	movff	?___aodiv,dtoa@n
  1575  001198  C00E  F069         	movff	?___aodiv+1,dtoa@n+1
  1576  00119C  C00F  F06A         	movff	?___aodiv+2,dtoa@n+2
  1577  0011A0  C010  F06B         	movff	?___aodiv+3,dtoa@n+3
  1578  0011A4  C011  F06C         	movff	?___aodiv+4,dtoa@n+4
  1579  0011A8  C012  F06D         	movff	?___aodiv+5,dtoa@n+5
  1580  0011AC  C013  F06E         	movff	?___aodiv+6,dtoa@n+6
  1581  0011B0  C014  F06F         	movff	?___aodiv+7,dtoa@n+7
  1582  0011B4                     l2780:
  1583                           
  1584                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1585  0011B4  0100               	movlb	0	; () banked
  1586  0011B6  BF71               	btfsc	(dtoa@i+1)& (0+255),7,b
  1587  0011B8  EFE6  F008         	goto	u2541
  1588  0011BC  5171               	movf	(dtoa@i+1)& (0+255),w,b
  1589  0011BE  E108               	bnz	u2540
  1590  0011C0  0570               	decf	dtoa@i& (0+255),w,b
  1591  0011C2  A0D8               	btfss	status,0,c
  1592  0011C4  EFE6  F008         	goto	u2541
  1593  0011C8  EFE8  F008         	goto	u2540
  1594  0011CC                     u2541:
  1595  0011CC  EF18  F009         	goto	l2790
  1596  0011D0                     u2540:
  1597  0011D0                     
  1598                           ; BSR set to: 0
  1599  0011D0  5168               	movf	dtoa@n& (0+255),w,b
  1600  0011D2  1169               	iorwf	(dtoa@n+1)& (0+255),w,b
  1601  0011D4  116A               	iorwf	(dtoa@n+2)& (0+255),w,b
  1602  0011D6  116B               	iorwf	(dtoa@n+3)& (0+255),w,b
  1603  0011D8  116C               	iorwf	(dtoa@n+4)& (0+255),w,b
  1604  0011DA  116D               	iorwf	(dtoa@n+5)& (0+255),w,b
  1605  0011DC  116E               	iorwf	(dtoa@n+6)& (0+255),w,b
  1606  0011DE  116F               	iorwf	(dtoa@n+7)& (0+255),w,b
  1607  0011E0  A4D8               	btfss	status,2,c
  1608  0011E2  EFF5  F008         	goto	u2551
  1609  0011E6  EFF7  F008         	goto	u2550
  1610  0011EA                     u2551:
  1611  0011EA  EF5D  F008         	goto	l2770
  1612  0011EE                     u2550:
  1613  0011EE                     
  1614                           ; BSR set to: 0
  1615  0011EE  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
  1616  0011F0  EF04  F009         	goto	u2560
  1617  0011F4  5163               	movf	(dtoa@p+1)& (0+255),w,b
  1618  0011F6  E106               	bnz	u2561
  1619  0011F8  0562               	decf	dtoa@p& (0+255),w,b
  1620  0011FA  B0D8               	btfsc	status,0,c
  1621  0011FC  EF02  F009         	goto	u2561
  1622  001200  EF04  F009         	goto	u2560
  1623  001204                     u2561:
  1624  001204  EF5D  F008         	goto	l2770
  1625  001208                     u2560:
  1626  001208                     
  1627                           ; BSR set to: 0
  1628  001208  BF65               	btfsc	(dtoa@w+1)& (0+255),7,b
  1629  00120A  EF0F  F009         	goto	u2571
  1630  00120E  5165               	movf	(dtoa@w+1)& (0+255),w,b
  1631  001210  E108               	bnz	u2570
  1632  001212  0564               	decf	dtoa@w& (0+255),w,b
  1633  001214  A0D8               	btfss	status,0,c
  1634  001216  EF0F  F009         	goto	u2571
  1635  00121A  EF11  F009         	goto	u2570
  1636  00121E                     u2571:
  1637  00121E  EF18  F009         	goto	l2790
  1638  001222                     u2570:
  1639  001222                     
  1640                           ; BSR set to: 0
  1641  001222  B24C               	btfsc	_flags^0,1,c
  1642  001224  EF16  F009         	goto	u2581
  1643  001228  EF18  F009         	goto	u2580
  1644  00122C                     u2581:
  1645  00122C  EF5D  F008         	goto	l2770
  1646  001230                     u2580:
  1647  001230                     l2790:
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  1651  001230  5166               	movf	dtoa@s& (0+255),w,b
  1652  001232  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  1653  001234  A4D8               	btfss	status,2,c
  1654  001236  EF1F  F009         	goto	u2591
  1655  00123A  EF21  F009         	goto	u2590
  1656  00123E                     u2591:
  1657  00123E  EF28  F009         	goto	l2794
  1658  001242                     u2590:
  1659  001242                     
  1660                           ; BSR set to: 0
  1661  001242  A44C               	btfss	_flags^0,2,c
  1662  001244  EF26  F009         	goto	u2601
  1663  001248  EF28  F009         	goto	u2600
  1664  00124C                     u2601:
  1665  00124C  EF46  F009         	goto	l2804
  1666  001250                     u2600:
  1667  001250                     l2794:
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  1671  001250  0770               	decf	dtoa@i& (0+255),f,b
  1672  001252  A0D8               	btfss	status,0,c
  1673  001254  0771               	decf	(dtoa@i+1)& (0+255),f,b
  1674  001256                     
  1675                           ; BSR set to: 0
  1676                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  1677  001256  5166               	movf	dtoa@s& (0+255),w,b
  1678  001258  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  1679  00125A  A4D8               	btfss	status,2,c
  1680  00125C  EF32  F009         	goto	u2611
  1681  001260  EF34  F009         	goto	u2610
  1682  001264                     u2611:
  1683  001264  EF3A  F009         	goto	l2800
  1684  001268                     u2610:
  1685  001268                     
  1686                           ; BSR set to: 0
  1687  001268  0E00               	movlw	0
  1688  00126A  6F61               	movwf	(_dtoa$823+1)& (0+255),b
  1689  00126C  0E2B               	movlw	43
  1690  00126E  6F60               	movwf	_dtoa$823& (0+255),b
  1691  001270  EF3E  F009         	goto	l2802
  1692  001274                     l2800:
  1693                           
  1694                           ; BSR set to: 0
  1695  001274  0E00               	movlw	0
  1696  001276  6F61               	movwf	(_dtoa$823+1)& (0+255),b
  1697  001278  0E2D               	movlw	45
  1698  00127A  6F60               	movwf	_dtoa$823& (0+255),b
  1699  00127C                     l2802:
  1700                           
  1701                           ; BSR set to: 0
  1702  00127C  0EAA               	movlw	low _dbuf
  1703  00127E  2570               	addwf	dtoa@i& (0+255),w,b
  1704  001280  6ED9               	movwf	fsr2l,c
  1705  001282  0E00               	movlw	high _dbuf
  1706  001284  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  1707  001286  6EDA               	movwf	fsr2h,c
  1708  001288  C060  FFDF         	movff	_dtoa$823,indf2
  1709  00128C                     l2804:
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  1713  00128C  C028  F01D         	movff	dtoa@fp,pad@fp
  1714  001290  C029  F01E         	movff	dtoa@fp+1,pad@fp+1
  1715  001294  0EAA               	movlw	low _dbuf
  1716  001296  2570               	addwf	dtoa@i& (0+255),w,b
  1717  001298  6E1F               	movwf	pad@buf^0,c
  1718  00129A  0E00               	movlw	high _dbuf
  1719  00129C  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  1720  00129E  6E20               	movwf	(pad@buf+1)^0,c
  1721  0012A0  C064  F021         	movff	dtoa@w,pad@p
  1722  0012A4  C065  F022         	movff	dtoa@w+1,pad@p+1
  1723  0012A8  ECD6  F00E         	call	_pad	;wreg free
  1724  0012AC  C01D  F028         	movff	?_pad,?_dtoa
  1725  0012B0  C01E  F029         	movff	?_pad+1,?_dtoa+1
  1726  0012B4  0012               	return		;funcret
  1727  0012B6                     __end_of_dtoa:
  1728                           	callstack 0
  1729                           
  1730 ;; *************** function _pad *****************
  1731 ;; Defined at:
  1732 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  1735 ;;		 -> sprintf@f(6), 
  1736 ;;  buf             2   30[COMRAM] PTR unsigned char 
  1737 ;;		 -> dbuf(32), 
  1738 ;;  p               2   32[COMRAM] int 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  w               2   37[COMRAM] int 
  1741 ;;  i               2   35[COMRAM] int 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  2   28[COMRAM] int 
  1744 ;; Registers used:
  1745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1751 ;;      Params:         6       0       0       0       0       0       0       0       0
  1752 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1753 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1754 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1755 ;;Total ram usage:       11 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:    5
  1758 ;; This function calls:
  1759 ;;		_fputc
  1760 ;;		_fputs
  1761 ;;		_strlen
  1762 ;; This function is called by:
  1763 ;;		_dtoa
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           	psect	text5
  1768  001DAC                     __ptext5:
  1769                           	callstack 0
  1770  001DAC                     _pad:
  1771                           	callstack 21
  1772  001DAC                     
  1773                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1774  001DAC  A04C               	btfss	_flags^0,0,c
  1775  001DAE  EFDB  F00E         	goto	u2421
  1776  001DB2  EFDD  F00E         	goto	u2420
  1777  001DB6                     u2421:
  1778  001DB6  EFE7  F00E         	goto	l2724
  1779  001DBA                     u2420:
  1780  001DBA                     
  1781                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1782  001DBA  C01F  F016         	movff	pad@buf,fputs@s
  1783  001DBE  C020  F017         	movff	pad@buf+1,fputs@s+1
  1784  001DC2  C01D  F018         	movff	pad@fp,fputs@fp
  1785  001DC6  C01E  F019         	movff	pad@fp+1,fputs@fp+1
  1786  001DCA  ECFB  F010         	call	_fputs	;wreg free
  1787  001DCE                     l2724:
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1790  001DCE  BE22               	btfsc	(pad@p+1)^0,7,c
  1791  001DD0  EFEC  F00E         	goto	u2431
  1792  001DD4  EFEE  F00E         	goto	u2430
  1793  001DD8                     u2431:
  1794  001DD8  EFF4  F00E         	goto	l2728
  1795  001DDC                     u2430:
  1796  001DDC  C021  F026         	movff	pad@p,pad@w
  1797  001DE0  C022  F027         	movff	pad@p+1,pad@w+1
  1798  001DE4  EFF8  F00E         	goto	l853
  1799  001DE8                     l2728:
  1800  001DE8  0E00               	movlw	0
  1801  001DEA  6E27               	movwf	(pad@w+1)^0,c
  1802  001DEC  0E00               	movlw	0
  1803  001DEE  6E26               	movwf	pad@w^0,c
  1804  001DF0                     l853:
  1805                           
  1806                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1807  001DF0  0E00               	movlw	0
  1808  001DF2  6E25               	movwf	(pad@i+1)^0,c
  1809  001DF4  0E00               	movlw	0
  1810  001DF6  6E24               	movwf	pad@i^0,c
  1811                           
  1812                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1813  001DF8  EF0A  F00F         	goto	l2734
  1814  001DFC                     l2730:
  1815                           
  1816                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1817  001DFC  0E00               	movlw	0
  1818  001DFE  6E0E               	movwf	(fputc@c+1)^0,c
  1819  001E00  0E20               	movlw	32
  1820  001E02  6E0D               	movwf	fputc@c^0,c
  1821  001E04  C01D  F00F         	movff	pad@fp,fputc@fp
  1822  001E08  C01E  F010         	movff	pad@fp+1,fputc@fp+1
  1823  001E0C  EC71  F00E         	call	_fputc	;wreg free
  1824  001E10                     
  1825                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1826  001E10  4A24               	infsnz	pad@i^0,f,c
  1827  001E12  2A25               	incf	(pad@i+1)^0,f,c
  1828  001E14                     l2734:
  1829                           
  1830                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1831  001E14  5026               	movf	pad@w^0,w,c
  1832  001E16  5C24               	subwf	pad@i^0,w,c
  1833  001E18  5025               	movf	(pad@i+1)^0,w,c
  1834  001E1A  0A80               	xorlw	128
  1835  001E1C  6E23               	movwf	??_pad^0,c
  1836  001E1E  5027               	movf	(pad@w+1)^0,w,c
  1837  001E20  0A80               	xorlw	128
  1838  001E22  5823               	subwfb	??_pad^0,w,c
  1839  001E24  A0D8               	btfss	status,0,c
  1840  001E26  EF17  F00F         	goto	u2441
  1841  001E2A  EF19  F00F         	goto	u2440
  1842  001E2E                     u2441:
  1843  001E2E  EFFE  F00E         	goto	l2730
  1844  001E32                     u2440:
  1845  001E32                     
  1846                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1847  001E32  B04C               	btfsc	_flags^0,0,c
  1848  001E34  EF1E  F00F         	goto	u2451
  1849  001E38  EF20  F00F         	goto	u2450
  1850  001E3C                     u2451:
  1851  001E3C  EF2A  F00F         	goto	l2738
  1852  001E40                     u2450:
  1853  001E40                     
  1854                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1855  001E40  C01F  F016         	movff	pad@buf,fputs@s
  1856  001E44  C020  F017         	movff	pad@buf+1,fputs@s+1
  1857  001E48  C01D  F018         	movff	pad@fp,fputs@fp
  1858  001E4C  C01E  F019         	movff	pad@fp+1,fputs@fp+1
  1859  001E50  ECFB  F010         	call	_fputs	;wreg free
  1860  001E54                     l2738:
  1861                           
  1862                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  1863  001E54  C01F  F00D         	movff	pad@buf,strlen@s
  1864  001E58  C020  F00E         	movff	pad@buf+1,strlen@s+1
  1865  001E5C  EC3D  F011         	call	_strlen	;wreg free
  1866  001E60  5026               	movf	pad@w^0,w,c
  1867  001E62  240D               	addwf	?_strlen^0,w,c
  1868  001E64  6E1D               	movwf	?_pad^0,c
  1869  001E66  5027               	movf	(pad@w+1)^0,w,c
  1870  001E68  200E               	addwfc	(?_strlen+1)^0,w,c
  1871  001E6A  6E1E               	movwf	(?_pad+1)^0,c
  1872  001E6C  0012               	return		;funcret
  1873  001E6E                     __end_of_pad:
  1874                           	callstack 0
  1875                           
  1876 ;; *************** function _strlen *****************
  1877 ;; Defined at:
  1878 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  s               2   12[COMRAM] PTR const unsigned char 
  1881 ;;		 -> dbuf(32), 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  a               2   14[COMRAM] PTR const unsigned char 
  1884 ;;		 -> dbuf(32), 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  2   12[COMRAM] unsigned int 
  1887 ;; Registers used:
  1888 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1894 ;;      Params:         2       0       0       0       0       0       0       0       0
  1895 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1897 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1898 ;;Total ram usage:        4 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    2
  1901 ;; This function calls:
  1902 ;;		Nothing
  1903 ;; This function is called by:
  1904 ;;		_pad
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           	psect	text6
  1909  00227A                     __ptext6:
  1910                           	callstack 0
  1911  00227A                     _strlen:
  1912                           	callstack 23
  1913  00227A  C00D  F00F         	movff	strlen@s,strlen@a
  1914  00227E  C00E  F010         	movff	strlen@s+1,strlen@a+1
  1915  002282  EF45  F011         	goto	l2634
  1916  002286                     l2632:
  1917  002286  4A0D               	infsnz	strlen@s^0,f,c
  1918  002288  2A0E               	incf	(strlen@s+1)^0,f,c
  1919  00228A                     l2634:
  1920  00228A  C00D  FFD9         	movff	strlen@s,fsr2l
  1921  00228E  C00E  FFDA         	movff	strlen@s+1,fsr2h
  1922  002292  50DF               	movf	indf2,w,c
  1923  002294  A4D8               	btfss	status,2,c
  1924  002296  EF4F  F011         	goto	u2281
  1925  00229A  EF51  F011         	goto	u2280
  1926  00229E                     u2281:
  1927  00229E  EF43  F011         	goto	l2632
  1928  0022A2                     u2280:
  1929  0022A2  500F               	movf	strlen@a^0,w,c
  1930  0022A4  5C0D               	subwf	strlen@s^0,w,c
  1931  0022A6  6E0D               	movwf	?_strlen^0,c
  1932  0022A8  5010               	movf	(strlen@a+1)^0,w,c
  1933  0022AA  580E               	subwfb	(strlen@s+1)^0,w,c
  1934  0022AC  6E0E               	movwf	(?_strlen+1)^0,c
  1935  0022AE  0012               	return		;funcret
  1936  0022B0                     __end_of_strlen:
  1937                           	callstack 0
  1938                           
  1939 ;; *************** function _fputs *****************
  1940 ;; Defined at:
  1941 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  s               2   21[COMRAM] PTR const unsigned char 
  1944 ;;		 -> dbuf(32), 
  1945 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  1946 ;;		 -> sprintf@f(6), 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  i               2   26[COMRAM] int 
  1949 ;;  c               1   25[COMRAM] unsigned char 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  2   21[COMRAM] int 
  1952 ;; Registers used:
  1953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1959 ;;      Params:         4       0       0       0       0       0       0       0       0
  1960 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1962 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1963 ;;Total ram usage:        7 bytes
  1964 ;; Hardware stack levels used:    1
  1965 ;; Hardware stack levels required when called:    4
  1966 ;; This function calls:
  1967 ;;		_fputc
  1968 ;; This function is called by:
  1969 ;;		_pad
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text7
  1974  0021F6                     __ptext7:
  1975                           	callstack 0
  1976  0021F6                     _fputs:
  1977                           	callstack 21
  1978  0021F6  0E00               	movlw	0
  1979  0021F8  6E1C               	movwf	(fputs@i+1)^0,c
  1980  0021FA  0E00               	movlw	0
  1981  0021FC  6E1B               	movwf	fputs@i^0,c
  1982  0021FE  EF0C  F011         	goto	l2628
  1983  002202                     l2624:
  1984  002202  C01A  F00D         	movff	fputs@c,fputc@c
  1985  002206  6A0E               	clrf	(fputc@c+1)^0,c
  1986  002208  C018  F00F         	movff	fputs@fp,fputc@fp
  1987  00220C  C019  F010         	movff	fputs@fp+1,fputc@fp+1
  1988  002210  EC71  F00E         	call	_fputc	;wreg free
  1989  002214  4A1B               	infsnz	fputs@i^0,f,c
  1990  002216  2A1C               	incf	(fputs@i+1)^0,f,c
  1991  002218                     l2628:
  1992  002218  501B               	movf	fputs@i^0,w,c
  1993  00221A  2416               	addwf	fputs@s^0,w,c
  1994  00221C  6ED9               	movwf	fsr2l,c
  1995  00221E  501C               	movf	(fputs@i+1)^0,w,c
  1996  002220  2017               	addwfc	(fputs@s+1)^0,w,c
  1997  002222  6EDA               	movwf	fsr2h,c
  1998  002224  50DF               	movf	indf2,w,c
  1999  002226  6E1A               	movwf	fputs@c^0,c
  2000  002228  501A               	movf	fputs@c^0,w,c
  2001  00222A  A4D8               	btfss	status,2,c
  2002  00222C  EF1A  F011         	goto	u2271
  2003  002230  EF1C  F011         	goto	u2270
  2004  002234                     u2271:
  2005  002234  EF01  F011         	goto	l2624
  2006  002238                     u2270:
  2007  002238  0012               	return		;funcret
  2008  00223A                     __end_of_fputs:
  2009                           	callstack 0
  2010                           
  2011 ;; *************** function _fputc *****************
  2012 ;; Defined at:
  2013 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  c               2   12[COMRAM] int 
  2016 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  2017 ;;		 -> sprintf@f(6), 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;		None
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  2   12[COMRAM] int 
  2022 ;; Registers used:
  2023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2029 ;;      Params:         4       0       0       0       0       0       0       0       0
  2030 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2031 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2032 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2033 ;;Total ram usage:        9 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; Hardware stack levels required when called:    3
  2036 ;; This function calls:
  2037 ;;		_putch
  2038 ;; This function is called by:
  2039 ;;		_pad
  2040 ;;		_vfpfcnvrt
  2041 ;;		_fputs
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text8
  2046  001CE2                     __ptext8:
  2047                           	callstack 0
  2048  001CE2                     _fputc:
  2049                           	callstack 24
  2050  001CE2  500F               	movf	fputc@fp^0,w,c
  2051  001CE4  1010               	iorwf	(fputc@fp+1)^0,w,c
  2052  001CE6  B4D8               	btfsc	status,2,c
  2053  001CE8  EF78  F00E         	goto	u2231
  2054  001CEC  EF7A  F00E         	goto	u2230
  2055  001CF0                     u2231:
  2056  001CF0  EF83  F00E         	goto	l2612
  2057  001CF4                     u2230:
  2058  001CF4  500F               	movf	fputc@fp^0,w,c
  2059  001CF6  1010               	iorwf	(fputc@fp+1)^0,w,c
  2060  001CF8  A4D8               	btfss	status,2,c
  2061  001CFA  EF81  F00E         	goto	u2241
  2062  001CFE  EF83  F00E         	goto	u2240
  2063  001D02                     u2241:
  2064  001D02  EF88  F00E         	goto	l2614
  2065  001D06                     u2240:
  2066  001D06                     l2612:
  2067  001D06  500D               	movf	fputc@c^0,w,c
  2068  001D08  EC8E  F011         	call	_putch
  2069  001D0C  EFD5  F00E         	goto	l917
  2070  001D10                     l2614:
  2071  001D10  EE20 F004          	lfsr	2,4
  2072  001D14  500F               	movf	fputc@fp^0,w,c
  2073  001D16  26D9               	addwf	fsr2l,f,c
  2074  001D18  5010               	movf	(fputc@fp+1)^0,w,c
  2075  001D1A  22DA               	addwfc	fsr2h,f,c
  2076  001D1C  50DE               	movf	postinc2,w,c
  2077  001D1E  10DE               	iorwf	postinc2,w,c
  2078  001D20  B4D8               	btfsc	status,2,c
  2079  001D22  EF95  F00E         	goto	u2251
  2080  001D26  EF97  F00E         	goto	u2250
  2081  001D2A                     u2251:
  2082  001D2A  EFB2  F00E         	goto	l2618
  2083  001D2E                     u2250:
  2084  001D2E  EE20 F004          	lfsr	2,4
  2085  001D32  500F               	movf	fputc@fp^0,w,c
  2086  001D34  26D9               	addwf	fsr2l,f,c
  2087  001D36  5010               	movf	(fputc@fp+1)^0,w,c
  2088  001D38  22DA               	addwfc	fsr2h,f,c
  2089  001D3A  EE10 F002          	lfsr	1,2
  2090  001D3E  500F               	movf	fputc@fp^0,w,c
  2091  001D40  26E1               	addwf	fsr1l,f,c
  2092  001D42  5010               	movf	(fputc@fp+1)^0,w,c
  2093  001D44  22E2               	addwfc	fsr1h,f,c
  2094  001D46  50DE               	movf	postinc2,w,c
  2095  001D48  5CE6               	subwf	postinc1,w,c
  2096  001D4A  50E6               	movf	postinc1,w,c
  2097  001D4C  0A80               	xorlw	128
  2098  001D4E  6E15               	movwf	(??_fputc+4)^0,c
  2099  001D50  50DE               	movf	postinc2,w,c
  2100  001D52  0A80               	xorlw	128
  2101  001D54  5815               	subwfb	(??_fputc+4)^0,w,c
  2102  001D56  B0D8               	btfsc	status,0,c
  2103  001D58  EFB0  F00E         	goto	u2261
  2104  001D5C  EFB2  F00E         	goto	u2260
  2105  001D60                     u2261:
  2106  001D60  EFD5  F00E         	goto	l917
  2107  001D64                     u2260:
  2108  001D64                     l2618:
  2109  001D64  EE20 F002          	lfsr	2,2
  2110  001D68  500F               	movf	fputc@fp^0,w,c
  2111  001D6A  26D9               	addwf	fsr2l,f,c
  2112  001D6C  5010               	movf	(fputc@fp+1)^0,w,c
  2113  001D6E  22DA               	addwfc	fsr2h,f,c
  2114  001D70  CFDE F011          	movff	postinc2,??_fputc
  2115  001D74  CFDD F012          	movff	postdec2,??_fputc+1
  2116  001D78  C00F  FFD9         	movff	fputc@fp,fsr2l
  2117  001D7C  C010  FFDA         	movff	fputc@fp+1,fsr2h
  2118  001D80  CFDE F013          	movff	postinc2,??_fputc+2
  2119  001D84  CFDD F014          	movff	postdec2,??_fputc+3
  2120  001D88  5011               	movf	??_fputc^0,w,c
  2121  001D8A  2413               	addwf	(??_fputc+2)^0,w,c
  2122  001D8C  6ED9               	movwf	fsr2l,c
  2123  001D8E  5012               	movf	(??_fputc+1)^0,w,c
  2124  001D90  2014               	addwfc	(??_fputc+3)^0,w,c
  2125  001D92  6EDA               	movwf	fsr2h,c
  2126  001D94  C00D  FFDF         	movff	fputc@c,indf2
  2127  001D98  EE20 F002          	lfsr	2,2
  2128  001D9C  500F               	movf	fputc@fp^0,w,c
  2129  001D9E  26D9               	addwf	fsr2l,f,c
  2130  001DA0  5010               	movf	(fputc@fp+1)^0,w,c
  2131  001DA2  22DA               	addwfc	fsr2h,f,c
  2132  001DA4  2ADE               	incf	postinc2,f,c
  2133  001DA6  0E00               	movlw	0
  2134  001DA8  22DD               	addwfc	postdec2,f,c
  2135  001DAA                     l917:
  2136  001DAA  0012               	return		;funcret
  2137  001DAC                     __end_of_fputc:
  2138                           	callstack 0
  2139                           
  2140 ;; *************** function _putch *****************
  2141 ;; Defined at:
  2142 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;  c               1    wreg     unsigned char 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  c               1    0[COMRAM] unsigned char 
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2156 ;;      Params:         0       0       0       0       0       0       0       0       0
  2157 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2158 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2159 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2160 ;;Total ram usage:        0 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    2
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_fputc
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text9
  2171  00231C                     __ptext9:
  2172                           	callstack 0
  2173  00231C                     _putch:
  2174                           	callstack 24
  2175  00231C  0012               	return		;funcret
  2176  00231E                     __end_of_putch:
  2177                           	callstack 0
  2178                           
  2179 ;; *************** function _abs *****************
  2180 ;; Defined at:
  2181 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;  a               2   30[COMRAM] int 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;		None
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  2   30[COMRAM] int 
  2188 ;; Registers used:
  2189 ;;		wreg, status,2, status,0
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2195 ;;      Params:         2       0       0       0       0       0       0       0       0
  2196 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2197 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2198 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2199 ;;Total ram usage:        4 bytes
  2200 ;; Hardware stack levels used:    1
  2201 ;; Hardware stack levels required when called:    2
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_dtoa
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text10
  2210  00223A                     __ptext10:
  2211                           	callstack 0
  2212  00223A                     _abs:
  2213                           	callstack 24
  2214  00223A  BE20               	btfsc	(abs@a+1)^0,7,c
  2215  00223C  EF2A  F011         	goto	u2460
  2216  002240  5020               	movf	(abs@a+1)^0,w,c
  2217  002242  E106               	bnz	u2461
  2218  002244  041F               	decf	abs@a^0,w,c
  2219  002246  B0D8               	btfsc	status,0,c
  2220  002248  EF28  F011         	goto	u2461
  2221  00224C  EF2A  F011         	goto	u2460
  2222  002250                     u2461:
  2223  002250  EF38  F011         	goto	l902
  2224  002254                     u2460:
  2225  002254  C01F  F021         	movff	abs@a,??_abs
  2226  002258  C020  F022         	movff	abs@a+1,??_abs+1
  2227  00225C  1E21               	comf	??_abs^0,f,c
  2228  00225E  1E22               	comf	(??_abs+1)^0,f,c
  2229  002260  4A21               	infsnz	??_abs^0,f,c
  2230  002262  2A22               	incf	(??_abs+1)^0,f,c
  2231  002264  C021  F01F         	movff	??_abs,?_abs
  2232  002268  C022  F020         	movff	??_abs+1,?_abs+1
  2233  00226C  EF3C  F011         	goto	l905
  2234  002270                     l902:
  2235  002270  C01F  F01F         	movff	abs@a,?_abs
  2236  002274  C020  F020         	movff	abs@a+1,?_abs+1
  2237  002278                     l905:
  2238  002278  0012               	return		;funcret
  2239  00227A                     __end_of_abs:
  2240                           	callstack 0
  2241                           
  2242 ;; *************** function ___aomod *****************
  2243 ;; Defined at:
  2244 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  dividend        8   12[COMRAM] long long 
  2247 ;;  divisor         8   20[COMRAM] long long 
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;  sign            1   29[COMRAM] unsigned char 
  2250 ;;  counter         1   28[COMRAM] unsigned char 
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  8   12[COMRAM] long long 
  2253 ;; Registers used:
  2254 ;;		wreg, status,2, status,0
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2260 ;;      Params:        16       0       0       0       0       0       0       0       0
  2261 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2263 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2264 ;;Total ram usage:       18 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:    2
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_dtoa
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text11
  2275  00197E                     __ptext11:
  2276                           	callstack 0
  2277  00197E                     ___aomod:
  2278                           	callstack 24
  2279  00197E  0E00               	movlw	0
  2280  001980  6E1E               	movwf	___aomod@sign^0,c
  2281  001982  BE14               	btfsc	(___aomod@dividend+7)^0,7,c
  2282  001984  EFC8  F00C         	goto	u2360
  2283  001988  EFC6  F00C         	goto	u2361
  2284  00198C                     u2361:
  2285  00198C  EFDA  F00C         	goto	l2692
  2286  001990                     u2360:
  2287  001990  1E14               	comf	(___aomod@dividend+7)^0,f,c
  2288  001992  1E13               	comf	(___aomod@dividend+6)^0,f,c
  2289  001994  1E12               	comf	(___aomod@dividend+5)^0,f,c
  2290  001996  1E11               	comf	(___aomod@dividend+4)^0,f,c
  2291  001998  1E10               	comf	(___aomod@dividend+3)^0,f,c
  2292  00199A  1E0F               	comf	(___aomod@dividend+2)^0,f,c
  2293  00199C  1E0E               	comf	(___aomod@dividend+1)^0,f,c
  2294  00199E  6C0D               	negf	___aomod@dividend^0,c
  2295  0019A0  0E00               	movlw	0
  2296  0019A2  220E               	addwfc	(___aomod@dividend+1)^0,f,c
  2297  0019A4  220F               	addwfc	(___aomod@dividend+2)^0,f,c
  2298  0019A6  2210               	addwfc	(___aomod@dividend+3)^0,f,c
  2299  0019A8  2211               	addwfc	(___aomod@dividend+4)^0,f,c
  2300  0019AA  2212               	addwfc	(___aomod@dividend+5)^0,f,c
  2301  0019AC  2213               	addwfc	(___aomod@dividend+6)^0,f,c
  2302  0019AE  2214               	addwfc	(___aomod@dividend+7)^0,f,c
  2303  0019B0  0E01               	movlw	1
  2304  0019B2  6E1E               	movwf	___aomod@sign^0,c
  2305  0019B4                     l2692:
  2306  0019B4  BE1C               	btfsc	(___aomod@divisor+7)^0,7,c
  2307  0019B6  EFE1  F00C         	goto	u2370
  2308  0019BA  EFDF  F00C         	goto	u2371
  2309  0019BE                     u2371:
  2310  0019BE  EFF1  F00C         	goto	l2696
  2311  0019C2                     u2370:
  2312  0019C2  1E1C               	comf	(___aomod@divisor+7)^0,f,c
  2313  0019C4  1E1B               	comf	(___aomod@divisor+6)^0,f,c
  2314  0019C6  1E1A               	comf	(___aomod@divisor+5)^0,f,c
  2315  0019C8  1E19               	comf	(___aomod@divisor+4)^0,f,c
  2316  0019CA  1E18               	comf	(___aomod@divisor+3)^0,f,c
  2317  0019CC  1E17               	comf	(___aomod@divisor+2)^0,f,c
  2318  0019CE  1E16               	comf	(___aomod@divisor+1)^0,f,c
  2319  0019D0  6C15               	negf	___aomod@divisor^0,c
  2320  0019D2  0E00               	movlw	0
  2321  0019D4  2216               	addwfc	(___aomod@divisor+1)^0,f,c
  2322  0019D6  2217               	addwfc	(___aomod@divisor+2)^0,f,c
  2323  0019D8  2218               	addwfc	(___aomod@divisor+3)^0,f,c
  2324  0019DA  2219               	addwfc	(___aomod@divisor+4)^0,f,c
  2325  0019DC  221A               	addwfc	(___aomod@divisor+5)^0,f,c
  2326  0019DE  221B               	addwfc	(___aomod@divisor+6)^0,f,c
  2327  0019E0  221C               	addwfc	(___aomod@divisor+7)^0,f,c
  2328  0019E2                     l2696:
  2329  0019E2  5015               	movf	___aomod@divisor^0,w,c
  2330  0019E4  1016               	iorwf	(___aomod@divisor+1)^0,w,c
  2331  0019E6  1017               	iorwf	(___aomod@divisor+2)^0,w,c
  2332  0019E8  1018               	iorwf	(___aomod@divisor+3)^0,w,c
  2333  0019EA  1019               	iorwf	(___aomod@divisor+4)^0,w,c
  2334  0019EC  101A               	iorwf	(___aomod@divisor+5)^0,w,c
  2335  0019EE  101B               	iorwf	(___aomod@divisor+6)^0,w,c
  2336  0019F0  101C               	iorwf	(___aomod@divisor+7)^0,w,c
  2337  0019F2  B4D8               	btfsc	status,2,c
  2338  0019F4  EFFE  F00C         	goto	u2381
  2339  0019F8  EF00  F00D         	goto	u2380
  2340  0019FC                     u2381:
  2341  0019FC  EF48  F00D         	goto	l2712
  2342  001A00                     u2380:
  2343  001A00  0E01               	movlw	1
  2344  001A02  6E1D               	movwf	___aomod@counter^0,c
  2345  001A04  EF0E  F00D         	goto	l2702
  2346  001A08                     l2700:
  2347  001A08  90D8               	bcf	status,0,c
  2348  001A0A  3615               	rlcf	___aomod@divisor^0,f,c
  2349  001A0C  3616               	rlcf	(___aomod@divisor+1)^0,f,c
  2350  001A0E  3617               	rlcf	(___aomod@divisor+2)^0,f,c
  2351  001A10  3618               	rlcf	(___aomod@divisor+3)^0,f,c
  2352  001A12  3619               	rlcf	(___aomod@divisor+4)^0,f,c
  2353  001A14  361A               	rlcf	(___aomod@divisor+5)^0,f,c
  2354  001A16  361B               	rlcf	(___aomod@divisor+6)^0,f,c
  2355  001A18  361C               	rlcf	(___aomod@divisor+7)^0,f,c
  2356  001A1A  2A1D               	incf	___aomod@counter^0,f,c
  2357  001A1C                     l2702:
  2358  001A1C  AE1C               	btfss	(___aomod@divisor+7)^0,7,c
  2359  001A1E  EF13  F00D         	goto	u2391
  2360  001A22  EF15  F00D         	goto	u2390
  2361  001A26                     u2391:
  2362  001A26  EF04  F00D         	goto	l2700
  2363  001A2A                     u2390:
  2364  001A2A                     l2704:
  2365  001A2A  5015               	movf	___aomod@divisor^0,w,c
  2366  001A2C  5C0D               	subwf	___aomod@dividend^0,w,c
  2367  001A2E  5016               	movf	(___aomod@divisor+1)^0,w,c
  2368  001A30  580E               	subwfb	(___aomod@dividend+1)^0,w,c
  2369  001A32  5017               	movf	(___aomod@divisor+2)^0,w,c
  2370  001A34  580F               	subwfb	(___aomod@dividend+2)^0,w,c
  2371  001A36  5018               	movf	(___aomod@divisor+3)^0,w,c
  2372  001A38  5810               	subwfb	(___aomod@dividend+3)^0,w,c
  2373  001A3A  5019               	movf	(___aomod@divisor+4)^0,w,c
  2374  001A3C  5811               	subwfb	(___aomod@dividend+4)^0,w,c
  2375  001A3E  501A               	movf	(___aomod@divisor+5)^0,w,c
  2376  001A40  5812               	subwfb	(___aomod@dividend+5)^0,w,c
  2377  001A42  501B               	movf	(___aomod@divisor+6)^0,w,c
  2378  001A44  5813               	subwfb	(___aomod@dividend+6)^0,w,c
  2379  001A46  501C               	movf	(___aomod@divisor+7)^0,w,c
  2380  001A48  5814               	subwfb	(___aomod@dividend+7)^0,w,c
  2381  001A4A  A0D8               	btfss	status,0,c
  2382  001A4C  EF2A  F00D         	goto	u2401
  2383  001A50  EF2C  F00D         	goto	u2400
  2384  001A54                     u2401:
  2385  001A54  EF3C  F00D         	goto	l2708
  2386  001A58                     u2400:
  2387  001A58  5015               	movf	___aomod@divisor^0,w,c
  2388  001A5A  5E0D               	subwf	___aomod@dividend^0,f,c
  2389  001A5C  5016               	movf	(___aomod@divisor+1)^0,w,c
  2390  001A5E  5A0E               	subwfb	(___aomod@dividend+1)^0,f,c
  2391  001A60  5017               	movf	(___aomod@divisor+2)^0,w,c
  2392  001A62  5A0F               	subwfb	(___aomod@dividend+2)^0,f,c
  2393  001A64  5018               	movf	(___aomod@divisor+3)^0,w,c
  2394  001A66  5A10               	subwfb	(___aomod@dividend+3)^0,f,c
  2395  001A68  5019               	movf	(___aomod@divisor+4)^0,w,c
  2396  001A6A  5A11               	subwfb	(___aomod@dividend+4)^0,f,c
  2397  001A6C  501A               	movf	(___aomod@divisor+5)^0,w,c
  2398  001A6E  5A12               	subwfb	(___aomod@dividend+5)^0,f,c
  2399  001A70  501B               	movf	(___aomod@divisor+6)^0,w,c
  2400  001A72  5A13               	subwfb	(___aomod@dividend+6)^0,f,c
  2401  001A74  501C               	movf	(___aomod@divisor+7)^0,w,c
  2402  001A76  5A14               	subwfb	(___aomod@dividend+7)^0,f,c
  2403  001A78                     l2708:
  2404  001A78  90D8               	bcf	status,0,c
  2405  001A7A  321C               	rrcf	(___aomod@divisor+7)^0,f,c
  2406  001A7C  321B               	rrcf	(___aomod@divisor+6)^0,f,c
  2407  001A7E  321A               	rrcf	(___aomod@divisor+5)^0,f,c
  2408  001A80  3219               	rrcf	(___aomod@divisor+4)^0,f,c
  2409  001A82  3218               	rrcf	(___aomod@divisor+3)^0,f,c
  2410  001A84  3217               	rrcf	(___aomod@divisor+2)^0,f,c
  2411  001A86  3216               	rrcf	(___aomod@divisor+1)^0,f,c
  2412  001A88  3215               	rrcf	___aomod@divisor^0,f,c
  2413  001A8A  2E1D               	decfsz	___aomod@counter^0,f,c
  2414  001A8C  EF15  F00D         	goto	l2704
  2415  001A90                     l2712:
  2416  001A90  501E               	movf	___aomod@sign^0,w,c
  2417  001A92  B4D8               	btfsc	status,2,c
  2418  001A94  EF4E  F00D         	goto	u2411
  2419  001A98  EF50  F00D         	goto	u2410
  2420  001A9C                     u2411:
  2421  001A9C  EF60  F00D         	goto	l2716
  2422  001AA0                     u2410:
  2423  001AA0  1E14               	comf	(___aomod@dividend+7)^0,f,c
  2424  001AA2  1E13               	comf	(___aomod@dividend+6)^0,f,c
  2425  001AA4  1E12               	comf	(___aomod@dividend+5)^0,f,c
  2426  001AA6  1E11               	comf	(___aomod@dividend+4)^0,f,c
  2427  001AA8  1E10               	comf	(___aomod@dividend+3)^0,f,c
  2428  001AAA  1E0F               	comf	(___aomod@dividend+2)^0,f,c
  2429  001AAC  1E0E               	comf	(___aomod@dividend+1)^0,f,c
  2430  001AAE  6C0D               	negf	___aomod@dividend^0,c
  2431  001AB0  0E00               	movlw	0
  2432  001AB2  220E               	addwfc	(___aomod@dividend+1)^0,f,c
  2433  001AB4  220F               	addwfc	(___aomod@dividend+2)^0,f,c
  2434  001AB6  2210               	addwfc	(___aomod@dividend+3)^0,f,c
  2435  001AB8  2211               	addwfc	(___aomod@dividend+4)^0,f,c
  2436  001ABA  2212               	addwfc	(___aomod@dividend+5)^0,f,c
  2437  001ABC  2213               	addwfc	(___aomod@dividend+6)^0,f,c
  2438  001ABE  2214               	addwfc	(___aomod@dividend+7)^0,f,c
  2439  001AC0                     l2716:
  2440  001AC0  C00D  F00D         	movff	___aomod@dividend,?___aomod
  2441  001AC4  C00E  F00E         	movff	___aomod@dividend+1,?___aomod+1
  2442  001AC8  C00F  F00F         	movff	___aomod@dividend+2,?___aomod+2
  2443  001ACC  C010  F010         	movff	___aomod@dividend+3,?___aomod+3
  2444  001AD0  C011  F011         	movff	___aomod@dividend+4,?___aomod+4
  2445  001AD4  C012  F012         	movff	___aomod@dividend+5,?___aomod+5
  2446  001AD8  C013  F013         	movff	___aomod@dividend+6,?___aomod+6
  2447  001ADC  C014  F014         	movff	___aomod@dividend+7,?___aomod+7
  2448  001AE0  0012               	return		;funcret
  2449  001AE2                     __end_of___aomod:
  2450                           	callstack 0
  2451                           
  2452 ;; *************** function ___aodiv *****************
  2453 ;; Defined at:
  2454 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  dividend        8   12[COMRAM] long long 
  2457 ;;  divisor         8   20[COMRAM] long long 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  quotient        8   30[COMRAM] long long 
  2460 ;;  sign            1   29[COMRAM] unsigned char 
  2461 ;;  counter         1   28[COMRAM] unsigned char 
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  8   12[COMRAM] long long 
  2464 ;; Registers used:
  2465 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2471 ;;      Params:        16       0       0       0       0       0       0       0       0
  2472 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2474 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2475 ;;Total ram usage:       26 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; Hardware stack levels required when called:    2
  2478 ;; This function calls:
  2479 ;;		Nothing
  2480 ;; This function is called by:
  2481 ;;		_dtoa
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           	psect	text12
  2486  0017F6                     __ptext12:
  2487                           	callstack 0
  2488  0017F6                     ___aodiv:
  2489                           	callstack 24
  2490  0017F6  0E00               	movlw	0
  2491  0017F8  6E1E               	movwf	___aodiv@sign^0,c
  2492  0017FA  BE1C               	btfsc	(___aodiv@divisor+7)^0,7,c
  2493  0017FC  EF04  F00C         	goto	u2290
  2494  001800  EF02  F00C         	goto	u2291
  2495  001804                     u2291:
  2496  001804  EF16  F00C         	goto	l2648
  2497  001808                     u2290:
  2498  001808  1E1C               	comf	(___aodiv@divisor+7)^0,f,c
  2499  00180A  1E1B               	comf	(___aodiv@divisor+6)^0,f,c
  2500  00180C  1E1A               	comf	(___aodiv@divisor+5)^0,f,c
  2501  00180E  1E19               	comf	(___aodiv@divisor+4)^0,f,c
  2502  001810  1E18               	comf	(___aodiv@divisor+3)^0,f,c
  2503  001812  1E17               	comf	(___aodiv@divisor+2)^0,f,c
  2504  001814  1E16               	comf	(___aodiv@divisor+1)^0,f,c
  2505  001816  6C15               	negf	___aodiv@divisor^0,c
  2506  001818  0E00               	movlw	0
  2507  00181A  2216               	addwfc	(___aodiv@divisor+1)^0,f,c
  2508  00181C  2217               	addwfc	(___aodiv@divisor+2)^0,f,c
  2509  00181E  2218               	addwfc	(___aodiv@divisor+3)^0,f,c
  2510  001820  2219               	addwfc	(___aodiv@divisor+4)^0,f,c
  2511  001822  221A               	addwfc	(___aodiv@divisor+5)^0,f,c
  2512  001824  221B               	addwfc	(___aodiv@divisor+6)^0,f,c
  2513  001826  221C               	addwfc	(___aodiv@divisor+7)^0,f,c
  2514  001828  0E01               	movlw	1
  2515  00182A  6E1E               	movwf	___aodiv@sign^0,c
  2516  00182C                     l2648:
  2517  00182C  BE14               	btfsc	(___aodiv@dividend+7)^0,7,c
  2518  00182E  EF1D  F00C         	goto	u2300
  2519  001832  EF1B  F00C         	goto	u2301
  2520  001836                     u2301:
  2521  001836  EF2F  F00C         	goto	l2654
  2522  00183A                     u2300:
  2523  00183A  1E14               	comf	(___aodiv@dividend+7)^0,f,c
  2524  00183C  1E13               	comf	(___aodiv@dividend+6)^0,f,c
  2525  00183E  1E12               	comf	(___aodiv@dividend+5)^0,f,c
  2526  001840  1E11               	comf	(___aodiv@dividend+4)^0,f,c
  2527  001842  1E10               	comf	(___aodiv@dividend+3)^0,f,c
  2528  001844  1E0F               	comf	(___aodiv@dividend+2)^0,f,c
  2529  001846  1E0E               	comf	(___aodiv@dividend+1)^0,f,c
  2530  001848  6C0D               	negf	___aodiv@dividend^0,c
  2531  00184A  0E00               	movlw	0
  2532  00184C  220E               	addwfc	(___aodiv@dividend+1)^0,f,c
  2533  00184E  220F               	addwfc	(___aodiv@dividend+2)^0,f,c
  2534  001850  2210               	addwfc	(___aodiv@dividend+3)^0,f,c
  2535  001852  2211               	addwfc	(___aodiv@dividend+4)^0,f,c
  2536  001854  2212               	addwfc	(___aodiv@dividend+5)^0,f,c
  2537  001856  2213               	addwfc	(___aodiv@dividend+6)^0,f,c
  2538  001858  2214               	addwfc	(___aodiv@dividend+7)^0,f,c
  2539  00185A  0E01               	movlw	1
  2540  00185C  1A1E               	xorwf	___aodiv@sign^0,f,c
  2541  00185E                     l2654:
  2542  00185E  EE20  F01F         	lfsr	2,___aodiv@quotient
  2543  001862  0E07               	movlw	7
  2544  001864                     u2311:
  2545  001864  6ADE               	clrf	postinc2,c
  2546  001866  06E8               	decf	wreg,f,c
  2547  001868  E2FD               	bc	u2311
  2548  00186A  5015               	movf	___aodiv@divisor^0,w,c
  2549  00186C  1016               	iorwf	(___aodiv@divisor+1)^0,w,c
  2550  00186E  1017               	iorwf	(___aodiv@divisor+2)^0,w,c
  2551  001870  1018               	iorwf	(___aodiv@divisor+3)^0,w,c
  2552  001872  1019               	iorwf	(___aodiv@divisor+4)^0,w,c
  2553  001874  101A               	iorwf	(___aodiv@divisor+5)^0,w,c
  2554  001876  101B               	iorwf	(___aodiv@divisor+6)^0,w,c
  2555  001878  101C               	iorwf	(___aodiv@divisor+7)^0,w,c
  2556  00187A  B4D8               	btfsc	status,2,c
  2557  00187C  EF42  F00C         	goto	u2321
  2558  001880  EF44  F00C         	goto	u2320
  2559  001884                     u2321:
  2560  001884  EF96  F00C         	goto	l2676
  2561  001888                     u2320:
  2562  001888  0E01               	movlw	1
  2563  00188A  6E1D               	movwf	___aodiv@counter^0,c
  2564  00188C  EF52  F00C         	goto	l2662
  2565  001890                     l2660:
  2566  001890  90D8               	bcf	status,0,c
  2567  001892  3615               	rlcf	___aodiv@divisor^0,f,c
  2568  001894  3616               	rlcf	(___aodiv@divisor+1)^0,f,c
  2569  001896  3617               	rlcf	(___aodiv@divisor+2)^0,f,c
  2570  001898  3618               	rlcf	(___aodiv@divisor+3)^0,f,c
  2571  00189A  3619               	rlcf	(___aodiv@divisor+4)^0,f,c
  2572  00189C  361A               	rlcf	(___aodiv@divisor+5)^0,f,c
  2573  00189E  361B               	rlcf	(___aodiv@divisor+6)^0,f,c
  2574  0018A0  361C               	rlcf	(___aodiv@divisor+7)^0,f,c
  2575  0018A2  2A1D               	incf	___aodiv@counter^0,f,c
  2576  0018A4                     l2662:
  2577  0018A4  AE1C               	btfss	(___aodiv@divisor+7)^0,7,c
  2578  0018A6  EF57  F00C         	goto	u2331
  2579  0018AA  EF59  F00C         	goto	u2330
  2580  0018AE                     u2331:
  2581  0018AE  EF48  F00C         	goto	l2660
  2582  0018B2                     u2330:
  2583  0018B2                     l2664:
  2584  0018B2  90D8               	bcf	status,0,c
  2585  0018B4  361F               	rlcf	___aodiv@quotient^0,f,c
  2586  0018B6  3620               	rlcf	(___aodiv@quotient+1)^0,f,c
  2587  0018B8  3621               	rlcf	(___aodiv@quotient+2)^0,f,c
  2588  0018BA  3622               	rlcf	(___aodiv@quotient+3)^0,f,c
  2589  0018BC  3623               	rlcf	(___aodiv@quotient+4)^0,f,c
  2590  0018BE  3624               	rlcf	(___aodiv@quotient+5)^0,f,c
  2591  0018C0  3625               	rlcf	(___aodiv@quotient+6)^0,f,c
  2592  0018C2  3626               	rlcf	(___aodiv@quotient+7)^0,f,c
  2593  0018C4  5015               	movf	___aodiv@divisor^0,w,c
  2594  0018C6  5C0D               	subwf	___aodiv@dividend^0,w,c
  2595  0018C8  5016               	movf	(___aodiv@divisor+1)^0,w,c
  2596  0018CA  580E               	subwfb	(___aodiv@dividend+1)^0,w,c
  2597  0018CC  5017               	movf	(___aodiv@divisor+2)^0,w,c
  2598  0018CE  580F               	subwfb	(___aodiv@dividend+2)^0,w,c
  2599  0018D0  5018               	movf	(___aodiv@divisor+3)^0,w,c
  2600  0018D2  5810               	subwfb	(___aodiv@dividend+3)^0,w,c
  2601  0018D4  5019               	movf	(___aodiv@divisor+4)^0,w,c
  2602  0018D6  5811               	subwfb	(___aodiv@dividend+4)^0,w,c
  2603  0018D8  501A               	movf	(___aodiv@divisor+5)^0,w,c
  2604  0018DA  5812               	subwfb	(___aodiv@dividend+5)^0,w,c
  2605  0018DC  501B               	movf	(___aodiv@divisor+6)^0,w,c
  2606  0018DE  5813               	subwfb	(___aodiv@dividend+6)^0,w,c
  2607  0018E0  501C               	movf	(___aodiv@divisor+7)^0,w,c
  2608  0018E2  5814               	subwfb	(___aodiv@dividend+7)^0,w,c
  2609  0018E4  A0D8               	btfss	status,0,c
  2610  0018E6  EF77  F00C         	goto	u2341
  2611  0018EA  EF79  F00C         	goto	u2340
  2612  0018EE                     u2341:
  2613  0018EE  EF8A  F00C         	goto	l2672
  2614  0018F2                     u2340:
  2615  0018F2  5015               	movf	___aodiv@divisor^0,w,c
  2616  0018F4  5E0D               	subwf	___aodiv@dividend^0,f,c
  2617  0018F6  5016               	movf	(___aodiv@divisor+1)^0,w,c
  2618  0018F8  5A0E               	subwfb	(___aodiv@dividend+1)^0,f,c
  2619  0018FA  5017               	movf	(___aodiv@divisor+2)^0,w,c
  2620  0018FC  5A0F               	subwfb	(___aodiv@dividend+2)^0,f,c
  2621  0018FE  5018               	movf	(___aodiv@divisor+3)^0,w,c
  2622  001900  5A10               	subwfb	(___aodiv@dividend+3)^0,f,c
  2623  001902  5019               	movf	(___aodiv@divisor+4)^0,w,c
  2624  001904  5A11               	subwfb	(___aodiv@dividend+4)^0,f,c
  2625  001906  501A               	movf	(___aodiv@divisor+5)^0,w,c
  2626  001908  5A12               	subwfb	(___aodiv@dividend+5)^0,f,c
  2627  00190A  501B               	movf	(___aodiv@divisor+6)^0,w,c
  2628  00190C  5A13               	subwfb	(___aodiv@dividend+6)^0,f,c
  2629  00190E  501C               	movf	(___aodiv@divisor+7)^0,w,c
  2630  001910  5A14               	subwfb	(___aodiv@dividend+7)^0,f,c
  2631  001912  801F               	bsf	___aodiv@quotient^0,0,c
  2632  001914                     l2672:
  2633  001914  90D8               	bcf	status,0,c
  2634  001916  321C               	rrcf	(___aodiv@divisor+7)^0,f,c
  2635  001918  321B               	rrcf	(___aodiv@divisor+6)^0,f,c
  2636  00191A  321A               	rrcf	(___aodiv@divisor+5)^0,f,c
  2637  00191C  3219               	rrcf	(___aodiv@divisor+4)^0,f,c
  2638  00191E  3218               	rrcf	(___aodiv@divisor+3)^0,f,c
  2639  001920  3217               	rrcf	(___aodiv@divisor+2)^0,f,c
  2640  001922  3216               	rrcf	(___aodiv@divisor+1)^0,f,c
  2641  001924  3215               	rrcf	___aodiv@divisor^0,f,c
  2642  001926  2E1D               	decfsz	___aodiv@counter^0,f,c
  2643  001928  EF59  F00C         	goto	l2664
  2644  00192C                     l2676:
  2645  00192C  501E               	movf	___aodiv@sign^0,w,c
  2646  00192E  B4D8               	btfsc	status,2,c
  2647  001930  EF9C  F00C         	goto	u2351
  2648  001934  EF9E  F00C         	goto	u2350
  2649  001938                     u2351:
  2650  001938  EFAE  F00C         	goto	l2680
  2651  00193C                     u2350:
  2652  00193C  1E26               	comf	(___aodiv@quotient+7)^0,f,c
  2653  00193E  1E25               	comf	(___aodiv@quotient+6)^0,f,c
  2654  001940  1E24               	comf	(___aodiv@quotient+5)^0,f,c
  2655  001942  1E23               	comf	(___aodiv@quotient+4)^0,f,c
  2656  001944  1E22               	comf	(___aodiv@quotient+3)^0,f,c
  2657  001946  1E21               	comf	(___aodiv@quotient+2)^0,f,c
  2658  001948  1E20               	comf	(___aodiv@quotient+1)^0,f,c
  2659  00194A  6C1F               	negf	___aodiv@quotient^0,c
  2660  00194C  0E00               	movlw	0
  2661  00194E  2220               	addwfc	(___aodiv@quotient+1)^0,f,c
  2662  001950  2221               	addwfc	(___aodiv@quotient+2)^0,f,c
  2663  001952  2222               	addwfc	(___aodiv@quotient+3)^0,f,c
  2664  001954  2223               	addwfc	(___aodiv@quotient+4)^0,f,c
  2665  001956  2224               	addwfc	(___aodiv@quotient+5)^0,f,c
  2666  001958  2225               	addwfc	(___aodiv@quotient+6)^0,f,c
  2667  00195A  2226               	addwfc	(___aodiv@quotient+7)^0,f,c
  2668  00195C                     l2680:
  2669  00195C  C01F  F00D         	movff	___aodiv@quotient,?___aodiv
  2670  001960  C020  F00E         	movff	___aodiv@quotient+1,?___aodiv+1
  2671  001964  C021  F00F         	movff	___aodiv@quotient+2,?___aodiv+2
  2672  001968  C022  F010         	movff	___aodiv@quotient+3,?___aodiv+3
  2673  00196C  C023  F011         	movff	___aodiv@quotient+4,?___aodiv+4
  2674  001970  C024  F012         	movff	___aodiv@quotient+5,?___aodiv+5
  2675  001974  C025  F013         	movff	___aodiv@quotient+6,?___aodiv+6
  2676  001978  C026  F014         	movff	___aodiv@quotient+7,?___aodiv+7
  2677  00197C  0012               	return		;funcret
  2678  00197E                     __end_of___aodiv:
  2679                           	callstack 0
  2680                           
  2681 ;; *************** function ___xxtofl *****************
  2682 ;; Defined at:
  2683 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  2684 ;; Parameters:    Size  Location     Type
  2685 ;;  sign            1    wreg     unsigned char 
  2686 ;;  val             4   24[COMRAM] long 
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;  sign            1   32[COMRAM] unsigned char 
  2689 ;;  arg             4   34[COMRAM] unsigned long 
  2690 ;;  exp             1   33[COMRAM] unsigned char 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  4   24[COMRAM] unsigned char 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2, status,0
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2700 ;;      Params:         4       0       0       0       0       0       0       0       0
  2701 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2702 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2703 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2704 ;;Total ram usage:       14 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:    2
  2707 ;; This function calls:
  2708 ;;		Nothing
  2709 ;; This function is called by:
  2710 ;;		_main
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text13
  2715  001642                     __ptext13:
  2716                           	callstack 0
  2717  001642                     ___xxtofl:
  2718                           	callstack 28
  2719                           
  2720                           ;incstack = 0
  2721                           ;___xxtofl@sign stored from wreg
  2722  001642  6E21               	movwf	___xxtofl@sign^0,c
  2723  001644  5021               	movf	___xxtofl@sign^0,w,c
  2724  001646  B4D8               	btfsc	status,2,c
  2725  001648  EF28  F00B         	goto	u2071
  2726  00164C  EF2A  F00B         	goto	u2070
  2727  001650                     u2071:
  2728  001650  EF4C  F00B         	goto	l803
  2729  001654                     u2070:
  2730  001654  BE1C               	btfsc	(___xxtofl@val+3)^0,7,c
  2731  001656  EF31  F00B         	goto	u2080
  2732  00165A  EF2F  F00B         	goto	u2081
  2733  00165E                     u2081:
  2734  00165E  EF4C  F00B         	goto	l803
  2735  001662                     u2080:
  2736  001662  C019  F01D         	movff	___xxtofl@val,??___xxtofl
  2737  001666  C01A  F01E         	movff	___xxtofl@val+1,??___xxtofl+1
  2738  00166A  C01B  F01F         	movff	___xxtofl@val+2,??___xxtofl+2
  2739  00166E  C01C  F020         	movff	___xxtofl@val+3,??___xxtofl+3
  2740  001672  1E1D               	comf	??___xxtofl^0,f,c
  2741  001674  1E1E               	comf	(??___xxtofl+1)^0,f,c
  2742  001676  1E1F               	comf	(??___xxtofl+2)^0,f,c
  2743  001678  1E20               	comf	(??___xxtofl+3)^0,f,c
  2744  00167A  2A1D               	incf	??___xxtofl^0,f,c
  2745  00167C  0E00               	movlw	0
  2746  00167E  221E               	addwfc	(??___xxtofl+1)^0,f,c
  2747  001680  221F               	addwfc	(??___xxtofl+2)^0,f,c
  2748  001682  2220               	addwfc	(??___xxtofl+3)^0,f,c
  2749  001684  C01D  F023         	movff	??___xxtofl,___xxtofl@arg
  2750  001688  C01E  F024         	movff	??___xxtofl+1,___xxtofl@arg+1
  2751  00168C  C01F  F025         	movff	??___xxtofl+2,___xxtofl@arg+2
  2752  001690  C020  F026         	movff	??___xxtofl+3,___xxtofl@arg+3
  2753  001694  EF54  F00B         	goto	l2454
  2754  001698                     l803:
  2755  001698  C019  F023         	movff	___xxtofl@val,___xxtofl@arg
  2756  00169C  C01A  F024         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2757  0016A0  C01B  F025         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2758  0016A4  C01C  F026         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2759  0016A8                     l2454:
  2760  0016A8  5019               	movf	___xxtofl@val^0,w,c
  2761  0016AA  101A               	iorwf	(___xxtofl@val+1)^0,w,c
  2762  0016AC  101B               	iorwf	(___xxtofl@val+2)^0,w,c
  2763  0016AE  101C               	iorwf	(___xxtofl@val+3)^0,w,c
  2764  0016B0  A4D8               	btfss	status,2,c
  2765  0016B2  EF5D  F00B         	goto	u2091
  2766  0016B6  EF5F  F00B         	goto	u2090
  2767  0016BA                     u2091:
  2768  0016BA  EF69  F00B         	goto	l2460
  2769  0016BE                     u2090:
  2770  0016BE  0E00               	movlw	0
  2771  0016C0  6E19               	movwf	?___xxtofl^0,c
  2772  0016C2  0E00               	movlw	0
  2773  0016C4  6E1A               	movwf	(?___xxtofl+1)^0,c
  2774  0016C6  0E00               	movlw	0
  2775  0016C8  6E1B               	movwf	(?___xxtofl+2)^0,c
  2776  0016CA  0E00               	movlw	0
  2777  0016CC  6E1C               	movwf	(?___xxtofl+3)^0,c
  2778  0016CE  EFFA  F00B         	goto	l806
  2779  0016D2                     l2460:
  2780  0016D2  0E96               	movlw	150
  2781  0016D4  6E22               	movwf	___xxtofl@exp^0,c
  2782  0016D6  EF73  F00B         	goto	l2464
  2783  0016DA                     l2462:
  2784  0016DA  2A22               	incf	___xxtofl@exp^0,f,c
  2785  0016DC  90D8               	bcf	status,0,c
  2786  0016DE  3226               	rrcf	(___xxtofl@arg+3)^0,f,c
  2787  0016E0  3225               	rrcf	(___xxtofl@arg+2)^0,f,c
  2788  0016E2  3224               	rrcf	(___xxtofl@arg+1)^0,f,c
  2789  0016E4  3223               	rrcf	___xxtofl@arg^0,f,c
  2790  0016E6                     l2464:
  2791  0016E6  0E00               	movlw	0
  2792  0016E8  1423               	andwf	___xxtofl@arg^0,w,c
  2793  0016EA  6E1D               	movwf	??___xxtofl^0,c
  2794  0016EC  0E00               	movlw	0
  2795  0016EE  1424               	andwf	(___xxtofl@arg+1)^0,w,c
  2796  0016F0  6E1E               	movwf	(??___xxtofl+1)^0,c
  2797  0016F2  0E00               	movlw	0
  2798  0016F4  1425               	andwf	(___xxtofl@arg+2)^0,w,c
  2799  0016F6  6E1F               	movwf	(??___xxtofl+2)^0,c
  2800  0016F8  0EFE               	movlw	254
  2801  0016FA  1426               	andwf	(___xxtofl@arg+3)^0,w,c
  2802  0016FC  6E20               	movwf	(??___xxtofl+3)^0,c
  2803  0016FE  501D               	movf	??___xxtofl^0,w,c
  2804  001700  101E               	iorwf	(??___xxtofl+1)^0,w,c
  2805  001702  101F               	iorwf	(??___xxtofl+2)^0,w,c
  2806  001704  1020               	iorwf	(??___xxtofl+3)^0,w,c
  2807  001706  A4D8               	btfss	status,2,c
  2808  001708  EF88  F00B         	goto	u2101
  2809  00170C  EF8A  F00B         	goto	u2100
  2810  001710                     u2101:
  2811  001710  EF6D  F00B         	goto	l2462
  2812  001714                     u2100:
  2813  001714  EF98  F00B         	goto	l810
  2814  001718                     l2466:
  2815  001718  2A22               	incf	___xxtofl@exp^0,f,c
  2816  00171A  0E01               	movlw	1
  2817  00171C  2623               	addwf	___xxtofl@arg^0,f,c
  2818  00171E  0E00               	movlw	0
  2819  001720  2224               	addwfc	(___xxtofl@arg+1)^0,f,c
  2820  001722  2225               	addwfc	(___xxtofl@arg+2)^0,f,c
  2821  001724  2226               	addwfc	(___xxtofl@arg+3)^0,f,c
  2822  001726  90D8               	bcf	status,0,c
  2823  001728  3226               	rrcf	(___xxtofl@arg+3)^0,f,c
  2824  00172A  3225               	rrcf	(___xxtofl@arg+2)^0,f,c
  2825  00172C  3224               	rrcf	(___xxtofl@arg+1)^0,f,c
  2826  00172E  3223               	rrcf	___xxtofl@arg^0,f,c
  2827  001730                     l810:
  2828  001730  0E00               	movlw	0
  2829  001732  1423               	andwf	___xxtofl@arg^0,w,c
  2830  001734  6E1D               	movwf	??___xxtofl^0,c
  2831  001736  0E00               	movlw	0
  2832  001738  1424               	andwf	(___xxtofl@arg+1)^0,w,c
  2833  00173A  6E1E               	movwf	(??___xxtofl+1)^0,c
  2834  00173C  0E00               	movlw	0
  2835  00173E  1425               	andwf	(___xxtofl@arg+2)^0,w,c
  2836  001740  6E1F               	movwf	(??___xxtofl+2)^0,c
  2837  001742  0EFF               	movlw	255
  2838  001744  1426               	andwf	(___xxtofl@arg+3)^0,w,c
  2839  001746  6E20               	movwf	(??___xxtofl+3)^0,c
  2840  001748  501D               	movf	??___xxtofl^0,w,c
  2841  00174A  101E               	iorwf	(??___xxtofl+1)^0,w,c
  2842  00174C  101F               	iorwf	(??___xxtofl+2)^0,w,c
  2843  00174E  1020               	iorwf	(??___xxtofl+3)^0,w,c
  2844  001750  A4D8               	btfss	status,2,c
  2845  001752  EFAD  F00B         	goto	u2111
  2846  001756  EFAF  F00B         	goto	u2110
  2847  00175A                     u2111:
  2848  00175A  EF8C  F00B         	goto	l2466
  2849  00175E                     u2110:
  2850  00175E  EFB7  F00B         	goto	l2474
  2851  001762                     l2472:
  2852  001762  0622               	decf	___xxtofl@exp^0,f,c
  2853  001764  90D8               	bcf	status,0,c
  2854  001766  3623               	rlcf	___xxtofl@arg^0,f,c
  2855  001768  3624               	rlcf	(___xxtofl@arg+1)^0,f,c
  2856  00176A  3625               	rlcf	(___xxtofl@arg+2)^0,f,c
  2857  00176C  3626               	rlcf	(___xxtofl@arg+3)^0,f,c
  2858  00176E                     l2474:
  2859  00176E  BE25               	btfsc	(___xxtofl@arg+2)^0,7,c
  2860  001770  EFBC  F00B         	goto	u2121
  2861  001774  EFBE  F00B         	goto	u2120
  2862  001778                     u2121:
  2863  001778  EFC6  F00B         	goto	l817
  2864  00177C                     u2120:
  2865  00177C  0E02               	movlw	2
  2866  00177E  6022               	cpfslt	___xxtofl@exp^0,c
  2867  001780  EFC4  F00B         	goto	u2131
  2868  001784  EFC6  F00B         	goto	u2130
  2869  001788                     u2131:
  2870  001788  EFB1  F00B         	goto	l2472
  2871  00178C                     u2130:
  2872  00178C                     l817:
  2873  00178C  B022               	btfsc	___xxtofl@exp^0,0,c
  2874  00178E  EFCB  F00B         	goto	u2141
  2875  001792  EFCD  F00B         	goto	u2140
  2876  001796                     u2141:
  2877  001796  EFCE  F00B         	goto	l2480
  2878  00179A                     u2140:
  2879  00179A  9E25               	bcf	(___xxtofl@arg+2)^0,7,c
  2880  00179C                     l2480:
  2881  00179C  90D8               	bcf	status,0,c
  2882  00179E  3222               	rrcf	___xxtofl@exp^0,f,c
  2883  0017A0  C022  F01D         	movff	___xxtofl@exp,??___xxtofl
  2884  0017A4  6A1E               	clrf	(??___xxtofl+1)^0,c
  2885  0017A6  6A1F               	clrf	(??___xxtofl+2)^0,c
  2886  0017A8  6A20               	clrf	(??___xxtofl+3)^0,c
  2887  0017AA  C01D  F020         	movff	??___xxtofl,??___xxtofl+3
  2888  0017AE  6A1F               	clrf	(??___xxtofl+2)^0,c
  2889  0017B0  6A1E               	clrf	(??___xxtofl+1)^0,c
  2890  0017B2  6A1D               	clrf	??___xxtofl^0,c
  2891  0017B4  501D               	movf	??___xxtofl^0,w,c
  2892  0017B6  1223               	iorwf	___xxtofl@arg^0,f,c
  2893  0017B8  501E               	movf	(??___xxtofl+1)^0,w,c
  2894  0017BA  1224               	iorwf	(___xxtofl@arg+1)^0,f,c
  2895  0017BC  501F               	movf	(??___xxtofl+2)^0,w,c
  2896  0017BE  1225               	iorwf	(___xxtofl@arg+2)^0,f,c
  2897  0017C0  5020               	movf	(??___xxtofl+3)^0,w,c
  2898  0017C2  1226               	iorwf	(___xxtofl@arg+3)^0,f,c
  2899  0017C4  5021               	movf	___xxtofl@sign^0,w,c
  2900  0017C6  B4D8               	btfsc	status,2,c
  2901  0017C8  EFE8  F00B         	goto	u2151
  2902  0017CC  EFEA  F00B         	goto	u2150
  2903  0017D0                     u2151:
  2904  0017D0  EFF2  F00B         	goto	l2490
  2905  0017D4                     u2150:
  2906  0017D4  BE1C               	btfsc	(___xxtofl@val+3)^0,7,c
  2907  0017D6  EFF1  F00B         	goto	u2160
  2908  0017DA  EFEF  F00B         	goto	u2161
  2909  0017DE                     u2161:
  2910  0017DE  EFF2  F00B         	goto	l2490
  2911  0017E2                     u2160:
  2912  0017E2  8E26               	bsf	(___xxtofl@arg+3)^0,7,c
  2913  0017E4                     l2490:
  2914  0017E4  C023  F019         	movff	___xxtofl@arg,?___xxtofl
  2915  0017E8  C024  F01A         	movff	___xxtofl@arg+1,?___xxtofl+1
  2916  0017EC  C025  F01B         	movff	___xxtofl@arg+2,?___xxtofl+2
  2917  0017F0  C026  F01C         	movff	___xxtofl@arg+3,?___xxtofl+3
  2918  0017F4                     l806:
  2919  0017F4  0012               	return		;funcret
  2920  0017F6                     __end_of___xxtofl:
  2921                           	callstack 0
  2922                           
  2923 ;; *************** function ___lmul *****************
  2924 ;; Defined at:
  2925 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul32.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  multiplier      4   12[COMRAM] unsigned long 
  2928 ;;  multiplicand    4   16[COMRAM] unsigned long 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;  product         4   20[COMRAM] unsigned long 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  4   12[COMRAM] unsigned long 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2940 ;;      Params:         8       0       0       0       0       0       0       0       0
  2941 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2942 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2943 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2944 ;;Total ram usage:       12 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    2
  2947 ;; This function calls:
  2948 ;;		Nothing
  2949 ;; This function is called by:
  2950 ;;		_main
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           	psect	text14
  2955  001FBC                     __ptext14:
  2956                           	callstack 0
  2957  001FBC                     ___lmul:
  2958                           	callstack 28
  2959  001FBC  0E00               	movlw	0
  2960  001FBE  6E15               	movwf	___lmul@product^0,c
  2961  001FC0  0E00               	movlw	0
  2962  001FC2  6E16               	movwf	(___lmul@product+1)^0,c
  2963  001FC4  0E00               	movlw	0
  2964  001FC6  6E17               	movwf	(___lmul@product+2)^0,c
  2965  001FC8  0E00               	movlw	0
  2966  001FCA  6E18               	movwf	(___lmul@product+3)^0,c
  2967  001FCC                     l2172:
  2968  001FCC  A00D               	btfss	___lmul@multiplier^0,0,c
  2969  001FCE  EFEB  F00F         	goto	u1631
  2970  001FD2  EFED  F00F         	goto	u1630
  2971  001FD6                     u1631:
  2972  001FD6  EFF5  F00F         	goto	l2176
  2973  001FDA                     u1630:
  2974  001FDA  5011               	movf	___lmul@multiplicand^0,w,c
  2975  001FDC  2615               	addwf	___lmul@product^0,f,c
  2976  001FDE  5012               	movf	(___lmul@multiplicand+1)^0,w,c
  2977  001FE0  2216               	addwfc	(___lmul@product+1)^0,f,c
  2978  001FE2  5013               	movf	(___lmul@multiplicand+2)^0,w,c
  2979  001FE4  2217               	addwfc	(___lmul@product+2)^0,f,c
  2980  001FE6  5014               	movf	(___lmul@multiplicand+3)^0,w,c
  2981  001FE8  2218               	addwfc	(___lmul@product+3)^0,f,c
  2982  001FEA                     l2176:
  2983  001FEA  90D8               	bcf	status,0,c
  2984  001FEC  3611               	rlcf	___lmul@multiplicand^0,f,c
  2985  001FEE  3612               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2986  001FF0  3613               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2987  001FF2  3614               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2988  001FF4  90D8               	bcf	status,0,c
  2989  001FF6  3210               	rrcf	(___lmul@multiplier+3)^0,f,c
  2990  001FF8  320F               	rrcf	(___lmul@multiplier+2)^0,f,c
  2991  001FFA  320E               	rrcf	(___lmul@multiplier+1)^0,f,c
  2992  001FFC  320D               	rrcf	___lmul@multiplier^0,f,c
  2993  001FFE  500D               	movf	___lmul@multiplier^0,w,c
  2994  002000  100E               	iorwf	(___lmul@multiplier+1)^0,w,c
  2995  002002  100F               	iorwf	(___lmul@multiplier+2)^0,w,c
  2996  002004  1010               	iorwf	(___lmul@multiplier+3)^0,w,c
  2997  002006  A4D8               	btfss	status,2,c
  2998  002008  EF08  F010         	goto	u1641
  2999  00200C  EF0A  F010         	goto	u1640
  3000  002010                     u1641:
  3001  002010  EFE6  F00F         	goto	l2172
  3002  002014                     u1640:
  3003  002014  C015  F00D         	movff	___lmul@product,?___lmul
  3004  002018  C016  F00E         	movff	___lmul@product+1,?___lmul+1
  3005  00201C  C017  F00F         	movff	___lmul@product+2,?___lmul+2
  3006  002020  C018  F010         	movff	___lmul@product+3,?___lmul+3
  3007  002024  0012               	return		;funcret
  3008  002026                     __end_of___lmul:
  3009                           	callstack 0
  3010                           
  3011 ;; *************** function ___flmul *****************
  3012 ;; Defined at:
  3013 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  b               4   12[COMRAM] unsigned long 
  3016 ;;  a               4   16[COMRAM] unsigned long 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  prod            4   31[COMRAM] struct .
  3019 ;;  grs             4   25[COMRAM] unsigned long 
  3020 ;;  temp            2   35[COMRAM] struct .
  3021 ;;  bexp            1   30[COMRAM] unsigned char 
  3022 ;;  aexp            1   29[COMRAM] unsigned char 
  3023 ;;  sign            1   24[COMRAM] unsigned char 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  4   12[COMRAM] unsigned char 
  3026 ;; Registers used:
  3027 ;;		wreg, status,2, status,0, prodl, prodh
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3033 ;;      Params:         8       0       0       0       0       0       0       0       0
  3034 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3035 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3036 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3037 ;;Total ram usage:       25 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    2
  3040 ;; This function calls:
  3041 ;;		Nothing
  3042 ;; This function is called by:
  3043 ;;		_main
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text15
  3048  000810                     __ptext15:
  3049                           	callstack 0
  3050  000810                     ___flmul:
  3051                           	callstack 28
  3052  000810  5010               	movf	(___flmul@b+3)^0,w,c
  3053  000812  0B80               	andlw	128
  3054  000814  6E19               	movwf	___flmul@sign^0,c
  3055  000816  5010               	movf	(___flmul@b+3)^0,w,c
  3056  000818  2410               	addwf	(___flmul@b+3)^0,w,c
  3057  00081A  6E1F               	movwf	___flmul@bexp^0,c
  3058  00081C  AE0F               	btfss	(___flmul@b+2)^0,7,c
  3059  00081E  EF13  F004         	goto	u1881
  3060  000822  EF15  F004         	goto	u1880
  3061  000826                     u1881:
  3062  000826  EF16  F004         	goto	l2324
  3063  00082A                     u1880:
  3064  00082A  801F               	bsf	___flmul@bexp^0,0,c
  3065  00082C                     l2324:
  3066  00082C  501F               	movf	___flmul@bexp^0,w,c
  3067  00082E  B4D8               	btfsc	status,2,c
  3068  000830  EF1C  F004         	goto	u1891
  3069  000834  EF1E  F004         	goto	u1890
  3070  000838                     u1891:
  3071  000838  EF31  F004         	goto	l2332
  3072  00083C                     u1890:
  3073  00083C  281F               	incf	___flmul@bexp^0,w,c
  3074  00083E  A4D8               	btfss	status,2,c
  3075  000840  EF24  F004         	goto	u1901
  3076  000844  EF26  F004         	goto	u1900
  3077  000848                     u1901:
  3078  000848  EF2E  F004         	goto	l2330
  3079  00084C                     u1900:
  3080  00084C  0E00               	movlw	0
  3081  00084E  6E0D               	movwf	___flmul@b^0,c
  3082  000850  0E00               	movlw	0
  3083  000852  6E0E               	movwf	(___flmul@b+1)^0,c
  3084  000854  0E00               	movlw	0
  3085  000856  6E0F               	movwf	(___flmul@b+2)^0,c
  3086  000858  0E00               	movlw	0
  3087  00085A  6E10               	movwf	(___flmul@b+3)^0,c
  3088  00085C                     l2330:
  3089  00085C  8E0F               	bsf	(___flmul@b+2)^0,7,c
  3090  00085E  EF39  F004         	goto	l2334
  3091  000862                     l2332:
  3092  000862  0E00               	movlw	0
  3093  000864  6E0D               	movwf	___flmul@b^0,c
  3094  000866  0E00               	movlw	0
  3095  000868  6E0E               	movwf	(___flmul@b+1)^0,c
  3096  00086A  0E00               	movlw	0
  3097  00086C  6E0F               	movwf	(___flmul@b+2)^0,c
  3098  00086E  0E00               	movlw	0
  3099  000870  6E10               	movwf	(___flmul@b+3)^0,c
  3100  000872                     l2334:
  3101  000872  5014               	movf	(___flmul@a+3)^0,w,c
  3102  000874  0B80               	andlw	128
  3103  000876  1A19               	xorwf	___flmul@sign^0,f,c
  3104  000878  5014               	movf	(___flmul@a+3)^0,w,c
  3105  00087A  2414               	addwf	(___flmul@a+3)^0,w,c
  3106  00087C  6E1E               	movwf	___flmul@aexp^0,c
  3107  00087E  AE13               	btfss	(___flmul@a+2)^0,7,c
  3108  000880  EF44  F004         	goto	u1911
  3109  000884  EF46  F004         	goto	u1910
  3110  000888                     u1911:
  3111  000888  EF47  F004         	goto	l2342
  3112  00088C                     u1910:
  3113  00088C  801E               	bsf	___flmul@aexp^0,0,c
  3114  00088E                     l2342:
  3115  00088E  501E               	movf	___flmul@aexp^0,w,c
  3116  000890  B4D8               	btfsc	status,2,c
  3117  000892  EF4D  F004         	goto	u1921
  3118  000896  EF4F  F004         	goto	u1920
  3119  00089A                     u1921:
  3120  00089A  EF62  F004         	goto	l2350
  3121  00089E                     u1920:
  3122  00089E  281E               	incf	___flmul@aexp^0,w,c
  3123  0008A0  A4D8               	btfss	status,2,c
  3124  0008A2  EF55  F004         	goto	u1931
  3125  0008A6  EF57  F004         	goto	u1930
  3126  0008AA                     u1931:
  3127  0008AA  EF5F  F004         	goto	l2348
  3128  0008AE                     u1930:
  3129  0008AE  0E00               	movlw	0
  3130  0008B0  6E11               	movwf	___flmul@a^0,c
  3131  0008B2  0E00               	movlw	0
  3132  0008B4  6E12               	movwf	(___flmul@a+1)^0,c
  3133  0008B6  0E00               	movlw	0
  3134  0008B8  6E13               	movwf	(___flmul@a+2)^0,c
  3135  0008BA  0E00               	movlw	0
  3136  0008BC  6E14               	movwf	(___flmul@a+3)^0,c
  3137  0008BE                     l2348:
  3138  0008BE  8E13               	bsf	(___flmul@a+2)^0,7,c
  3139  0008C0  EF6A  F004         	goto	l762
  3140  0008C4                     l2350:
  3141  0008C4  0E00               	movlw	0
  3142  0008C6  6E11               	movwf	___flmul@a^0,c
  3143  0008C8  0E00               	movlw	0
  3144  0008CA  6E12               	movwf	(___flmul@a+1)^0,c
  3145  0008CC  0E00               	movlw	0
  3146  0008CE  6E13               	movwf	(___flmul@a+2)^0,c
  3147  0008D0  0E00               	movlw	0
  3148  0008D2  6E14               	movwf	(___flmul@a+3)^0,c
  3149  0008D4                     l762:
  3150  0008D4  501E               	movf	___flmul@aexp^0,w,c
  3151  0008D6  B4D8               	btfsc	status,2,c
  3152  0008D8  EF70  F004         	goto	u1941
  3153  0008DC  EF72  F004         	goto	u1940
  3154  0008E0                     u1941:
  3155  0008E0  EF7A  F004         	goto	l2354
  3156  0008E4                     u1940:
  3157  0008E4  501F               	movf	___flmul@bexp^0,w,c
  3158  0008E6  A4D8               	btfss	status,2,c
  3159  0008E8  EF78  F004         	goto	u1951
  3160  0008EC  EF7A  F004         	goto	u1950
  3161  0008F0                     u1951:
  3162  0008F0  EF84  F004         	goto	l2358
  3163  0008F4                     u1950:
  3164  0008F4                     l2354:
  3165  0008F4  0E00               	movlw	0
  3166  0008F6  6E0D               	movwf	?___flmul^0,c
  3167  0008F8  0E00               	movlw	0
  3168  0008FA  6E0E               	movwf	(?___flmul+1)^0,c
  3169  0008FC  0E00               	movlw	0
  3170  0008FE  6E0F               	movwf	(?___flmul+2)^0,c
  3171  000900  0E00               	movlw	0
  3172  000902  6E10               	movwf	(?___flmul+3)^0,c
  3173  000904  EF1C  F006         	goto	l766
  3174  000908                     l2358:
  3175  000908  5013               	movf	(___flmul@a+2)^0,w,c
  3176  00090A  020D               	mulwf	___flmul@b^0,c
  3177  00090C  CFF3 F024          	movff	prodl,___flmul@temp
  3178  000910  CFF4 F025          	movff	prodh,___flmul@temp+1
  3179  000914  5024               	movf	___flmul@temp^0,w,c
  3180  000916  6E1A               	movwf	___flmul@grs^0,c
  3181  000918  6A1B               	clrf	(___flmul@grs+1)^0,c
  3182  00091A  6A1C               	clrf	(___flmul@grs+2)^0,c
  3183  00091C  6A1D               	clrf	(___flmul@grs+3)^0,c
  3184  00091E  5025               	movf	(___flmul@temp+1)^0,w,c
  3185  000920  6E20               	movwf	___flmul@prod^0,c
  3186  000922  6A21               	clrf	(___flmul@prod+1)^0,c
  3187  000924  6A22               	clrf	(___flmul@prod+2)^0,c
  3188  000926  6A23               	clrf	(___flmul@prod+3)^0,c
  3189  000928  5012               	movf	(___flmul@a+1)^0,w,c
  3190  00092A  020E               	mulwf	(___flmul@b+1)^0,c
  3191  00092C  CFF3 F024          	movff	prodl,___flmul@temp
  3192  000930  CFF4 F025          	movff	prodh,___flmul@temp+1
  3193  000934  5024               	movf	___flmul@temp^0,w,c
  3194  000936  261A               	addwf	___flmul@grs^0,f,c
  3195  000938  0E00               	movlw	0
  3196  00093A  221B               	addwfc	(___flmul@grs+1)^0,f,c
  3197  00093C  221C               	addwfc	(___flmul@grs+2)^0,f,c
  3198  00093E  221D               	addwfc	(___flmul@grs+3)^0,f,c
  3199  000940  5025               	movf	(___flmul@temp+1)^0,w,c
  3200  000942  2620               	addwf	___flmul@prod^0,f,c
  3201  000944  0E00               	movlw	0
  3202  000946  2221               	addwfc	(___flmul@prod+1)^0,f,c
  3203  000948  2222               	addwfc	(___flmul@prod+2)^0,f,c
  3204  00094A  2223               	addwfc	(___flmul@prod+3)^0,f,c
  3205  00094C  5011               	movf	___flmul@a^0,w,c
  3206  00094E  020F               	mulwf	(___flmul@b+2)^0,c
  3207  000950  CFF3 F024          	movff	prodl,___flmul@temp
  3208  000954  CFF4 F025          	movff	prodh,___flmul@temp+1
  3209  000958  5024               	movf	___flmul@temp^0,w,c
  3210  00095A  261A               	addwf	___flmul@grs^0,f,c
  3211  00095C  0E00               	movlw	0
  3212  00095E  221B               	addwfc	(___flmul@grs+1)^0,f,c
  3213  000960  221C               	addwfc	(___flmul@grs+2)^0,f,c
  3214  000962  221D               	addwfc	(___flmul@grs+3)^0,f,c
  3215  000964  5025               	movf	(___flmul@temp+1)^0,w,c
  3216  000966  2620               	addwf	___flmul@prod^0,f,c
  3217  000968  0E00               	movlw	0
  3218  00096A  2221               	addwfc	(___flmul@prod+1)^0,f,c
  3219  00096C  2222               	addwfc	(___flmul@prod+2)^0,f,c
  3220  00096E  2223               	addwfc	(___flmul@prod+3)^0,f,c
  3221  000970  C01C  F01D         	movff	___flmul@grs+2,___flmul@grs+3
  3222  000974  C01B  F01C         	movff	___flmul@grs+1,___flmul@grs+2
  3223  000978  C01A  F01B         	movff	___flmul@grs,___flmul@grs+1
  3224  00097C  6A1A               	clrf	___flmul@grs^0,c
  3225  00097E  5011               	movf	___flmul@a^0,w,c
  3226  000980  020E               	mulwf	(___flmul@b+1)^0,c
  3227  000982  CFF3 F024          	movff	prodl,___flmul@temp
  3228  000986  CFF4 F025          	movff	prodh,___flmul@temp+1
  3229  00098A  5024               	movf	___flmul@temp^0,w,c
  3230  00098C  261A               	addwf	___flmul@grs^0,f,c
  3231  00098E  5025               	movf	(___flmul@temp+1)^0,w,c
  3232  000990  221B               	addwfc	(___flmul@grs+1)^0,f,c
  3233  000992  0E00               	movlw	0
  3234  000994  221C               	addwfc	(___flmul@grs+2)^0,f,c
  3235  000996  0E00               	movlw	0
  3236  000998  221D               	addwfc	(___flmul@grs+3)^0,f,c
  3237  00099A  5012               	movf	(___flmul@a+1)^0,w,c
  3238  00099C  020D               	mulwf	___flmul@b^0,c
  3239  00099E  CFF3 F024          	movff	prodl,___flmul@temp
  3240  0009A2  CFF4 F025          	movff	prodh,___flmul@temp+1
  3241  0009A6  5024               	movf	___flmul@temp^0,w,c
  3242  0009A8  261A               	addwf	___flmul@grs^0,f,c
  3243  0009AA  5025               	movf	(___flmul@temp+1)^0,w,c
  3244  0009AC  221B               	addwfc	(___flmul@grs+1)^0,f,c
  3245  0009AE  0E00               	movlw	0
  3246  0009B0  221C               	addwfc	(___flmul@grs+2)^0,f,c
  3247  0009B2  0E00               	movlw	0
  3248  0009B4  221D               	addwfc	(___flmul@grs+3)^0,f,c
  3249  0009B6  C01C  F01D         	movff	___flmul@grs+2,___flmul@grs+3
  3250  0009BA  C01B  F01C         	movff	___flmul@grs+1,___flmul@grs+2
  3251  0009BE  C01A  F01B         	movff	___flmul@grs,___flmul@grs+1
  3252  0009C2  6A1A               	clrf	___flmul@grs^0,c
  3253  0009C4  5011               	movf	___flmul@a^0,w,c
  3254  0009C6  020D               	mulwf	___flmul@b^0,c
  3255  0009C8  CFF3 F024          	movff	prodl,___flmul@temp
  3256  0009CC  CFF4 F025          	movff	prodh,___flmul@temp+1
  3257  0009D0  5024               	movf	___flmul@temp^0,w,c
  3258  0009D2  261A               	addwf	___flmul@grs^0,f,c
  3259  0009D4  5025               	movf	(___flmul@temp+1)^0,w,c
  3260  0009D6  221B               	addwfc	(___flmul@grs+1)^0,f,c
  3261  0009D8  0E00               	movlw	0
  3262  0009DA  221C               	addwfc	(___flmul@grs+2)^0,f,c
  3263  0009DC  0E00               	movlw	0
  3264  0009DE  221D               	addwfc	(___flmul@grs+3)^0,f,c
  3265  0009E0  5013               	movf	(___flmul@a+2)^0,w,c
  3266  0009E2  020E               	mulwf	(___flmul@b+1)^0,c
  3267  0009E4  CFF3 F024          	movff	prodl,___flmul@temp
  3268  0009E8  CFF4 F025          	movff	prodh,___flmul@temp+1
  3269  0009EC  5024               	movf	___flmul@temp^0,w,c
  3270  0009EE  2620               	addwf	___flmul@prod^0,f,c
  3271  0009F0  5025               	movf	(___flmul@temp+1)^0,w,c
  3272  0009F2  2221               	addwfc	(___flmul@prod+1)^0,f,c
  3273  0009F4  0E00               	movlw	0
  3274  0009F6  2222               	addwfc	(___flmul@prod+2)^0,f,c
  3275  0009F8  0E00               	movlw	0
  3276  0009FA  2223               	addwfc	(___flmul@prod+3)^0,f,c
  3277  0009FC  5012               	movf	(___flmul@a+1)^0,w,c
  3278  0009FE  020F               	mulwf	(___flmul@b+2)^0,c
  3279  000A00  CFF3 F024          	movff	prodl,___flmul@temp
  3280  000A04  CFF4 F025          	movff	prodh,___flmul@temp+1
  3281  000A08  5024               	movf	___flmul@temp^0,w,c
  3282  000A0A  2620               	addwf	___flmul@prod^0,f,c
  3283  000A0C  5025               	movf	(___flmul@temp+1)^0,w,c
  3284  000A0E  2221               	addwfc	(___flmul@prod+1)^0,f,c
  3285  000A10  0E00               	movlw	0
  3286  000A12  2222               	addwfc	(___flmul@prod+2)^0,f,c
  3287  000A14  0E00               	movlw	0
  3288  000A16  2223               	addwfc	(___flmul@prod+3)^0,f,c
  3289  000A18  5013               	movf	(___flmul@a+2)^0,w,c
  3290  000A1A  020F               	mulwf	(___flmul@b+2)^0,c
  3291  000A1C  CFF3 F024          	movff	prodl,___flmul@temp
  3292  000A20  CFF4 F025          	movff	prodh,___flmul@temp+1
  3293  000A24  5024               	movf	___flmul@temp^0,w,c
  3294  000A26  6E15               	movwf	??___flmul^0,c
  3295  000A28  5025               	movf	(___flmul@temp+1)^0,w,c
  3296  000A2A  6E16               	movwf	(??___flmul+1)^0,c
  3297  000A2C  6A17               	clrf	(??___flmul+2)^0,c
  3298  000A2E  6A18               	clrf	(??___flmul+3)^0,c
  3299  000A30  C017  F018         	movff	??___flmul+2,??___flmul+3
  3300  000A34  C016  F017         	movff	??___flmul+1,??___flmul+2
  3301  000A38  C015  F016         	movff	??___flmul,??___flmul+1
  3302  000A3C  6A15               	clrf	??___flmul^0,c
  3303  000A3E  5015               	movf	??___flmul^0,w,c
  3304  000A40  2620               	addwf	___flmul@prod^0,f,c
  3305  000A42  5016               	movf	(??___flmul+1)^0,w,c
  3306  000A44  2221               	addwfc	(___flmul@prod+1)^0,f,c
  3307  000A46  5017               	movf	(??___flmul+2)^0,w,c
  3308  000A48  2222               	addwfc	(___flmul@prod+2)^0,f,c
  3309  000A4A  5018               	movf	(??___flmul+3)^0,w,c
  3310  000A4C  2223               	addwfc	(___flmul@prod+3)^0,f,c
  3311  000A4E  C01A  F015         	movff	___flmul@grs,??___flmul
  3312  000A52  C01B  F016         	movff	___flmul@grs+1,??___flmul+1
  3313  000A56  C01C  F017         	movff	___flmul@grs+2,??___flmul+2
  3314  000A5A  C01D  F018         	movff	___flmul@grs+3,??___flmul+3
  3315  000A5E  0E19               	movlw	25
  3316  000A60  EF37  F005         	goto	u1960
  3317  000A64                     u1965:
  3318  000A64  90D8               	bcf	status,0,c
  3319  000A66  3218               	rrcf	(??___flmul+3)^0,f,c
  3320  000A68  3217               	rrcf	(??___flmul+2)^0,f,c
  3321  000A6A  3216               	rrcf	(??___flmul+1)^0,f,c
  3322  000A6C  3215               	rrcf	??___flmul^0,f,c
  3323  000A6E                     u1960:
  3324  000A6E  2EE8               	decfsz	wreg,f,c
  3325  000A70  EF32  F005         	goto	u1965
  3326  000A74  5015               	movf	??___flmul^0,w,c
  3327  000A76  2620               	addwf	___flmul@prod^0,f,c
  3328  000A78  5016               	movf	(??___flmul+1)^0,w,c
  3329  000A7A  2221               	addwfc	(___flmul@prod+1)^0,f,c
  3330  000A7C  5017               	movf	(??___flmul+2)^0,w,c
  3331  000A7E  2222               	addwfc	(___flmul@prod+2)^0,f,c
  3332  000A80  5018               	movf	(??___flmul+3)^0,w,c
  3333  000A82  2223               	addwfc	(___flmul@prod+3)^0,f,c
  3334  000A84  C01C  F01D         	movff	___flmul@grs+2,___flmul@grs+3
  3335  000A88  C01B  F01C         	movff	___flmul@grs+1,___flmul@grs+2
  3336  000A8C  C01A  F01B         	movff	___flmul@grs,___flmul@grs+1
  3337  000A90  6A1A               	clrf	___flmul@grs^0,c
  3338  000A92  501E               	movf	___flmul@aexp^0,w,c
  3339  000A94  C01F  F015         	movff	___flmul@bexp,??___flmul
  3340  000A98  6A16               	clrf	(??___flmul+1)^0,c
  3341  000A9A  2615               	addwf	??___flmul^0,f,c
  3342  000A9C  0E00               	movlw	0
  3343  000A9E  2216               	addwfc	(??___flmul+1)^0,f,c
  3344  000AA0  0E82               	movlw	130
  3345  000AA2  2415               	addwf	??___flmul^0,w,c
  3346  000AA4  6E24               	movwf	___flmul@temp^0,c
  3347  000AA6  0EFF               	movlw	255
  3348  000AA8  2016               	addwfc	(??___flmul+1)^0,w,c
  3349  000AAA  6E25               	movwf	(___flmul@temp+1)^0,c
  3350  000AAC  EF6D  F005         	goto	l2406
  3351  000AB0                     l2400:
  3352  000AB0  90D8               	bcf	status,0,c
  3353  000AB2  3620               	rlcf	___flmul@prod^0,f,c
  3354  000AB4  3621               	rlcf	(___flmul@prod+1)^0,f,c
  3355  000AB6  3622               	rlcf	(___flmul@prod+2)^0,f,c
  3356  000AB8  3623               	rlcf	(___flmul@prod+3)^0,f,c
  3357  000ABA  AE1D               	btfss	(___flmul@grs+3)^0,7,c
  3358  000ABC  EF62  F005         	goto	u1971
  3359  000AC0  EF64  F005         	goto	u1970
  3360  000AC4                     u1971:
  3361  000AC4  EF65  F005         	goto	l769
  3362  000AC8                     u1970:
  3363  000AC8  8020               	bsf	___flmul@prod^0,0,c
  3364  000ACA                     l769:
  3365  000ACA  90D8               	bcf	status,0,c
  3366  000ACC  361A               	rlcf	___flmul@grs^0,f,c
  3367  000ACE  361B               	rlcf	(___flmul@grs+1)^0,f,c
  3368  000AD0  361C               	rlcf	(___flmul@grs+2)^0,f,c
  3369  000AD2  361D               	rlcf	(___flmul@grs+3)^0,f,c
  3370  000AD4  0624               	decf	___flmul@temp^0,f,c
  3371  000AD6  A0D8               	btfss	status,0,c
  3372  000AD8  0625               	decf	(___flmul@temp+1)^0,f,c
  3373  000ADA                     l2406:
  3374  000ADA  AE22               	btfss	(___flmul@prod+2)^0,7,c
  3375  000ADC  EF72  F005         	goto	u1981
  3376  000AE0  EF74  F005         	goto	u1980
  3377  000AE4                     u1981:
  3378  000AE4  EF58  F005         	goto	l2400
  3379  000AE8                     u1980:
  3380  000AE8  0E00               	movlw	0
  3381  000AEA  6E1E               	movwf	___flmul@aexp^0,c
  3382  000AEC  AE1D               	btfss	(___flmul@grs+3)^0,7,c
  3383  000AEE  EF7B  F005         	goto	u1991
  3384  000AF2  EF7D  F005         	goto	u1990
  3385  000AF6                     u1991:
  3386  000AF6  EFA1  F005         	goto	l771
  3387  000AFA                     u1990:
  3388  000AFA  0EFF               	movlw	255
  3389  000AFC  141A               	andwf	___flmul@grs^0,w,c
  3390  000AFE  6E15               	movwf	??___flmul^0,c
  3391  000B00  0EFF               	movlw	255
  3392  000B02  141B               	andwf	(___flmul@grs+1)^0,w,c
  3393  000B04  6E16               	movwf	(??___flmul+1)^0,c
  3394  000B06  0EFF               	movlw	255
  3395  000B08  141C               	andwf	(___flmul@grs+2)^0,w,c
  3396  000B0A  6E17               	movwf	(??___flmul+2)^0,c
  3397  000B0C  0E7F               	movlw	127
  3398  000B0E  141D               	andwf	(___flmul@grs+3)^0,w,c
  3399  000B10  6E18               	movwf	(??___flmul+3)^0,c
  3400  000B12  5015               	movf	??___flmul^0,w,c
  3401  000B14  1016               	iorwf	(??___flmul+1)^0,w,c
  3402  000B16  1017               	iorwf	(??___flmul+2)^0,w,c
  3403  000B18  1018               	iorwf	(??___flmul+3)^0,w,c
  3404  000B1A  B4D8               	btfsc	status,2,c
  3405  000B1C  EF92  F005         	goto	u2001
  3406  000B20  EF94  F005         	goto	u2000
  3407  000B24                     u2001:
  3408  000B24  EF98  F005         	goto	l772
  3409  000B28                     u2000:
  3410  000B28                     l2414:
  3411  000B28  0E01               	movlw	1
  3412  000B2A  6E1E               	movwf	___flmul@aexp^0,c
  3413  000B2C  EFA1  F005         	goto	l771
  3414  000B30                     l772:
  3415  000B30  A020               	btfss	___flmul@prod^0,0,c
  3416  000B32  EF9D  F005         	goto	u2011
  3417  000B36  EF9F  F005         	goto	u2010
  3418  000B3A                     u2011:
  3419  000B3A  EFA1  F005         	goto	l771
  3420  000B3E                     u2010:
  3421  000B3E  EF94  F005         	goto	l2414
  3422  000B42                     l771:
  3423  000B42  501E               	movf	___flmul@aexp^0,w,c
  3424  000B44  B4D8               	btfsc	status,2,c
  3425  000B46  EFA7  F005         	goto	u2021
  3426  000B4A  EFA9  F005         	goto	u2020
  3427  000B4E                     u2021:
  3428  000B4E  EFCD  F005         	goto	l2426
  3429  000B52                     u2020:
  3430  000B52  0E01               	movlw	1
  3431  000B54  2620               	addwf	___flmul@prod^0,f,c
  3432  000B56  0E00               	movlw	0
  3433  000B58  2221               	addwfc	(___flmul@prod+1)^0,f,c
  3434  000B5A  2222               	addwfc	(___flmul@prod+2)^0,f,c
  3435  000B5C  2223               	addwfc	(___flmul@prod+3)^0,f,c
  3436  000B5E  A023               	btfss	(___flmul@prod+3)^0,0,c
  3437  000B60  EFB4  F005         	goto	u2031
  3438  000B64  EFB6  F005         	goto	u2030
  3439  000B68                     u2031:
  3440  000B68  EFCD  F005         	goto	l2426
  3441  000B6C                     u2030:
  3442  000B6C  C020  F015         	movff	___flmul@prod,??___flmul
  3443  000B70  C021  F016         	movff	___flmul@prod+1,??___flmul+1
  3444  000B74  C022  F017         	movff	___flmul@prod+2,??___flmul+2
  3445  000B78  C023  F018         	movff	___flmul@prod+3,??___flmul+3
  3446  000B7C  3418               	rlcf	(??___flmul+3)^0,w,c
  3447  000B7E  3218               	rrcf	(??___flmul+3)^0,f,c
  3448  000B80  3217               	rrcf	(??___flmul+2)^0,f,c
  3449  000B82  3216               	rrcf	(??___flmul+1)^0,f,c
  3450  000B84  3215               	rrcf	??___flmul^0,f,c
  3451  000B86  C015  F020         	movff	??___flmul,___flmul@prod
  3452  000B8A  C016  F021         	movff	??___flmul+1,___flmul@prod+1
  3453  000B8E  C017  F022         	movff	??___flmul+2,___flmul@prod+2
  3454  000B92  C018  F023         	movff	??___flmul+3,___flmul@prod+3
  3455  000B96  4A24               	infsnz	___flmul@temp^0,f,c
  3456  000B98  2A25               	incf	(___flmul@temp+1)^0,f,c
  3457  000B9A                     l2426:
  3458  000B9A  BE25               	btfsc	(___flmul@temp+1)^0,7,c
  3459  000B9C  EFD8  F005         	goto	u2041
  3460  000BA0  5025               	movf	(___flmul@temp+1)^0,w,c
  3461  000BA2  E108               	bnz	u2040
  3462  000BA4  2824               	incf	___flmul@temp^0,w,c
  3463  000BA6  A0D8               	btfss	status,0,c
  3464  000BA8  EFD8  F005         	goto	u2041
  3465  000BAC  EFDA  F005         	goto	u2040
  3466  000BB0                     u2041:
  3467  000BB0  EFE4  F005         	goto	l2430
  3468  000BB4                     u2040:
  3469  000BB4  0E00               	movlw	0
  3470  000BB6  6E20               	movwf	___flmul@prod^0,c
  3471  000BB8  0E00               	movlw	0
  3472  000BBA  6E21               	movwf	(___flmul@prod+1)^0,c
  3473  000BBC  0E80               	movlw	128
  3474  000BBE  6E22               	movwf	(___flmul@prod+2)^0,c
  3475  000BC0  0E7F               	movlw	127
  3476  000BC2  6E23               	movwf	(___flmul@prod+3)^0,c
  3477  000BC4  EF12  F006         	goto	l2442
  3478  000BC8                     l2430:
  3479  000BC8  BE25               	btfsc	(___flmul@temp+1)^0,7,c
  3480  000BCA  EFF1  F005         	goto	u2050
  3481  000BCE  5025               	movf	(___flmul@temp+1)^0,w,c
  3482  000BD0  E106               	bnz	u2051
  3483  000BD2  0424               	decf	___flmul@temp^0,w,c
  3484  000BD4  B0D8               	btfsc	status,0,c
  3485  000BD6  EFEF  F005         	goto	u2051
  3486  000BDA  EFF1  F005         	goto	u2050
  3487  000BDE                     u2051:
  3488  000BDE  EFFD  F005         	goto	l779
  3489  000BE2                     u2050:
  3490  000BE2  0E00               	movlw	0
  3491  000BE4  6E20               	movwf	___flmul@prod^0,c
  3492  000BE6  0E00               	movlw	0
  3493  000BE8  6E21               	movwf	(___flmul@prod+1)^0,c
  3494  000BEA  0E00               	movlw	0
  3495  000BEC  6E22               	movwf	(___flmul@prod+2)^0,c
  3496  000BEE  0E00               	movlw	0
  3497  000BF0  6E23               	movwf	(___flmul@prod+3)^0,c
  3498  000BF2  0E00               	movlw	0
  3499  000BF4  6E19               	movwf	___flmul@sign^0,c
  3500  000BF6  EF12  F006         	goto	l2442
  3501  000BFA                     l779:
  3502  000BFA  C024  F01F         	movff	___flmul@temp,___flmul@bexp
  3503  000BFE  0EFF               	movlw	255
  3504  000C00  1620               	andwf	___flmul@prod^0,f,c
  3505  000C02  0EFF               	movlw	255
  3506  000C04  1621               	andwf	(___flmul@prod+1)^0,f,c
  3507  000C06  0E7F               	movlw	127
  3508  000C08  1622               	andwf	(___flmul@prod+2)^0,f,c
  3509  000C0A  0E00               	movlw	0
  3510  000C0C  1623               	andwf	(___flmul@prod+3)^0,f,c
  3511  000C0E  A01F               	btfss	___flmul@bexp^0,0,c
  3512  000C10  EF0C  F006         	goto	u2061
  3513  000C14  EF0E  F006         	goto	u2060
  3514  000C18                     u2061:
  3515  000C18  EF0F  F006         	goto	l2440
  3516  000C1C                     u2060:
  3517  000C1C  8E22               	bsf	(___flmul@prod+2)^0,7,c
  3518  000C1E                     l2440:
  3519  000C1E  90D8               	bcf	status,0,c
  3520  000C20  301F               	rrcf	___flmul@bexp^0,w,c
  3521  000C22  6E23               	movwf	(___flmul@prod+3)^0,c
  3522  000C24                     l2442:
  3523  000C24  5019               	movf	___flmul@sign^0,w,c
  3524  000C26  1223               	iorwf	(___flmul@prod+3)^0,f,c
  3525  000C28  C020  F00D         	movff	___flmul@prod,?___flmul
  3526  000C2C  C021  F00E         	movff	___flmul@prod+1,?___flmul+1
  3527  000C30  C022  F00F         	movff	___flmul@prod+2,?___flmul+2
  3528  000C34  C023  F010         	movff	___flmul@prod+3,?___flmul+3
  3529  000C38                     l766:
  3530  000C38  0012               	return		;funcret
  3531  000C3A                     __end_of___flmul:
  3532                           	callstack 0
  3533                           
  3534 ;; *************** function ___fldiv *****************
  3535 ;; Defined at:
  3536 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  b               4   12[COMRAM] unsigned char 
  3539 ;;  a               4   16[COMRAM] unsigned char 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;  grs             4   31[COMRAM] unsigned long 
  3542 ;;  rem             4   24[COMRAM] unsigned long 
  3543 ;;  new_exp         2   29[COMRAM] short 
  3544 ;;  aexp            1   36[COMRAM] unsigned char 
  3545 ;;  bexp            1   35[COMRAM] unsigned char 
  3546 ;;  sign            1   28[COMRAM] unsigned char 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  4   12[COMRAM] unsigned char 
  3549 ;; Registers used:
  3550 ;;		wreg, status,2, status,0
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3556 ;;      Params:         8       0       0       0       0       0       0       0       0
  3557 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3558 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3559 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3560 ;;Total ram usage:       25 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:    2
  3563 ;; This function calls:
  3564 ;;		Nothing
  3565 ;; This function is called by:
  3566 ;;		_main
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           	psect	text16
  3571  000C3A                     __ptext16:
  3572                           	callstack 0
  3573  000C3A                     ___fldiv:
  3574                           	callstack 28
  3575  000C3A  5010               	movf	(___fldiv@b+3)^0,w,c
  3576  000C3C  0B80               	andlw	128
  3577  000C3E  6E1D               	movwf	___fldiv@sign^0,c
  3578  000C40  5010               	movf	(___fldiv@b+3)^0,w,c
  3579  000C42  2410               	addwf	(___fldiv@b+3)^0,w,c
  3580  000C44  6E24               	movwf	___fldiv@bexp^0,c
  3581  000C46  AE0F               	btfss	(___fldiv@b+2)^0,7,c
  3582  000C48  EF28  F006         	goto	u1651
  3583  000C4C  EF2A  F006         	goto	u1650
  3584  000C50                     u1651:
  3585  000C50  EF2B  F006         	goto	l2186
  3586  000C54                     u1650:
  3587  000C54  8024               	bsf	___fldiv@bexp^0,0,c
  3588  000C56                     l2186:
  3589  000C56  5024               	movf	___fldiv@bexp^0,w,c
  3590  000C58  B4D8               	btfsc	status,2,c
  3591  000C5A  EF31  F006         	goto	u1661
  3592  000C5E  EF33  F006         	goto	u1660
  3593  000C62                     u1661:
  3594  000C62  EF48  F006         	goto	l2196
  3595  000C66                     u1660:
  3596  000C66  2824               	incf	___fldiv@bexp^0,w,c
  3597  000C68  A4D8               	btfss	status,2,c
  3598  000C6A  EF39  F006         	goto	u1671
  3599  000C6E  EF3B  F006         	goto	u1670
  3600  000C72                     u1671:
  3601  000C72  EF43  F006         	goto	l2192
  3602  000C76                     u1670:
  3603  000C76  0E00               	movlw	0
  3604  000C78  6E0D               	movwf	___fldiv@b^0,c
  3605  000C7A  0E00               	movlw	0
  3606  000C7C  6E0E               	movwf	(___fldiv@b+1)^0,c
  3607  000C7E  0E00               	movlw	0
  3608  000C80  6E0F               	movwf	(___fldiv@b+2)^0,c
  3609  000C82  0E00               	movlw	0
  3610  000C84  6E10               	movwf	(___fldiv@b+3)^0,c
  3611  000C86                     l2192:
  3612  000C86  8E0F               	bsf	(___fldiv@b+2)^0,7,c
  3613  000C88  0E00               	movlw	0
  3614  000C8A  6E10               	movwf	(___fldiv@b+3)^0,c
  3615  000C8C  EF50  F006         	goto	l2198
  3616  000C90                     l2196:
  3617  000C90  0E00               	movlw	0
  3618  000C92  6E0D               	movwf	___fldiv@b^0,c
  3619  000C94  0E00               	movlw	0
  3620  000C96  6E0E               	movwf	(___fldiv@b+1)^0,c
  3621  000C98  0E00               	movlw	0
  3622  000C9A  6E0F               	movwf	(___fldiv@b+2)^0,c
  3623  000C9C  0E00               	movlw	0
  3624  000C9E  6E10               	movwf	(___fldiv@b+3)^0,c
  3625  000CA0                     l2198:
  3626  000CA0  5014               	movf	(___fldiv@a+3)^0,w,c
  3627  000CA2  0B80               	andlw	128
  3628  000CA4  1A1D               	xorwf	___fldiv@sign^0,f,c
  3629  000CA6  5014               	movf	(___fldiv@a+3)^0,w,c
  3630  000CA8  2414               	addwf	(___fldiv@a+3)^0,w,c
  3631  000CAA  6E25               	movwf	___fldiv@aexp^0,c
  3632  000CAC  AE13               	btfss	(___fldiv@a+2)^0,7,c
  3633  000CAE  EF5B  F006         	goto	u1681
  3634  000CB2  EF5D  F006         	goto	u1680
  3635  000CB6                     u1681:
  3636  000CB6  EF5E  F006         	goto	l2206
  3637  000CBA                     u1680:
  3638  000CBA  8025               	bsf	___fldiv@aexp^0,0,c
  3639  000CBC                     l2206:
  3640  000CBC  5025               	movf	___fldiv@aexp^0,w,c
  3641  000CBE  B4D8               	btfsc	status,2,c
  3642  000CC0  EF64  F006         	goto	u1691
  3643  000CC4  EF66  F006         	goto	u1690
  3644  000CC8                     u1691:
  3645  000CC8  EF7B  F006         	goto	l2216
  3646  000CCC                     u1690:
  3647  000CCC  2825               	incf	___fldiv@aexp^0,w,c
  3648  000CCE  A4D8               	btfss	status,2,c
  3649  000CD0  EF6C  F006         	goto	u1701
  3650  000CD4  EF6E  F006         	goto	u1700
  3651  000CD8                     u1701:
  3652  000CD8  EF76  F006         	goto	l2212
  3653  000CDC                     u1700:
  3654  000CDC  0E00               	movlw	0
  3655  000CDE  6E11               	movwf	___fldiv@a^0,c
  3656  000CE0  0E00               	movlw	0
  3657  000CE2  6E12               	movwf	(___fldiv@a+1)^0,c
  3658  000CE4  0E00               	movlw	0
  3659  000CE6  6E13               	movwf	(___fldiv@a+2)^0,c
  3660  000CE8  0E00               	movlw	0
  3661  000CEA  6E14               	movwf	(___fldiv@a+3)^0,c
  3662  000CEC                     l2212:
  3663  000CEC  8E13               	bsf	(___fldiv@a+2)^0,7,c
  3664  000CEE  0E00               	movlw	0
  3665  000CF0  6E14               	movwf	(___fldiv@a+3)^0,c
  3666  000CF2  EF83  F006         	goto	l2218
  3667  000CF6                     l2216:
  3668  000CF6  0E00               	movlw	0
  3669  000CF8  6E11               	movwf	___fldiv@a^0,c
  3670  000CFA  0E00               	movlw	0
  3671  000CFC  6E12               	movwf	(___fldiv@a+1)^0,c
  3672  000CFE  0E00               	movlw	0
  3673  000D00  6E13               	movwf	(___fldiv@a+2)^0,c
  3674  000D02  0E00               	movlw	0
  3675  000D04  6E14               	movwf	(___fldiv@a+3)^0,c
  3676  000D06                     l2218:
  3677  000D06  5011               	movf	___fldiv@a^0,w,c
  3678  000D08  1012               	iorwf	(___fldiv@a+1)^0,w,c
  3679  000D0A  1013               	iorwf	(___fldiv@a+2)^0,w,c
  3680  000D0C  1014               	iorwf	(___fldiv@a+3)^0,w,c
  3681  000D0E  A4D8               	btfss	status,2,c
  3682  000D10  EF8C  F006         	goto	u1711
  3683  000D14  EF8E  F006         	goto	u1710
  3684  000D18                     u1711:
  3685  000D18  EFA6  F006         	goto	l2230
  3686  000D1C                     u1710:
  3687  000D1C  0E00               	movlw	0
  3688  000D1E  6E0D               	movwf	___fldiv@b^0,c
  3689  000D20  0E00               	movlw	0
  3690  000D22  6E0E               	movwf	(___fldiv@b+1)^0,c
  3691  000D24  0E00               	movlw	0
  3692  000D26  6E0F               	movwf	(___fldiv@b+2)^0,c
  3693  000D28  0E00               	movlw	0
  3694  000D2A  6E10               	movwf	(___fldiv@b+3)^0,c
  3695  000D2C  0E80               	movlw	128
  3696  000D2E  120F               	iorwf	(___fldiv@b+2)^0,f,c
  3697  000D30  0E7F               	movlw	127
  3698  000D32  1210               	iorwf	(___fldiv@b+3)^0,f,c
  3699  000D34                     l2224:
  3700  000D34  501D               	movf	___fldiv@sign^0,w,c
  3701  000D36  1210               	iorwf	(___fldiv@b+3)^0,f,c
  3702  000D38  C00D  F00D         	movff	___fldiv@b,?___fldiv
  3703  000D3C  C00E  F00E         	movff	___fldiv@b+1,?___fldiv+1
  3704  000D40  C00F  F00F         	movff	___fldiv@b+2,?___fldiv+2
  3705  000D44  C010  F010         	movff	___fldiv@b+3,?___fldiv+3
  3706  000D48  EFE9  F007         	goto	l730
  3707  000D4C                     l2230:
  3708  000D4C  5024               	movf	___fldiv@bexp^0,w,c
  3709  000D4E  A4D8               	btfss	status,2,c
  3710  000D50  EFAC  F006         	goto	u1721
  3711  000D54  EFAE  F006         	goto	u1720
  3712  000D58                     u1721:
  3713  000D58  EFB8  F006         	goto	l2238
  3714  000D5C                     u1720:
  3715  000D5C  0E00               	movlw	0
  3716  000D5E  6E0D               	movwf	?___fldiv^0,c
  3717  000D60  0E00               	movlw	0
  3718  000D62  6E0E               	movwf	(?___fldiv+1)^0,c
  3719  000D64  0E00               	movlw	0
  3720  000D66  6E0F               	movwf	(?___fldiv+2)^0,c
  3721  000D68  0E00               	movlw	0
  3722  000D6A  6E10               	movwf	(?___fldiv+3)^0,c
  3723  000D6C  EFE9  F007         	goto	l730
  3724  000D70                     l2238:
  3725  000D70  5025               	movf	___fldiv@aexp^0,w,c
  3726  000D72  C024  F015         	movff	___fldiv@bexp,??___fldiv
  3727  000D76  6A16               	clrf	(??___fldiv+1)^0,c
  3728  000D78  5E15               	subwf	??___fldiv^0,f,c
  3729  000D7A  0E00               	movlw	0
  3730  000D7C  5A16               	subwfb	(??___fldiv+1)^0,f,c
  3731  000D7E  0E7F               	movlw	127
  3732  000D80  2415               	addwf	??___fldiv^0,w,c
  3733  000D82  6E1E               	movwf	___fldiv@new_exp^0,c
  3734  000D84  0E00               	movlw	0
  3735  000D86  2016               	addwfc	(??___fldiv+1)^0,w,c
  3736  000D88  6E1F               	movwf	(___fldiv@new_exp+1)^0,c
  3737  000D8A  C00D  F019         	movff	___fldiv@b,___fldiv@rem
  3738  000D8E  C00E  F01A         	movff	___fldiv@b+1,___fldiv@rem+1
  3739  000D92  C00F  F01B         	movff	___fldiv@b+2,___fldiv@rem+2
  3740  000D96  C010  F01C         	movff	___fldiv@b+3,___fldiv@rem+3
  3741  000D9A  0E00               	movlw	0
  3742  000D9C  6E0D               	movwf	___fldiv@b^0,c
  3743  000D9E  0E00               	movlw	0
  3744  000DA0  6E0E               	movwf	(___fldiv@b+1)^0,c
  3745  000DA2  0E00               	movlw	0
  3746  000DA4  6E0F               	movwf	(___fldiv@b+2)^0,c
  3747  000DA6  0E00               	movlw	0
  3748  000DA8  6E10               	movwf	(___fldiv@b+3)^0,c
  3749  000DAA  0E00               	movlw	0
  3750  000DAC  6E20               	movwf	___fldiv@grs^0,c
  3751  000DAE  0E00               	movlw	0
  3752  000DB0  6E21               	movwf	(___fldiv@grs+1)^0,c
  3753  000DB2  0E00               	movlw	0
  3754  000DB4  6E22               	movwf	(___fldiv@grs+2)^0,c
  3755  000DB6  0E00               	movlw	0
  3756  000DB8  6E23               	movwf	(___fldiv@grs+3)^0,c
  3757  000DBA  0E00               	movlw	0
  3758  000DBC  6E25               	movwf	___fldiv@aexp^0,c
  3759  000DBE  EF19  F007         	goto	l732
  3760  000DC2                     l2248:
  3761  000DC2  5025               	movf	___fldiv@aexp^0,w,c
  3762  000DC4  B4D8               	btfsc	status,2,c
  3763  000DC6  EFE7  F006         	goto	u1731
  3764  000DCA  EFE9  F006         	goto	u1730
  3765  000DCE                     u1731:
  3766  000DCE  EF00  F007         	goto	l2256
  3767  000DD2                     u1730:
  3768  000DD2  90D8               	bcf	status,0,c
  3769  000DD4  3619               	rlcf	___fldiv@rem^0,f,c
  3770  000DD6  361A               	rlcf	(___fldiv@rem+1)^0,f,c
  3771  000DD8  361B               	rlcf	(___fldiv@rem+2)^0,f,c
  3772  000DDA  361C               	rlcf	(___fldiv@rem+3)^0,f,c
  3773  000DDC  90D8               	bcf	status,0,c
  3774  000DDE  360D               	rlcf	___fldiv@b^0,f,c
  3775  000DE0  360E               	rlcf	(___fldiv@b+1)^0,f,c
  3776  000DE2  360F               	rlcf	(___fldiv@b+2)^0,f,c
  3777  000DE4  3610               	rlcf	(___fldiv@b+3)^0,f,c
  3778  000DE6  AE23               	btfss	(___fldiv@grs+3)^0,7,c
  3779  000DE8  EFF8  F006         	goto	u1741
  3780  000DEC  EFFA  F006         	goto	u1740
  3781  000DF0                     u1741:
  3782  000DF0  EFFB  F006         	goto	l735
  3783  000DF4                     u1740:
  3784  000DF4  800D               	bsf	___fldiv@b^0,0,c
  3785  000DF6                     l735:
  3786  000DF6  90D8               	bcf	status,0,c
  3787  000DF8  3620               	rlcf	___fldiv@grs^0,f,c
  3788  000DFA  3621               	rlcf	(___fldiv@grs+1)^0,f,c
  3789  000DFC  3622               	rlcf	(___fldiv@grs+2)^0,f,c
  3790  000DFE  3623               	rlcf	(___fldiv@grs+3)^0,f,c
  3791  000E00                     l2256:
  3792  000E00  5011               	movf	___fldiv@a^0,w,c
  3793  000E02  5C19               	subwf	___fldiv@rem^0,w,c
  3794  000E04  5012               	movf	(___fldiv@a+1)^0,w,c
  3795  000E06  581A               	subwfb	(___fldiv@rem+1)^0,w,c
  3796  000E08  5013               	movf	(___fldiv@a+2)^0,w,c
  3797  000E0A  581B               	subwfb	(___fldiv@rem+2)^0,w,c
  3798  000E0C  5014               	movf	(___fldiv@a+3)^0,w,c
  3799  000E0E  581C               	subwfb	(___fldiv@rem+3)^0,w,c
  3800  000E10  A0D8               	btfss	status,0,c
  3801  000E12  EF0D  F007         	goto	u1751
  3802  000E16  EF0F  F007         	goto	u1750
  3803  000E1A                     u1751:
  3804  000E1A  EF18  F007         	goto	l2262
  3805  000E1E                     u1750:
  3806  000E1E  8C23               	bsf	(___fldiv@grs+3)^0,6,c
  3807  000E20  5011               	movf	___fldiv@a^0,w,c
  3808  000E22  5E19               	subwf	___fldiv@rem^0,f,c
  3809  000E24  5012               	movf	(___fldiv@a+1)^0,w,c
  3810  000E26  5A1A               	subwfb	(___fldiv@rem+1)^0,f,c
  3811  000E28  5013               	movf	(___fldiv@a+2)^0,w,c
  3812  000E2A  5A1B               	subwfb	(___fldiv@rem+2)^0,f,c
  3813  000E2C  5014               	movf	(___fldiv@a+3)^0,w,c
  3814  000E2E  5A1C               	subwfb	(___fldiv@rem+3)^0,f,c
  3815  000E30                     l2262:
  3816  000E30  2A25               	incf	___fldiv@aexp^0,f,c
  3817  000E32                     l732:
  3818  000E32  0E19               	movlw	25
  3819  000E34  6425               	cpfsgt	___fldiv@aexp^0,c
  3820  000E36  EF1F  F007         	goto	u1761
  3821  000E3A  EF21  F007         	goto	u1760
  3822  000E3E                     u1761:
  3823  000E3E  EFE1  F006         	goto	l2248
  3824  000E42                     u1760:
  3825  000E42  5019               	movf	___fldiv@rem^0,w,c
  3826  000E44  101A               	iorwf	(___fldiv@rem+1)^0,w,c
  3827  000E46  101B               	iorwf	(___fldiv@rem+2)^0,w,c
  3828  000E48  101C               	iorwf	(___fldiv@rem+3)^0,w,c
  3829  000E4A  B4D8               	btfsc	status,2,c
  3830  000E4C  EF2A  F007         	goto	u1771
  3831  000E50  EF2C  F007         	goto	u1770
  3832  000E54                     u1771:
  3833  000E54  EF44  F007         	goto	l2274
  3834  000E58                     u1770:
  3835  000E58  8020               	bsf	___fldiv@grs^0,0,c
  3836  000E5A  EF44  F007         	goto	l2274
  3837  000E5E                     l2268:
  3838  000E5E  90D8               	bcf	status,0,c
  3839  000E60  360D               	rlcf	___fldiv@b^0,f,c
  3840  000E62  360E               	rlcf	(___fldiv@b+1)^0,f,c
  3841  000E64  360F               	rlcf	(___fldiv@b+2)^0,f,c
  3842  000E66  3610               	rlcf	(___fldiv@b+3)^0,f,c
  3843  000E68  AE23               	btfss	(___fldiv@grs+3)^0,7,c
  3844  000E6A  EF39  F007         	goto	u1781
  3845  000E6E  EF3B  F007         	goto	u1780
  3846  000E72                     u1781:
  3847  000E72  EF3C  F007         	goto	l741
  3848  000E76                     u1780:
  3849  000E76  800D               	bsf	___fldiv@b^0,0,c
  3850  000E78                     l741:
  3851  000E78  90D8               	bcf	status,0,c
  3852  000E7A  3620               	rlcf	___fldiv@grs^0,f,c
  3853  000E7C  3621               	rlcf	(___fldiv@grs+1)^0,f,c
  3854  000E7E  3622               	rlcf	(___fldiv@grs+2)^0,f,c
  3855  000E80  3623               	rlcf	(___fldiv@grs+3)^0,f,c
  3856  000E82  061E               	decf	___fldiv@new_exp^0,f,c
  3857  000E84  A0D8               	btfss	status,0,c
  3858  000E86  061F               	decf	(___fldiv@new_exp+1)^0,f,c
  3859  000E88                     l2274:
  3860  000E88  AE0F               	btfss	(___fldiv@b+2)^0,7,c
  3861  000E8A  EF49  F007         	goto	u1791
  3862  000E8E  EF4B  F007         	goto	u1790
  3863  000E92                     u1791:
  3864  000E92  EF2F  F007         	goto	l2268
  3865  000E96                     u1790:
  3866  000E96  0E00               	movlw	0
  3867  000E98  6E25               	movwf	___fldiv@aexp^0,c
  3868  000E9A  AE23               	btfss	(___fldiv@grs+3)^0,7,c
  3869  000E9C  EF52  F007         	goto	u1801
  3870  000EA0  EF54  F007         	goto	u1800
  3871  000EA4                     u1801:
  3872  000EA4  EF78  F007         	goto	l743
  3873  000EA8                     u1800:
  3874  000EA8  0EFF               	movlw	255
  3875  000EAA  1420               	andwf	___fldiv@grs^0,w,c
  3876  000EAC  6E15               	movwf	??___fldiv^0,c
  3877  000EAE  0EFF               	movlw	255
  3878  000EB0  1421               	andwf	(___fldiv@grs+1)^0,w,c
  3879  000EB2  6E16               	movwf	(??___fldiv+1)^0,c
  3880  000EB4  0EFF               	movlw	255
  3881  000EB6  1422               	andwf	(___fldiv@grs+2)^0,w,c
  3882  000EB8  6E17               	movwf	(??___fldiv+2)^0,c
  3883  000EBA  0E7F               	movlw	127
  3884  000EBC  1423               	andwf	(___fldiv@grs+3)^0,w,c
  3885  000EBE  6E18               	movwf	(??___fldiv+3)^0,c
  3886  000EC0  5015               	movf	??___fldiv^0,w,c
  3887  000EC2  1016               	iorwf	(??___fldiv+1)^0,w,c
  3888  000EC4  1017               	iorwf	(??___fldiv+2)^0,w,c
  3889  000EC6  1018               	iorwf	(??___fldiv+3)^0,w,c
  3890  000EC8  B4D8               	btfsc	status,2,c
  3891  000ECA  EF69  F007         	goto	u1811
  3892  000ECE  EF6B  F007         	goto	u1810
  3893  000ED2                     u1811:
  3894  000ED2  EF6F  F007         	goto	l744
  3895  000ED6                     u1810:
  3896  000ED6                     l2282:
  3897  000ED6  0E01               	movlw	1
  3898  000ED8  6E25               	movwf	___fldiv@aexp^0,c
  3899  000EDA  EF78  F007         	goto	l743
  3900  000EDE                     l744:
  3901  000EDE  A00D               	btfss	___fldiv@b^0,0,c
  3902  000EE0  EF74  F007         	goto	u1821
  3903  000EE4  EF76  F007         	goto	u1820
  3904  000EE8                     u1821:
  3905  000EE8  EF78  F007         	goto	l743
  3906  000EEC                     u1820:
  3907  000EEC  EF6B  F007         	goto	l2282
  3908  000EF0                     l743:
  3909  000EF0  5025               	movf	___fldiv@aexp^0,w,c
  3910  000EF2  B4D8               	btfsc	status,2,c
  3911  000EF4  EF7E  F007         	goto	u1831
  3912  000EF8  EF80  F007         	goto	u1830
  3913  000EFC                     u1831:
  3914  000EFC  EFA4  F007         	goto	l2294
  3915  000F00                     u1830:
  3916  000F00  0E01               	movlw	1
  3917  000F02  260D               	addwf	___fldiv@b^0,f,c
  3918  000F04  0E00               	movlw	0
  3919  000F06  220E               	addwfc	(___fldiv@b+1)^0,f,c
  3920  000F08  220F               	addwfc	(___fldiv@b+2)^0,f,c
  3921  000F0A  2210               	addwfc	(___fldiv@b+3)^0,f,c
  3922  000F0C  A010               	btfss	(___fldiv@b+3)^0,0,c
  3923  000F0E  EF8B  F007         	goto	u1841
  3924  000F12  EF8D  F007         	goto	u1840
  3925  000F16                     u1841:
  3926  000F16  EFA4  F007         	goto	l2294
  3927  000F1A                     u1840:
  3928  000F1A  C00D  F015         	movff	___fldiv@b,??___fldiv
  3929  000F1E  C00E  F016         	movff	___fldiv@b+1,??___fldiv+1
  3930  000F22  C00F  F017         	movff	___fldiv@b+2,??___fldiv+2
  3931  000F26  C010  F018         	movff	___fldiv@b+3,??___fldiv+3
  3932  000F2A  3418               	rlcf	(??___fldiv+3)^0,w,c
  3933  000F2C  3218               	rrcf	(??___fldiv+3)^0,f,c
  3934  000F2E  3217               	rrcf	(??___fldiv+2)^0,f,c
  3935  000F30  3216               	rrcf	(??___fldiv+1)^0,f,c
  3936  000F32  3215               	rrcf	??___fldiv^0,f,c
  3937  000F34  C015  F00D         	movff	??___fldiv,___fldiv@b
  3938  000F38  C016  F00E         	movff	??___fldiv+1,___fldiv@b+1
  3939  000F3C  C017  F00F         	movff	??___fldiv+2,___fldiv@b+2
  3940  000F40  C018  F010         	movff	??___fldiv+3,___fldiv@b+3
  3941  000F44  4A1E               	infsnz	___fldiv@new_exp^0,f,c
  3942  000F46  2A1F               	incf	(___fldiv@new_exp+1)^0,f,c
  3943  000F48                     l2294:
  3944  000F48  BE1F               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3945  000F4A  EFAF  F007         	goto	u1851
  3946  000F4E  501F               	movf	(___fldiv@new_exp+1)^0,w,c
  3947  000F50  E108               	bnz	u1850
  3948  000F52  281E               	incf	___fldiv@new_exp^0,w,c
  3949  000F54  A0D8               	btfss	status,0,c
  3950  000F56  EFAF  F007         	goto	u1851
  3951  000F5A  EFB1  F007         	goto	u1850
  3952  000F5E                     u1851:
  3953  000F5E  EFBC  F007         	goto	l2298
  3954  000F62                     u1850:
  3955  000F62  0E00               	movlw	0
  3956  000F64  6E1F               	movwf	(___fldiv@new_exp+1)^0,c
  3957  000F66  681E               	setf	___fldiv@new_exp^0,c
  3958  000F68  0E00               	movlw	0
  3959  000F6A  6E0D               	movwf	___fldiv@b^0,c
  3960  000F6C  0E00               	movlw	0
  3961  000F6E  6E0E               	movwf	(___fldiv@b+1)^0,c
  3962  000F70  0E00               	movlw	0
  3963  000F72  6E0F               	movwf	(___fldiv@b+2)^0,c
  3964  000F74  0E00               	movlw	0
  3965  000F76  6E10               	movwf	(___fldiv@b+3)^0,c
  3966  000F78                     l2298:
  3967  000F78  BE1F               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3968  000F7A  EFC9  F007         	goto	u1860
  3969  000F7E  501F               	movf	(___fldiv@new_exp+1)^0,w,c
  3970  000F80  E106               	bnz	u1861
  3971  000F82  041E               	decf	___fldiv@new_exp^0,w,c
  3972  000F84  B0D8               	btfsc	status,0,c
  3973  000F86  EFC7  F007         	goto	u1861
  3974  000F8A  EFC9  F007         	goto	u1860
  3975  000F8E                     u1861:
  3976  000F8E  EFD7  F007         	goto	l2302
  3977  000F92                     u1860:
  3978  000F92  0E00               	movlw	0
  3979  000F94  6E1F               	movwf	(___fldiv@new_exp+1)^0,c
  3980  000F96  0E00               	movlw	0
  3981  000F98  6E1E               	movwf	___fldiv@new_exp^0,c
  3982  000F9A  0E00               	movlw	0
  3983  000F9C  6E0D               	movwf	___fldiv@b^0,c
  3984  000F9E  0E00               	movlw	0
  3985  000FA0  6E0E               	movwf	(___fldiv@b+1)^0,c
  3986  000FA2  0E00               	movlw	0
  3987  000FA4  6E0F               	movwf	(___fldiv@b+2)^0,c
  3988  000FA6  0E00               	movlw	0
  3989  000FA8  6E10               	movwf	(___fldiv@b+3)^0,c
  3990  000FAA  0E00               	movlw	0
  3991  000FAC  6E1D               	movwf	___fldiv@sign^0,c
  3992  000FAE                     l2302:
  3993  000FAE  C01E  F024         	movff	___fldiv@new_exp,___fldiv@bexp
  3994  000FB2  A024               	btfss	___fldiv@bexp^0,0,c
  3995  000FB4  EFDE  F007         	goto	u1871
  3996  000FB8  EFE0  F007         	goto	u1870
  3997  000FBC                     u1871:
  3998  000FBC  EFE3  F007         	goto	l2308
  3999  000FC0                     u1870:
  4000  000FC0  8E0F               	bsf	(___fldiv@b+2)^0,7,c
  4001  000FC2  EFE4  F007         	goto	l2310
  4002  000FC6                     l2308:
  4003  000FC6  9E0F               	bcf	(___fldiv@b+2)^0,7,c
  4004  000FC8                     l2310:
  4005  000FC8  90D8               	bcf	status,0,c
  4006  000FCA  3024               	rrcf	___fldiv@bexp^0,w,c
  4007  000FCC  6E10               	movwf	(___fldiv@b+3)^0,c
  4008  000FCE  EF9A  F006         	goto	l2224
  4009  000FD2                     l730:
  4010  000FD2  0012               	return		;funcret
  4011  000FD4                     __end_of___fldiv:
  4012                           	callstack 0
  4013                           
  4014 ;; *************** function _LCD_Print *****************
  4015 ;; Defined at:
  4016 ;;		line 65 in file "LCD_Lib.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;  LCD_Str         2   14[COMRAM] PTR unsigned char 
  4019 ;;		 -> LCD_number@txt(5), STR_4(4), main@txt(6), STR_2(3), 
  4020 ;;		 -> main@txt2(6), 
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;  i               1   19[COMRAM] unsigned char 
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      void 
  4025 ;; Registers used:
  4026 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4032 ;;      Params:         2       0       0       0       0       0       0       0       0
  4033 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4034 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4035 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4036 ;;Total ram usage:        6 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:    3
  4039 ;; This function calls:
  4040 ;;		_LCD_Write_Nibble
  4041 ;; This function is called by:
  4042 ;;		_main
  4043 ;;		_LCD_number
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           	psect	text17
  4048  001E6E                     __ptext17:
  4049                           	callstack 0
  4050  001E6E                     _LCD_Print:
  4051                           	callstack 27
  4052  001E6E                     
  4053                           ;LCD_Lib.c: 65: void LCD_Print(char* LCD_Str);LCD_Lib.c: 66: {;LCD_Lib.c: 67:   unsigned
      +                           char i = 0;
  4054  001E6E  0E00               	movlw	0
  4055  001E70  6E14               	movwf	LCD_Print@i^0,c
  4056                           
  4057                           ;LCD_Lib.c: 68:   RS = 1;
  4058  001E72  0E01               	movlw	1
  4059  001E74  6E4E               	movwf	_RS^0,c
  4060                           
  4061                           ;LCD_Lib.c: 69:   while(LCD_Str[i] != '\0')
  4062  001E76  EF71  F00F         	goto	l2168
  4063  001E7A                     l2164:
  4064                           
  4065                           ;LCD_Lib.c: 70:   {;LCD_Lib.c: 71:     LCD_Write_Nibble(LCD_Str[i] >> 4);
  4066  001E7A  5014               	movf	LCD_Print@i^0,w,c
  4067  001E7C  240F               	addwf	LCD_Print@LCD_Str^0,w,c
  4068  001E7E  6E11               	movwf	??_LCD_Print^0,c
  4069  001E80  0E00               	movlw	0
  4070  001E82  2010               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  4071  001E84  6E12               	movwf	(??_LCD_Print+1)^0,c
  4072  001E86  C011  FFF6         	movff	??_LCD_Print,tblptrl
  4073  001E8A  C012  FFF7         	movff	??_LCD_Print+1,tblptrh
  4074  001E8E  6AF8               	clrf	tblptru,c
  4075  001E90  0E07               	movlw	(high __ramtop+-1)
  4076  001E92  64F7               	cpfsgt	tblptrh,c
  4077  001E94  D003               	bra	u1597
  4078  001E96  0008               	tblrd		*
  4079  001E98  50F5               	movf	tablat,w,c
  4080  001E9A  D005               	bra	u1590
  4081  001E9C                     u1597:
  4082  001E9C  CFF6 FFE9          	movff	tblptrl,fsr0l
  4083  001EA0  CFF7 FFEA          	movff	tblptrh,fsr0h
  4084  001EA4  50EF               	movf	indf0,w,c
  4085  001EA6                     u1590:
  4086  001EA6  6E13               	movwf	(??_LCD_Print+2)^0,c
  4087  001EA8  3813               	swapf	(??_LCD_Print+2)^0,w,c
  4088  001EAA  0B0F               	andlw	15
  4089  001EAC  EC90  F00F         	call	_LCD_Write_Nibble
  4090                           
  4091                           ;LCD_Lib.c: 72:     LCD_Write_Nibble(LCD_Str[i++] );
  4092  001EB0  5014               	movf	LCD_Print@i^0,w,c
  4093  001EB2  240F               	addwf	LCD_Print@LCD_Str^0,w,c
  4094  001EB4  6E11               	movwf	??_LCD_Print^0,c
  4095  001EB6  0E00               	movlw	0
  4096  001EB8  2010               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  4097  001EBA  6E12               	movwf	(??_LCD_Print+1)^0,c
  4098  001EBC  C011  FFF6         	movff	??_LCD_Print,tblptrl
  4099  001EC0  C012  FFF7         	movff	??_LCD_Print+1,tblptrh
  4100  001EC4  6AF8               	clrf	tblptru,c
  4101  001EC6  0E07               	movlw	(high __ramtop+-1)
  4102  001EC8  64F7               	cpfsgt	tblptrh,c
  4103  001ECA  D003               	bra	u1607
  4104  001ECC  0008               	tblrd		*
  4105  001ECE  50F5               	movf	tablat,w,c
  4106  001ED0  D005               	bra	u1600
  4107  001ED2                     u1607:
  4108  001ED2  CFF6 FFE9          	movff	tblptrl,fsr0l
  4109  001ED6  CFF7 FFEA          	movff	tblptrh,fsr0h
  4110  001EDA  50EF               	movf	indf0,w,c
  4111  001EDC                     u1600:
  4112  001EDC  EC90  F00F         	call	_LCD_Write_Nibble
  4113  001EE0  2A14               	incf	LCD_Print@i^0,f,c
  4114  001EE2                     l2168:
  4115                           
  4116                           ;LCD_Lib.c: 69:   while(LCD_Str[i] != '\0')
  4117  001EE2  5014               	movf	LCD_Print@i^0,w,c
  4118  001EE4  240F               	addwf	LCD_Print@LCD_Str^0,w,c
  4119  001EE6  6E11               	movwf	??_LCD_Print^0,c
  4120  001EE8  0E00               	movlw	0
  4121  001EEA  2010               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  4122  001EEC  6E12               	movwf	(??_LCD_Print+1)^0,c
  4123  001EEE  C011  FFF6         	movff	??_LCD_Print,tblptrl
  4124  001EF2  C012  FFF7         	movff	??_LCD_Print+1,tblptrh
  4125  001EF6  6AF8               	clrf	tblptru,c
  4126  001EF8  0E07               	movlw	(high __ramtop+-1)
  4127  001EFA  64F7               	cpfsgt	tblptrh,c
  4128  001EFC  D003               	bra	u1617
  4129  001EFE  0008               	tblrd		*
  4130  001F00  50F5               	movf	tablat,w,c
  4131  001F02  D005               	bra	u1610
  4132  001F04                     u1617:
  4133  001F04  CFF6 FFE9          	movff	tblptrl,fsr0l
  4134  001F08  CFF7 FFEA          	movff	tblptrh,fsr0h
  4135  001F0C  50EF               	movf	indf0,w,c
  4136  001F0E                     u1610:
  4137  001F0E  0900               	iorlw	0
  4138  001F10  A4D8               	btfss	status,2,c
  4139  001F12  EF8D  F00F         	goto	u1621
  4140  001F16  EF8F  F00F         	goto	u1620
  4141  001F1A                     u1621:
  4142  001F1A  EF3D  F00F         	goto	l2164
  4143  001F1E                     u1620:
  4144  001F1E  0012               	return		;funcret
  4145  001F20                     __end_of_LCD_Print:
  4146                           	callstack 0
  4147                           
  4148 ;; *************** function _LCD_Goto *****************
  4149 ;; Defined at:
  4150 ;;		line 39 in file "LCD_Lib.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;  col             1    wreg     unsigned char 
  4153 ;;  row             1   16[COMRAM] unsigned char 
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;  col             1   19[COMRAM] unsigned char 
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  1    wreg      void 
  4158 ;; Registers used:
  4159 ;;		wreg, status,2, status,0, cstack
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4165 ;;      Params:         1       0       0       0       0       0       0       0       0
  4166 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4167 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4168 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4169 ;;Total ram usage:        4 bytes
  4170 ;; Hardware stack levels used:    1
  4171 ;; Hardware stack levels required when called:    4
  4172 ;; This function calls:
  4173 ;;		_LCD_Cmd
  4174 ;; This function is called by:
  4175 ;;		_main
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text18
  4180  002026                     __ptext18:
  4181                           	callstack 0
  4182  002026                     _LCD_Goto:
  4183                           	callstack 26
  4184                           
  4185                           ;incstack = 0
  4186                           ;LCD_Goto@col stored from wreg
  4187  002026  6E14               	movwf	LCD_Goto@col^0,c
  4188  002028                     
  4189                           ;LCD_Lib.c: 39: void LCD_Goto(unsigned char col, unsigned char row);LCD_Lib.c: 40: {;LCD
      +                          _Lib.c: 41:   switch(row)
  4190  002028  EF2E  F010         	goto	l2156
  4191  00202C                     l2148:
  4192                           
  4193                           ;LCD_Lib.c: 44:       LCD_Cmd(0xC0 + col - 1);
  4194  00202C  5014               	movf	LCD_Goto@col^0,w,c
  4195  00202E  0FBF               	addlw	191
  4196  002030  ECD7  F010         	call	_LCD_Cmd
  4197                           
  4198                           ;LCD_Lib.c: 45:       break;
  4199  002034  EF47  F010         	goto	l130
  4200  002038                     l2150:
  4201                           
  4202                           ;LCD_Lib.c: 47:       LCD_Cmd(0x94 + col - 1);
  4203  002038  5014               	movf	LCD_Goto@col^0,w,c
  4204  00203A  0F93               	addlw	147
  4205  00203C  ECD7  F010         	call	_LCD_Cmd
  4206                           
  4207                           ;LCD_Lib.c: 48:       break;
  4208  002040  EF47  F010         	goto	l130
  4209  002044                     l2152:
  4210                           
  4211                           ;LCD_Lib.c: 50:       LCD_Cmd(0xD4 + col - 1);
  4212  002044  5014               	movf	LCD_Goto@col^0,w,c
  4213  002046  0FD3               	addlw	211
  4214  002048  ECD7  F010         	call	_LCD_Cmd
  4215                           
  4216                           ;LCD_Lib.c: 51:     break;
  4217  00204C  EF47  F010         	goto	l130
  4218  002050                     l2154:
  4219                           
  4220                           ;LCD_Lib.c: 53:       LCD_Cmd(0x80 + col - 1);
  4221  002050  5014               	movf	LCD_Goto@col^0,w,c
  4222  002052  0F7F               	addlw	127
  4223  002054  ECD7  F010         	call	_LCD_Cmd
  4224                           
  4225                           ;LCD_Lib.c: 54:   }
  4226  002058  EF47  F010         	goto	l130
  4227  00205C                     l2156:
  4228  00205C  5011               	movf	LCD_Goto@row^0,w,c
  4229  00205E  6E12               	movwf	??_LCD_Goto^0,c
  4230  002060  6A13               	clrf	(??_LCD_Goto+1)^0,c
  4231                           
  4232                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4233                           ; Switch size 1, requested type "simple"
  4234                           ; Number of cases is 1, Range of values is 0 to 0
  4235                           ; switch strategies available:
  4236                           ; Name         Instructions Cycles
  4237                           ; simple_byte            4     3 (average)
  4238                           ;	Chosen strategy is simple_byte
  4239  002062  5013               	movf	(??_LCD_Goto+1)^0,w,c
  4240  002064  0A00               	xorlw	0	; case 0
  4241  002066  B4D8               	btfsc	status,2,c
  4242  002068  EF38  F010         	goto	l2926
  4243  00206C  EF28  F010         	goto	l2154
  4244  002070                     l2926:
  4245                           
  4246                           ; Switch size 1, requested type "simple"
  4247                           ; Number of cases is 3, Range of values is 2 to 4
  4248                           ; switch strategies available:
  4249                           ; Name         Instructions Cycles
  4250                           ; simple_byte           10     6 (average)
  4251                           ;	Chosen strategy is simple_byte
  4252  002070  5012               	movf	??_LCD_Goto^0,w,c
  4253  002072  0A02               	xorlw	2	; case 2
  4254  002074  B4D8               	btfsc	status,2,c
  4255  002076  EF16  F010         	goto	l2148
  4256  00207A  0A01               	xorlw	1	; case 3
  4257  00207C  B4D8               	btfsc	status,2,c
  4258  00207E  EF1C  F010         	goto	l2150
  4259  002082  0A07               	xorlw	7	; case 4
  4260  002084  B4D8               	btfsc	status,2,c
  4261  002086  EF22  F010         	goto	l2152
  4262  00208A  EF28  F010         	goto	l2154
  4263  00208E                     l130:
  4264  00208E  0012               	return		;funcret
  4265  002090                     __end_of_LCD_Goto:
  4266                           	callstack 0
  4267                           
  4268 ;; *************** function _LCD_Begin *****************
  4269 ;; Defined at:
  4270 ;;		line 76 in file "LCD_Lib.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;		None
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;		None
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      void 
  4277 ;; Registers used:
  4278 ;;		wreg, status,2, status,0, cstack
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4284 ;;      Params:         0       0       0       0       0       0       0       0       0
  4285 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4286 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4287 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4288 ;;Total ram usage:        2 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    4
  4291 ;; This function calls:
  4292 ;;		_LCD_Cmd
  4293 ;; This function is called by:
  4294 ;;		_main
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           	psect	text19
  4299  001BE4                     __ptext19:
  4300                           	callstack 0
  4301  001BE4                     _LCD_Begin:
  4302                           	callstack 26
  4303  001BE4                     
  4304                           ;LCD_Lib.c: 78:   RS = 0;
  4305  001BE4  0E00               	movlw	0
  4306  001BE6  6E4E               	movwf	_RS^0,c
  4307  001BE8                     
  4308                           ;LCD_Lib.c: 80:   PORTDbits.RD0 = 0;
  4309  001BE8  9083               	bcf	131,0,c	;volatile
  4310  001BEA                     
  4311                           ;LCD_Lib.c: 81:   PORTDbits.RD1 = 0;
  4312  001BEA  9283               	bcf	131,1,c	;volatile
  4313  001BEC                     
  4314                           ;LCD_Lib.c: 82:   PORTDbits.RD4 = 0;
  4315  001BEC  9883               	bcf	131,4,c	;volatile
  4316  001BEE                     
  4317                           ;LCD_Lib.c: 83:   PORTDbits.RD5 = 0;
  4318  001BEE  9A83               	bcf	131,5,c	;volatile
  4319  001BF0                     
  4320                           ;LCD_Lib.c: 84:   PORTDbits.RD6 = 0;
  4321  001BF0  9C83               	bcf	131,6,c	;volatile
  4322  001BF2                     
  4323                           ;LCD_Lib.c: 85:   PORTDbits.RD7 = 0;
  4324  001BF2  9E83               	bcf	131,7,c	;volatile
  4325  001BF4                     
  4326                           ;LCD_Lib.c: 86:   TRISDbits.TRISD0 = 0;
  4327  001BF4  9095               	bcf	149,0,c	;volatile
  4328  001BF6                     
  4329                           ;LCD_Lib.c: 87:   TRISDbits.TRISD1 = 0;
  4330  001BF6  9295               	bcf	149,1,c	;volatile
  4331  001BF8                     
  4332                           ;LCD_Lib.c: 88:   TRISDbits.TRISD4 = 0;
  4333  001BF8  9895               	bcf	149,4,c	;volatile
  4334  001BFA                     
  4335                           ;LCD_Lib.c: 89:   TRISDbits.TRISD5 = 0;
  4336  001BFA  9A95               	bcf	149,5,c	;volatile
  4337  001BFC                     
  4338                           ;LCD_Lib.c: 90:   TRISDbits.TRISD6 = 0;
  4339  001BFC  9C95               	bcf	149,6,c	;volatile
  4340  001BFE                     
  4341                           ;LCD_Lib.c: 91:   TRISDbits.TRISD7 = 0;
  4342  001BFE  9E95               	bcf	149,7,c	;volatile
  4343  001C00                     
  4344                           ;LCD_Lib.c: 93:   _delay((unsigned long)((40)*(32000000/4000.0)));
  4345  001C00  0E02               	movlw	2
  4346  001C02  6E12               	movwf	(??_LCD_Begin+1)^0,c
  4347  001C04  0EA0               	movlw	160
  4348  001C06  6E11               	movwf	??_LCD_Begin^0,c
  4349  001C08  0E92               	movlw	146
  4350  001C0A                     u2707:
  4351  001C0A  2EE8               	decfsz	wreg,f,c
  4352  001C0C  D7FE               	bra	u2707
  4353  001C0E  2E11               	decfsz	??_LCD_Begin^0,f,c
  4354  001C10  D7FC               	bra	u2707
  4355  001C12  2E12               	decfsz	(??_LCD_Begin+1)^0,f,c
  4356  001C14  D7FA               	bra	u2707
  4357  001C16  D000               	nop2	
  4358  001C18                     
  4359                           ;LCD_Lib.c: 94:   LCD_Cmd(3);
  4360  001C18  0E03               	movlw	3
  4361  001C1A  ECD7  F010         	call	_LCD_Cmd
  4362  001C1E                     
  4363                           ;LCD_Lib.c: 95:   _delay((unsigned long)((5)*(32000000/4000.0)));
  4364  001C1E  0E34               	movlw	52
  4365  001C20  6E11               	movwf	??_LCD_Begin^0,c
  4366  001C22  0EF2               	movlw	242
  4367  001C24                     u2717:
  4368  001C24  2EE8               	decfsz	wreg,f,c
  4369  001C26  D7FE               	bra	u2717
  4370  001C28  2E11               	decfsz	??_LCD_Begin^0,f,c
  4371  001C2A  D7FC               	bra	u2717
  4372  001C2C                     
  4373                           ;LCD_Lib.c: 96:   LCD_Cmd(3);
  4374  001C2C  0E03               	movlw	3
  4375  001C2E  ECD7  F010         	call	_LCD_Cmd
  4376  001C32                     
  4377                           ;LCD_Lib.c: 97:   _delay((unsigned long)((5)*(32000000/4000.0)));
  4378  001C32  0E34               	movlw	52
  4379  001C34  6E11               	movwf	??_LCD_Begin^0,c
  4380  001C36  0EF2               	movlw	242
  4381  001C38                     u2727:
  4382  001C38  2EE8               	decfsz	wreg,f,c
  4383  001C3A  D7FE               	bra	u2727
  4384  001C3C  2E11               	decfsz	??_LCD_Begin^0,f,c
  4385  001C3E  D7FC               	bra	u2727
  4386  001C40                     
  4387                           ;LCD_Lib.c: 98:   LCD_Cmd(3);
  4388  001C40  0E03               	movlw	3
  4389  001C42  ECD7  F010         	call	_LCD_Cmd
  4390  001C46                     
  4391                           ;LCD_Lib.c: 99:   _delay((unsigned long)((5)*(32000000/4000.0)));
  4392  001C46  0E34               	movlw	52
  4393  001C48  6E11               	movwf	??_LCD_Begin^0,c
  4394  001C4A  0EF2               	movlw	242
  4395  001C4C                     u2737:
  4396  001C4C  2EE8               	decfsz	wreg,f,c
  4397  001C4E  D7FE               	bra	u2737
  4398  001C50  2E11               	decfsz	??_LCD_Begin^0,f,c
  4399  001C52  D7FC               	bra	u2737
  4400  001C54                     
  4401                           ;LCD_Lib.c: 100:   LCD_Cmd(0x02);
  4402  001C54  0E02               	movlw	2
  4403  001C56  ECD7  F010         	call	_LCD_Cmd
  4404  001C5A                     
  4405                           ;LCD_Lib.c: 101:   _delay((unsigned long)((5)*(32000000/4000.0)));
  4406  001C5A  0E34               	movlw	52
  4407  001C5C  6E11               	movwf	??_LCD_Begin^0,c
  4408  001C5E  0EF2               	movlw	242
  4409  001C60                     u2747:
  4410  001C60  2EE8               	decfsz	wreg,f,c
  4411  001C62  D7FE               	bra	u2747
  4412  001C64  2E11               	decfsz	??_LCD_Begin^0,f,c
  4413  001C66  D7FC               	bra	u2747
  4414  001C68                     
  4415                           ;LCD_Lib.c: 102:   LCD_Cmd(0x20 | (2 << 2));
  4416  001C68  0E28               	movlw	40
  4417  001C6A  ECD7  F010         	call	_LCD_Cmd
  4418  001C6E                     
  4419                           ;LCD_Lib.c: 103:   _delay((unsigned long)((50)*(32000000/4000.0)));
  4420  001C6E  0E03               	movlw	3
  4421  001C70  6E12               	movwf	(??_LCD_Begin+1)^0,c
  4422  001C72  0E08               	movlw	8
  4423  001C74  6E11               	movwf	??_LCD_Begin^0,c
  4424  001C76  0E77               	movlw	119
  4425  001C78                     u2757:
  4426  001C78  2EE8               	decfsz	wreg,f,c
  4427  001C7A  D7FE               	bra	u2757
  4428  001C7C  2E11               	decfsz	??_LCD_Begin^0,f,c
  4429  001C7E  D7FC               	bra	u2757
  4430  001C80  2E12               	decfsz	(??_LCD_Begin+1)^0,f,c
  4431  001C82  D7FA               	bra	u2757
  4432  001C84  F000               	nop	
  4433  001C86                     
  4434                           ;LCD_Lib.c: 104:   LCD_Cmd(0x0C);
  4435  001C86  0E0C               	movlw	12
  4436  001C88  ECD7  F010         	call	_LCD_Cmd
  4437  001C8C                     
  4438                           ;LCD_Lib.c: 105:   _delay((unsigned long)((50)*(32000000/4000.0)));
  4439  001C8C  0E03               	movlw	3
  4440  001C8E  6E12               	movwf	(??_LCD_Begin+1)^0,c
  4441  001C90  0E08               	movlw	8
  4442  001C92  6E11               	movwf	??_LCD_Begin^0,c
  4443  001C94  0E77               	movlw	119
  4444  001C96                     u2767:
  4445  001C96  2EE8               	decfsz	wreg,f,c
  4446  001C98  D7FE               	bra	u2767
  4447  001C9A  2E11               	decfsz	??_LCD_Begin^0,f,c
  4448  001C9C  D7FC               	bra	u2767
  4449  001C9E  2E12               	decfsz	(??_LCD_Begin+1)^0,f,c
  4450  001CA0  D7FA               	bra	u2767
  4451  001CA2  F000               	nop	
  4452  001CA4                     
  4453                           ;LCD_Lib.c: 106:   LCD_Cmd(0x01);
  4454  001CA4  0E01               	movlw	1
  4455  001CA6  ECD7  F010         	call	_LCD_Cmd
  4456  001CAA                     
  4457                           ;LCD_Lib.c: 107:   _delay((unsigned long)((50)*(32000000/4000.0)));
  4458  001CAA  0E03               	movlw	3
  4459  001CAC  6E12               	movwf	(??_LCD_Begin+1)^0,c
  4460  001CAE  0E08               	movlw	8
  4461  001CB0  6E11               	movwf	??_LCD_Begin^0,c
  4462  001CB2  0E77               	movlw	119
  4463  001CB4                     u2777:
  4464  001CB4  2EE8               	decfsz	wreg,f,c
  4465  001CB6  D7FE               	bra	u2777
  4466  001CB8  2E11               	decfsz	??_LCD_Begin^0,f,c
  4467  001CBA  D7FC               	bra	u2777
  4468  001CBC  2E12               	decfsz	(??_LCD_Begin+1)^0,f,c
  4469  001CBE  D7FA               	bra	u2777
  4470  001CC0  F000               	nop	
  4471  001CC2                     
  4472                           ;LCD_Lib.c: 108:   LCD_Cmd(0x04 | 0x02);
  4473  001CC2  0E06               	movlw	6
  4474  001CC4  ECD7  F010         	call	_LCD_Cmd
  4475  001CC8                     
  4476                           ;LCD_Lib.c: 109:   _delay((unsigned long)((50)*(32000000/4000.0)));
  4477  001CC8  0E03               	movlw	3
  4478  001CCA  6E12               	movwf	(??_LCD_Begin+1)^0,c
  4479  001CCC  0E08               	movlw	8
  4480  001CCE  6E11               	movwf	??_LCD_Begin^0,c
  4481  001CD0  0E77               	movlw	119
  4482  001CD2                     u2787:
  4483  001CD2  2EE8               	decfsz	wreg,f,c
  4484  001CD4  D7FE               	bra	u2787
  4485  001CD6  2E11               	decfsz	??_LCD_Begin^0,f,c
  4486  001CD8  D7FC               	bra	u2787
  4487  001CDA  2E12               	decfsz	(??_LCD_Begin+1)^0,f,c
  4488  001CDC  D7FA               	bra	u2787
  4489  001CDE  F000               	nop	
  4490  001CE0  0012               	return		;funcret
  4491  001CE2                     __end_of_LCD_Begin:
  4492                           	callstack 0
  4493                           
  4494 ;; *************** function _LCD_Cmd *****************
  4495 ;; Defined at:
  4496 ;;		line 30 in file "LCD_Lib.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  Command         1    wreg     unsigned char 
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;  Command         1   15[COMRAM] unsigned char 
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  1    wreg      void 
  4503 ;; Registers used:
  4504 ;;		wreg, status,2, status,0, cstack
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4510 ;;      Params:         0       0       0       0       0       0       0       0       0
  4511 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4512 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4513 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4514 ;;Total ram usage:        2 bytes
  4515 ;; Hardware stack levels used:    1
  4516 ;; Hardware stack levels required when called:    3
  4517 ;; This function calls:
  4518 ;;		_LCD_Write_Nibble
  4519 ;; This function is called by:
  4520 ;;		_main
  4521 ;;		_LCD_Goto
  4522 ;;		_LCD_Begin
  4523 ;; This function uses a non-reentrant model
  4524 ;;
  4525                           
  4526                           	psect	text20
  4527  0021AE                     __ptext20:
  4528                           	callstack 0
  4529  0021AE                     _LCD_Cmd:
  4530                           	callstack 26
  4531                           
  4532                           ;incstack = 0
  4533                           ;LCD_Cmd@Command stored from wreg
  4534  0021AE  6E10               	movwf	LCD_Cmd@Command^0,c
  4535  0021B0                     
  4536                           ;LCD_Lib.c: 30: void LCD_Cmd(unsigned char Command);LCD_Lib.c: 31: {;LCD_Lib.c: 32:   RS
      +                           = 0;
  4537  0021B0  0E00               	movlw	0
  4538  0021B2  6E4E               	movwf	_RS^0,c
  4539  0021B4                     
  4540                           ;LCD_Lib.c: 33:   LCD_Write_Nibble(Command >> 4);
  4541  0021B4  3810               	swapf	LCD_Cmd@Command^0,w,c
  4542  0021B6  0B0F               	andlw	15
  4543  0021B8  EC90  F00F         	call	_LCD_Write_Nibble
  4544  0021BC                     
  4545                           ;LCD_Lib.c: 34:   LCD_Write_Nibble(Command);
  4546  0021BC  5010               	movf	LCD_Cmd@Command^0,w,c
  4547  0021BE  EC90  F00F         	call	_LCD_Write_Nibble
  4548  0021C2                     
  4549                           ;LCD_Lib.c: 35:   if((Command == 0x01) || (Command == 0x02))
  4550  0021C2  0410               	decf	LCD_Cmd@Command^0,w,c
  4551  0021C4  B4D8               	btfsc	status,2,c
  4552  0021C6  EFE7  F010         	goto	u1561
  4553  0021CA  EFE9  F010         	goto	u1560
  4554  0021CE                     u1561:
  4555  0021CE  EFF2  F010         	goto	l2040
  4556  0021D2                     u1560:
  4557  0021D2  0E02               	movlw	2
  4558  0021D4  1810               	xorwf	LCD_Cmd@Command^0,w,c
  4559  0021D6  A4D8               	btfss	status,2,c
  4560  0021D8  EFF0  F010         	goto	u1571
  4561  0021DC  EFF2  F010         	goto	u1570
  4562  0021E0                     u1571:
  4563  0021E0  EFFA  F010         	goto	l121
  4564  0021E4                     u1570:
  4565  0021E4                     l2040:
  4566                           
  4567                           ;LCD_Lib.c: 36:     _delay((unsigned long)((2)*(32000000/4000.0)));
  4568  0021E4  0E15               	movlw	21
  4569  0021E6  6E0F               	movwf	??_LCD_Cmd^0,c
  4570  0021E8  0EC6               	movlw	198
  4571  0021EA                     u2797:
  4572  0021EA  2EE8               	decfsz	wreg,f,c
  4573  0021EC  D7FE               	bra	u2797
  4574  0021EE  2E0F               	decfsz	??_LCD_Cmd^0,f,c
  4575  0021F0  D7FC               	bra	u2797
  4576  0021F2  D000               	nop2	
  4577  0021F4                     l121:
  4578  0021F4  0012               	return		;funcret
  4579  0021F6                     __end_of_LCD_Cmd:
  4580                           	callstack 0
  4581                           
  4582 ;; *************** function _LCD_Write_Nibble *****************
  4583 ;; Defined at:
  4584 ;;		line 13 in file "LCD_Lib.c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;  n               1    wreg     unsigned char 
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;  n               1   13[COMRAM] unsigned char 
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  1    wreg      void 
  4591 ;; Registers used:
  4592 ;;		wreg, status,2, status,0
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4598 ;;      Params:         0       0       0       0       0       0       0       0       0
  4599 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4600 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4601 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4602 ;;Total ram usage:        2 bytes
  4603 ;; Hardware stack levels used:    1
  4604 ;; Hardware stack levels required when called:    2
  4605 ;; This function calls:
  4606 ;;		Nothing
  4607 ;; This function is called by:
  4608 ;;		_LCD_Cmd
  4609 ;;		_LCD_Print
  4610 ;;		_LCD_PutC
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           	psect	text21
  4615  001F20                     __ptext21:
  4616                           	callstack 0
  4617  001F20                     _LCD_Write_Nibble:
  4618                           	callstack 27
  4619                           
  4620                           ;incstack = 0
  4621                           ;LCD_Write_Nibble@n stored from wreg
  4622  001F20  6E0E               	movwf	LCD_Write_Nibble@n^0,c
  4623  001F22                     
  4624                           ;LCD_Lib.c: 13: void LCD_Write_Nibble(unsigned char n);LCD_Lib.c: 14: {;LCD_Lib.c: 15:  
      +                           PORTDbits.RD0 = RS;
  4625  001F22  B04E               	btfsc	_RS^0,0,c
  4626  001F24  D002               	bra	u1515
  4627  001F26  9083               	bcf	131,0,c	;volatile
  4628  001F28  D001               	bra	u1516
  4629  001F2A                     u1515:
  4630  001F2A  8083               	bsf	131,0,c	;volatile
  4631  001F2C                     u1516:
  4632  001F2C                     
  4633                           ;LCD_Lib.c: 16:   PORTDbits.RD4 = n & 0x01;
  4634  001F2C  C00E  F00D         	movff	LCD_Write_Nibble@n,??_LCD_Write_Nibble
  4635  001F30  0E01               	movlw	1
  4636  001F32  160D               	andwf	??_LCD_Write_Nibble^0,f,c
  4637  001F34  3A0D               	swapf	??_LCD_Write_Nibble^0,f,c
  4638  001F36  5083               	movf	131,w,c	;volatile
  4639  001F38  180D               	xorwf	??_LCD_Write_Nibble^0,w,c
  4640  001F3A  0BEF               	andlw	-17
  4641  001F3C  180D               	xorwf	??_LCD_Write_Nibble^0,w,c
  4642  001F3E  6E83               	movwf	131,c	;volatile
  4643                           
  4644                           ;LCD_Lib.c: 17:   PORTDbits.RD5 = (n >> 1) & 0x01;
  4645  001F40  C00E  F00D         	movff	LCD_Write_Nibble@n,??_LCD_Write_Nibble
  4646  001F44  90D8               	bcf	status,0,c
  4647  001F46  320D               	rrcf	??_LCD_Write_Nibble^0,f,c
  4648  001F48  0E01               	movlw	1
  4649  001F4A  160D               	andwf	??_LCD_Write_Nibble^0,f,c
  4650  001F4C  3A0D               	swapf	??_LCD_Write_Nibble^0,f,c
  4651  001F4E  460D               	rlncf	??_LCD_Write_Nibble^0,f,c
  4652  001F50  5083               	movf	131,w,c	;volatile
  4653  001F52  180D               	xorwf	??_LCD_Write_Nibble^0,w,c
  4654  001F54  0BDF               	andlw	-33
  4655  001F56  180D               	xorwf	??_LCD_Write_Nibble^0,w,c
  4656  001F58  6E83               	movwf	131,c	;volatile
  4657                           
  4658                           ;LCD_Lib.c: 18:   PORTDbits.RD6 = (n >> 2) & 0x01;
  4659  001F5A  C00E  F00D         	movff	LCD_Write_Nibble@n,??_LCD_Write_Nibble
  4660  001F5E  90D8               	bcf	status,0,c
  4661  001F60  320D               	rrcf	??_LCD_Write_Nibble^0,f,c
  4662  001F62  90D8               	bcf	status,0,c
  4663  001F64  320D               	rrcf	??_LCD_Write_Nibble^0,f,c
  4664  001F66  0E01               	movlw	1
  4665  001F68  160D               	andwf	??_LCD_Write_Nibble^0,f,c
  4666  001F6A  3A0D               	swapf	??_LCD_Write_Nibble^0,f,c
  4667  001F6C  460D               	rlncf	??_LCD_Write_Nibble^0,f,c
  4668  001F6E  460D               	rlncf	??_LCD_Write_Nibble^0,f,c
  4669  001F70  5083               	movf	131,w,c	;volatile
  4670  001F72  180D               	xorwf	??_LCD_Write_Nibble^0,w,c
  4671  001F74  0BBF               	andlw	-65
  4672  001F76  180D               	xorwf	??_LCD_Write_Nibble^0,w,c
  4673  001F78  6E83               	movwf	131,c	;volatile
  4674                           
  4675                           ;LCD_Lib.c: 19:   PORTDbits.RD7 = (n >> 3) & 0x01;
  4676  001F7A  C00E  F00D         	movff	LCD_Write_Nibble@n,??_LCD_Write_Nibble
  4677  001F7E  90D8               	bcf	status,0,c
  4678  001F80  320D               	rrcf	??_LCD_Write_Nibble^0,f,c
  4679  001F82  90D8               	bcf	status,0,c
  4680  001F84  320D               	rrcf	??_LCD_Write_Nibble^0,f,c
  4681  001F86  90D8               	bcf	status,0,c
  4682  001F88  320D               	rrcf	??_LCD_Write_Nibble^0,f,c
  4683  001F8A  0E01               	movlw	1
  4684  001F8C  160D               	andwf	??_LCD_Write_Nibble^0,f,c
  4685  001F8E  320D               	rrcf	??_LCD_Write_Nibble^0,f,c
  4686  001F90  320D               	rrcf	??_LCD_Write_Nibble^0,f,c
  4687  001F92  5083               	movf	131,w,c	;volatile
  4688  001F94  180D               	xorwf	??_LCD_Write_Nibble^0,w,c
  4689  001F96  0B7F               	andlw	-129
  4690  001F98  180D               	xorwf	??_LCD_Write_Nibble^0,w,c
  4691  001F9A  6E83               	movwf	131,c	;volatile
  4692  001F9C                     
  4693                           ;LCD_Lib.c: 22:   PORTDbits.RD1 = 0;
  4694  001F9C  9283               	bcf	131,1,c	;volatile
  4695  001F9E                     
  4696                           ;LCD_Lib.c: 23:   _delay((unsigned long)((1)*(32000000/4000000.0)));
  4697  001F9E  D000               	nop2		;2 cycle nop
  4698  001FA0  D000               	nop2		;2 cycle nop
  4699  001FA2  D000               	nop2		;2 cycle nop
  4700  001FA4  D000               	nop2		;2 cycle nop
  4701  001FA6                     
  4702                           ;LCD_Lib.c: 24:   PORTDbits.RD1 = 1;
  4703  001FA6  8283               	bsf	131,1,c	;volatile
  4704  001FA8                     
  4705                           ;LCD_Lib.c: 25:   _delay((unsigned long)((1)*(32000000/4000000.0)));
  4706  001FA8  D000               	nop2		;2 cycle nop
  4707  001FAA  D000               	nop2		;2 cycle nop
  4708  001FAC  D000               	nop2		;2 cycle nop
  4709  001FAE  D000               	nop2		;2 cycle nop
  4710  001FB0                     
  4711                           ;LCD_Lib.c: 26:   PORTDbits.RD1 = 0;
  4712  001FB0  9283               	bcf	131,1,c	;volatile
  4713  001FB2                     
  4714                           ;LCD_Lib.c: 27:   _delay((unsigned long)((100)*(32000000/4000000.0)));
  4715  001FB2  0EA0               	movlw	160
  4716  001FB4                     u2807:
  4717  001FB4  D000               	nop2	
  4718  001FB6  2EE8               	decfsz	wreg,f,c
  4719  001FB8  D7FD               	bra	u2807
  4720  001FBA  0012               	return		;funcret
  4721  001FBC                     __end_of_LCD_Write_Nibble:
  4722                           	callstack 0
  4723                           
  4724 ;; *************** function _InitTimer0 *****************
  4725 ;; Defined at:
  4726 ;;		line 33 in file "functions_1.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;		None
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;		None
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  1    wreg      void 
  4733 ;; Registers used:
  4734 ;;		wreg, status,2
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4740 ;;      Params:         0       0       0       0       0       0       0       0       0
  4741 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4742 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4743 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4744 ;;Total ram usage:        0 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; Hardware stack levels required when called:    2
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_main
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754                           	psect	text22
  4755  002300                     __ptext22:
  4756                           	callstack 0
  4757  002300                     _InitTimer0:
  4758                           	callstack 28
  4759  002300                     
  4760                           ;functions_1.c: 35:     TMR0ON = 0;
  4761  002300  9ED5               	bcf	4053,7,c	;volatile
  4762                           
  4763                           ;functions_1.c: 36:     T08BIT = 0;
  4764  002302  9CD5               	bcf	4053,6,c	;volatile
  4765                           
  4766                           ;functions_1.c: 37:     T0CS = 0;
  4767  002304  9AD5               	bcf	4053,5,c	;volatile
  4768                           
  4769                           ;functions_1.c: 38:     T0SE = 0;
  4770  002306  98D5               	bcf	4053,4,c	;volatile
  4771                           
  4772                           ;functions_1.c: 39:     PSA = 0;
  4773  002308  96D5               	bcf	4053,3,c	;volatile
  4774                           
  4775                           ;functions_1.c: 40:     T0CONbits.T0PS0 = 0;
  4776  00230A  90D5               	bcf	213,0,c	;volatile
  4777                           
  4778                           ;functions_1.c: 41:     T0CONbits.T0PS1 = 1;
  4779  00230C  82D5               	bsf	213,1,c	;volatile
  4780                           
  4781                           ;functions_1.c: 42:     T0CONbits.T0PS2 = 0;
  4782  00230E  94D5               	bcf	213,2,c	;volatile
  4783  002310                     
  4784                           ;functions_1.c: 43:     TMR0 = 0;
  4785  002310  0E00               	movlw	0
  4786  002312  6ED7               	movwf	215,c	;volatile
  4787  002314  0E00               	movlw	0
  4788  002316  6ED6               	movwf	214,c	;volatile
  4789  002318                     
  4790                           ;functions_1.c: 44:     TMR0ON = 1;
  4791  002318  8ED5               	bsf	4053,7,c	;volatile
  4792  00231A  0012               	return		;funcret
  4793  00231C                     __end_of_InitTimer0:
  4794                           	callstack 0
  4795                           
  4796 ;; *************** function _InitConfig *****************
  4797 ;; Defined at:
  4798 ;;		line 12 in file "functions_1.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;		None
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		wreg, status,2
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4812 ;;      Params:         0       0       0       0       0       0       0       0       0
  4813 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4815 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4816 ;;Total ram usage:        0 bytes
  4817 ;; Hardware stack levels used:    1
  4818 ;; Hardware stack levels required when called:    2
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_main
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text23
  4827  0022B0                     __ptext23:
  4828                           	callstack 0
  4829  0022B0                     _InitConfig:
  4830                           	callstack 28
  4831  0022B0                     
  4832                           ;functions_1.c: 14:     TRISA = 0xFF;
  4833  0022B0  6892               	setf	146,c	;volatile
  4834                           
  4835                           ;functions_1.c: 15:     TRISB = 0xFF;
  4836  0022B2  6893               	setf	147,c	;volatile
  4837                           
  4838                           ;functions_1.c: 16:     PORTBbits.RB0 = 0;
  4839  0022B4  9081               	bcf	129,0,c	;volatile
  4840  0022B6                     
  4841                           ;functions_1.c: 17:     TRISD = 0x00;
  4842  0022B6  0E00               	movlw	0
  4843  0022B8  6E95               	movwf	149,c	;volatile
  4844                           
  4845                           ;functions_1.c: 18:     PORTD = 0x00;
  4846  0022BA  0E00               	movlw	0
  4847  0022BC  6E83               	movwf	131,c	;volatile
  4848                           
  4849                           ;functions_1.c: 20:     ADCON0 = 0x01;
  4850  0022BE  0E01               	movlw	1
  4851  0022C0  6EC2               	movwf	194,c	;volatile
  4852                           
  4853                           ;functions_1.c: 21:     ADCON1 = 0x0E;
  4854  0022C2  0E0E               	movlw	14
  4855  0022C4  6EC1               	movwf	193,c	;volatile
  4856                           
  4857                           ;functions_1.c: 22:     ADCON2 = 0x80;
  4858  0022C6  0E80               	movlw	128
  4859  0022C8  6EC0               	movwf	192,c	;volatile
  4860  0022CA                     
  4861                           ;functions_1.c: 25:     GIE = 1;
  4862  0022CA  8EF2               	bsf	4082,7,c	;volatile
  4863  0022CC                     
  4864                           ;functions_1.c: 26:     PEIE = 1;
  4865  0022CC  8CF2               	bsf	4082,6,c	;volatile
  4866  0022CE                     
  4867                           ;functions_1.c: 27:     TMR0IE = 0;
  4868  0022CE  9AF2               	bcf	4082,5,c	;volatile
  4869  0022D0                     
  4870                           ;functions_1.c: 28:     INT0IE = 1;
  4871  0022D0  88F2               	bsf	4082,4,c	;volatile
  4872  0022D2                     
  4873                           ;functions_1.c: 29:     TMR0IF = 0;
  4874  0022D2  94F2               	bcf	4082,2,c	;volatile
  4875  0022D4                     
  4876                           ;functions_1.c: 30:     INT0IF = 0;
  4877  0022D4  92F2               	bcf	4082,1,c	;volatile
  4878  0022D6                     
  4879                           ;functions_1.c: 31:     INTEDG0 = 1;
  4880  0022D6  8CF1               	bsf	4081,6,c	;volatile
  4881  0022D8  0012               	return		;funcret
  4882  0022DA                     __end_of_InitConfig:
  4883                           	callstack 0
  4884                           
  4885 ;; *************** function _my_isr_routine *****************
  4886 ;; Defined at:
  4887 ;;		line 22 in file "main_1.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;		None
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;		None
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  1    wreg      void 
  4894 ;; Registers used:
  4895 ;;		wreg, status,2, status,0, cstack
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4901 ;;      Params:         0       0       0       0       0       0       0       0       0
  4902 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4903 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4904 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4905 ;;Total ram usage:        0 bytes
  4906 ;; Hardware stack levels used:    1
  4907 ;; Hardware stack levels required when called:    1
  4908 ;; This function calls:
  4909 ;;		i2___lmul
  4910 ;; This function is called by:
  4911 ;;		Interrupt level 2
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           	psect	intcode
  4916  000008                     __pintcode:
  4917                           	callstack 0
  4918  000008                     _my_isr_routine:
  4919                           	callstack 21
  4920                           
  4921                           ;incstack = 0
  4922  000008  8253               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4923  00000A  ED71  F00D         	call	int_func,f	;refresh shadow registers
  4924                           
  4925                           	psect	intcode_body
  4926  001AE2                     __pintcode_body:
  4927                           	callstack 21
  4928  001AE2                     int_func:
  4929                           	callstack 21
  4930  001AE2  0006               	pop		; remove dummy address from shadow register refresh
  4931  001AE4                     
  4932                           ;main_1.c: 24:     if(INT0IF)
  4933  001AE4  A2F2               	btfss	4082,1,c	;volatile
  4934  001AE6  EF77  F00D         	goto	i2u219_41
  4935  001AEA  EF79  F00D         	goto	i2u219_40
  4936  001AEE                     i2u219_41:
  4937  001AEE  EFF0  F00D         	goto	i2l96
  4938  001AF2                     i2u219_40:
  4939  001AF2                     
  4940                           ;main_1.c: 25:     {;main_1.c: 26:         if(auxx == 0)
  4941  001AF2  0100               	movlb	0	; () banked
  4942  001AF4  51A8               	movf	_auxx& (0+255),w,b
  4943  001AF6  11A9               	iorwf	(_auxx+1)& (0+255),w,b
  4944  001AF8  A4D8               	btfss	status,2,c
  4945  001AFA  EF81  F00D         	goto	i2u220_41
  4946  001AFE  EF83  F00D         	goto	i2u220_40
  4947  001B02                     i2u220_41:
  4948  001B02  EFE4  F00D         	goto	i2l2530
  4949  001B06                     i2u220_40:
  4950  001B06                     
  4951                           ; BSR set to: 0
  4952                           ;main_1.c: 27:         {;main_1.c: 28:             descida = TMR0;
  4953  001B06  CFD6 F09E          	movff	4054,_descida	;volatile
  4954  001B0A  CFD7 F09F          	movff	4055,_descida+1	;volatile
  4955  001B0E  6BA0               	clrf	(_descida+2)& (0+255),b
  4956  001B10  6BA1               	clrf	(_descida+3)& (0+255),b
  4957  001B12                     
  4958                           ; BSR set to: 0
  4959                           ;main_1.c: 29:             TMR0 = 0;
  4960  001B12  0E00               	movlw	0
  4961  001B14  6ED7               	movwf	215,c	;volatile
  4962  001B16  0E00               	movlw	0
  4963  001B18  6ED6               	movwf	214,c	;volatile
  4964  001B1A                     
  4965                           ; BSR set to: 0
  4966                           ;main_1.c: 30:             temp = descida - subida;
  4967  001B1A  5046               	movf	_subida^0,w,c
  4968  001B1C  5D9E               	subwf	_descida& (0+255),w,b
  4969  001B1E  6E4F               	movwf	_temp^0,c
  4970  001B20  5047               	movf	(_subida+1)^0,w,c
  4971  001B22  599F               	subwfb	(_descida+1)& (0+255),w,b
  4972  001B24  6E50               	movwf	(_temp+1)^0,c
  4973  001B26  5048               	movf	(_subida+2)^0,w,c
  4974  001B28  59A0               	subwfb	(_descida+2)& (0+255),w,b
  4975  001B2A  6E51               	movwf	(_temp+2)^0,c
  4976  001B2C  5049               	movf	(_subida+3)^0,w,c
  4977  001B2E  59A1               	subwfb	(_descida+3)& (0+255),w,b
  4978  001B30  6E52               	movwf	(_temp+3)^0,c
  4979  001B32                     
  4980                           ; BSR set to: 0
  4981                           ;main_1.c: 32:             if(temp < (subida*3) && temp > 165)
  4982  001B32  C046  F001         	movff	_subida,i2___lmul@multiplier
  4983  001B36  C047  F002         	movff	_subida+1,i2___lmul@multiplier+1
  4984  001B3A  C048  F003         	movff	_subida+2,i2___lmul@multiplier+2
  4985  001B3E  C049  F004         	movff	_subida+3,i2___lmul@multiplier+3
  4986  001B42  0E03               	movlw	3
  4987  001B44  6E05               	movwf	i2___lmul@multiplicand^0,c
  4988  001B46  0E00               	movlw	0
  4989  001B48  6E06               	movwf	(i2___lmul@multiplicand+1)^0,c
  4990  001B4A  0E00               	movlw	0
  4991  001B4C  6E07               	movwf	(i2___lmul@multiplicand+2)^0,c
  4992  001B4E  0E00               	movlw	0
  4993  001B50  6E08               	movwf	(i2___lmul@multiplicand+3)^0,c
  4994  001B52  EC48  F010         	call	i2___lmul	;wreg free
  4995  001B56  5001               	movf	?i2___lmul^0,w,c
  4996  001B58  5C4F               	subwf	_temp^0,w,c
  4997  001B5A  5002               	movf	(?i2___lmul+1)^0,w,c
  4998  001B5C  5850               	subwfb	(_temp+1)^0,w,c
  4999  001B5E  5003               	movf	(?i2___lmul+2)^0,w,c
  5000  001B60  5851               	subwfb	(_temp+2)^0,w,c
  5001  001B62  5004               	movf	(?i2___lmul+3)^0,w,c
  5002  001B64  5852               	subwfb	(_temp+3)^0,w,c
  5003  001B66  B0D8               	btfsc	status,0,c
  5004  001B68  EFB8  F00D         	goto	i2u221_41
  5005  001B6C  EFBA  F00D         	goto	i2u221_40
  5006  001B70                     i2u221_41:
  5007  001B70  EFD1  F00D         	goto	i2l2520
  5008  001B74                     i2u221_40:
  5009  001B74  5052               	movf	(_temp+3)^0,w,c
  5010  001B76  1051               	iorwf	(_temp+2)^0,w,c
  5011  001B78  1050               	iorwf	(_temp+1)^0,w,c
  5012  001B7A  E109               	bnz	i2u222_40
  5013  001B7C  0EA6               	movlw	166
  5014  001B7E  5C4F               	subwf	_temp^0,w,c
  5015  001B80  A0D8               	btfss	status,0,c
  5016  001B82  EFC5  F00D         	goto	i2u222_41
  5017  001B86  EFC7  F00D         	goto	i2u222_40
  5018  001B8A                     i2u222_41:
  5019  001B8A  EFD1  F00D         	goto	i2l2520
  5020  001B8E                     i2u222_40:
  5021  001B8E                     
  5022                           ;main_1.c: 33:             {;main_1.c: 34:                 temp += subida;
  5023  001B8E  5046               	movf	_subida^0,w,c
  5024  001B90  264F               	addwf	_temp^0,f,c
  5025  001B92  5047               	movf	(_subida+1)^0,w,c
  5026  001B94  2250               	addwfc	(_temp+1)^0,f,c
  5027  001B96  5048               	movf	(_subida+2)^0,w,c
  5028  001B98  2251               	addwfc	(_temp+2)^0,f,c
  5029  001B9A  5049               	movf	(_subida+3)^0,w,c
  5030  001B9C  2252               	addwfc	(_temp+3)^0,f,c
  5031                           
  5032                           ;main_1.c: 35:             }
  5033  001B9E  EFDD  F00D         	goto	i2l2524
  5034  001BA2                     i2l2520:
  5035                           
  5036                           ;main_1.c: 37:             {;main_1.c: 38:                 temp = subida*2;
  5037  001BA2  90D8               	bcf	status,0,c
  5038  001BA4  3446               	rlcf	_subida^0,w,c
  5039  001BA6  6E4F               	movwf	_temp^0,c
  5040  001BA8  3447               	rlcf	(_subida+1)^0,w,c
  5041  001BAA  6E50               	movwf	(_temp+1)^0,c
  5042  001BAC  3448               	rlcf	(_subida+2)^0,w,c
  5043  001BAE  6E51               	movwf	(_temp+2)^0,c
  5044  001BB0  3449               	rlcf	(_subida+3)^0,w,c
  5045  001BB2  6E52               	movwf	(_temp+3)^0,c
  5046  001BB4                     
  5047                           ;main_1.c: 39:                 falha ++;
  5048  001BB4  0100               	movlb	0	; () banked
  5049  001BB6  4BA6               	infsnz	_falha& (0+255),f,b
  5050  001BB8  2BA7               	incf	(_falha+1)& (0+255),f,b
  5051  001BBA                     i2l2524:
  5052                           
  5053                           ;main_1.c: 41:             INT0IF = 0;
  5054  001BBA  92F2               	bcf	4082,1,c	;volatile
  5055  001BBC                     
  5056                           ;main_1.c: 42:             INTEDG0 = 0;
  5057  001BBC  9CF1               	bcf	4081,6,c	;volatile
  5058  001BBE                     
  5059                           ;main_1.c: 43:             auxx ++;
  5060  001BBE  0100               	movlb	0	; () banked
  5061  001BC0  4BA8               	infsnz	_auxx& (0+255),f,b
  5062  001BC2  2BA9               	incf	(_auxx+1)& (0+255),f,b
  5063                           
  5064                           ;main_1.c: 44:         }
  5065  001BC4  EFF0  F00D         	goto	i2l96
  5066  001BC8                     i2l2530:
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;main_1.c: 46:         {;main_1.c: 47:             subida = TMR0;
  5070  001BC8  CFD6 F046          	movff	4054,_subida	;volatile
  5071  001BCC  CFD7 F047          	movff	4055,_subida+1	;volatile
  5072  001BD0  6A48               	clrf	(_subida+2)^0,c
  5073  001BD2  6A49               	clrf	(_subida+3)^0,c
  5074  001BD4                     
  5075                           ; BSR set to: 0
  5076                           ;main_1.c: 48:             INT0IF = 0;
  5077  001BD4  92F2               	bcf	4082,1,c	;volatile
  5078  001BD6                     
  5079                           ; BSR set to: 0
  5080                           ;main_1.c: 49:             INTEDG0 = 1;
  5081  001BD6  8CF1               	bsf	4081,6,c	;volatile
  5082  001BD8                     
  5083                           ; BSR set to: 0
  5084                           ;main_1.c: 50:             auxx = 0;
  5085  001BD8  0E00               	movlw	0
  5086  001BDA  6FA9               	movwf	(_auxx+1)& (0+255),b
  5087  001BDC  0E00               	movlw	0
  5088  001BDE  6FA8               	movwf	_auxx& (0+255),b
  5089  001BE0                     i2l96:
  5090  001BE0  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5091  001BE2  0011               	retfie		f
  5092  001BE4                     __end_of_my_isr_routine:
  5093                           	callstack 0
  5094                           
  5095 ;; *************** function i2___lmul *****************
  5096 ;; Defined at:
  5097 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul32.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;  multiplier      4    0[COMRAM] unsigned long 
  5100 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;  product         4    8[COMRAM] unsigned long 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  4    0[COMRAM] unsigned long 
  5105 ;; Registers used:
  5106 ;;		wreg, status,2, status,0
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5112 ;;      Params:         8       0       0       0       0       0       0       0       0
  5113 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5114 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5115 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5116 ;;Total ram usage:       12 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; This function calls:
  5119 ;;		Nothing
  5120 ;; This function is called by:
  5121 ;;		_my_isr_routine
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           	psect	text25
  5126  002090                     __ptext25:
  5127                           	callstack 0
  5128  002090                     i2___lmul:
  5129                           	callstack 21
  5130  002090  0E00               	movlw	0
  5131  002092  6E09               	movwf	i2___lmul@product^0,c
  5132  002094  0E00               	movlw	0
  5133  002096  6E0A               	movwf	(i2___lmul@product+1)^0,c
  5134  002098  0E00               	movlw	0
  5135  00209A  6E0B               	movwf	(i2___lmul@product+2)^0,c
  5136  00209C  0E00               	movlw	0
  5137  00209E  6E0C               	movwf	(i2___lmul@product+3)^0,c
  5138  0020A0                     i2l2496:
  5139  0020A0  A001               	btfss	i2___lmul@multiplier^0,0,c
  5140  0020A2  EF55  F010         	goto	i2u217_41
  5141  0020A6  EF57  F010         	goto	i2u217_40
  5142  0020AA                     i2u217_41:
  5143  0020AA  EF5F  F010         	goto	i2l2500
  5144  0020AE                     i2u217_40:
  5145  0020AE  5005               	movf	i2___lmul@multiplicand^0,w,c
  5146  0020B0  2609               	addwf	i2___lmul@product^0,f,c
  5147  0020B2  5006               	movf	(i2___lmul@multiplicand+1)^0,w,c
  5148  0020B4  220A               	addwfc	(i2___lmul@product+1)^0,f,c
  5149  0020B6  5007               	movf	(i2___lmul@multiplicand+2)^0,w,c
  5150  0020B8  220B               	addwfc	(i2___lmul@product+2)^0,f,c
  5151  0020BA  5008               	movf	(i2___lmul@multiplicand+3)^0,w,c
  5152  0020BC  220C               	addwfc	(i2___lmul@product+3)^0,f,c
  5153  0020BE                     i2l2500:
  5154  0020BE  90D8               	bcf	status,0,c
  5155  0020C0  3605               	rlcf	i2___lmul@multiplicand^0,f,c
  5156  0020C2  3606               	rlcf	(i2___lmul@multiplicand+1)^0,f,c
  5157  0020C4  3607               	rlcf	(i2___lmul@multiplicand+2)^0,f,c
  5158  0020C6  3608               	rlcf	(i2___lmul@multiplicand+3)^0,f,c
  5159  0020C8  90D8               	bcf	status,0,c
  5160  0020CA  3204               	rrcf	(i2___lmul@multiplier+3)^0,f,c
  5161  0020CC  3203               	rrcf	(i2___lmul@multiplier+2)^0,f,c
  5162  0020CE  3202               	rrcf	(i2___lmul@multiplier+1)^0,f,c
  5163  0020D0  3201               	rrcf	i2___lmul@multiplier^0,f,c
  5164  0020D2  5001               	movf	i2___lmul@multiplier^0,w,c
  5165  0020D4  1002               	iorwf	(i2___lmul@multiplier+1)^0,w,c
  5166  0020D6  1003               	iorwf	(i2___lmul@multiplier+2)^0,w,c
  5167  0020D8  1004               	iorwf	(i2___lmul@multiplier+3)^0,w,c
  5168  0020DA  A4D8               	btfss	status,2,c
  5169  0020DC  EF72  F010         	goto	i2u218_41
  5170  0020E0  EF74  F010         	goto	i2u218_40
  5171  0020E4                     i2u218_41:
  5172  0020E4  EF50  F010         	goto	i2l2496
  5173  0020E8                     i2u218_40:
  5174  0020E8  C009  F001         	movff	i2___lmul@product,?i2___lmul
  5175  0020EC  C00A  F002         	movff	i2___lmul@product+1,?i2___lmul+1
  5176  0020F0  C00B  F003         	movff	i2___lmul@product+2,?i2___lmul+2
  5177  0020F4  C00C  F004         	movff	i2___lmul@product+3,?i2___lmul+3
  5178  0020F8  0012               	return		;funcret
  5179  0020FA                     __end_ofi2___lmul:
  5180                           	callstack 0
  5181                           
  5182                           	psect	rparam
  5183  0000                     
  5184                           	psect	temp
  5185  000053                     btemp:
  5186                           	callstack 0
  5187  000053                     	ds	1
  5188  0000                     int$flags	set	btemp
  5189  0000                     wtemp8	set	btemp+1
  5190  0000                     ttemp5	set	btemp+1
  5191  0000                     ttemp6	set	btemp+4
  5192  0000                     ttemp7	set	btemp+8
  5193                           
  5194                           	psect	idloc
  5195                           
  5196                           ;Config register IDLOC0 @ 0x200000
  5197                           ;	unspecified, using default values
  5198  200000                     	org	2097152
  5199  200000  FF                 	db	255
  5200                           
  5201                           ;Config register IDLOC1 @ 0x200001
  5202                           ;	unspecified, using default values
  5203  200001                     	org	2097153
  5204  200001  FF                 	db	255
  5205                           
  5206                           ;Config register IDLOC2 @ 0x200002
  5207                           ;	unspecified, using default values
  5208  200002                     	org	2097154
  5209  200002  FF                 	db	255
  5210                           
  5211                           ;Config register IDLOC3 @ 0x200003
  5212                           ;	unspecified, using default values
  5213  200003                     	org	2097155
  5214  200003  FF                 	db	255
  5215                           
  5216                           ;Config register IDLOC4 @ 0x200004
  5217                           ;	unspecified, using default values
  5218  200004                     	org	2097156
  5219  200004  FF                 	db	255
  5220                           
  5221                           ;Config register IDLOC5 @ 0x200005
  5222                           ;	unspecified, using default values
  5223  200005                     	org	2097157
  5224  200005  FF                 	db	255
  5225                           
  5226                           ;Config register IDLOC6 @ 0x200006
  5227                           ;	unspecified, using default values
  5228  200006                     	org	2097158
  5229  200006  FF                 	db	255
  5230                           
  5231                           ;Config register IDLOC7 @ 0x200007
  5232                           ;	unspecified, using default values
  5233  200007                     	org	2097159
  5234  200007  FF                 	db	255
  5235                           
  5236                           	psect	config
  5237                           
  5238                           ;Config register CONFIG1L @ 0x300000
  5239                           ;	PLL Prescaler Selection bits
  5240                           ;	PLLDIV = 4, Divide by 4 (16 MHz oscillator input)
  5241                           ;	System Clock Postscaler Selection bits
  5242                           ;	CPUDIV = OSC2_PLL3, [Primary Oscillator Src: /2][96 MHz PLL Src: /3]
  5243                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5244                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  5245  300000                     	org	3145728
  5246  300000  0B                 	db	11
  5247                           
  5248                           ;Config register CONFIG1H @ 0x300001
  5249                           ;	Oscillator Selection bits
  5250                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  5251                           ;	Fail-Safe Clock Monitor Enable bit
  5252                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5253                           ;	Internal/External Oscillator Switchover bit
  5254                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5255  300001                     	org	3145729
  5256  300001  0E                 	db	14
  5257                           
  5258                           ;Config register CONFIG2L @ 0x300002
  5259                           ;	Power-up Timer Enable bit
  5260                           ;	PWRT = OFF, PWRT disabled
  5261                           ;	Brown-out Reset Enable bits
  5262                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  5263                           ;	Brown-out Reset Voltage bits
  5264                           ;	BORV = 3, Minimum setting 2.05V
  5265                           ;	USB Voltage Regulator Enable bit
  5266                           ;	VREGEN = OFF, USB voltage regulator disabled
  5267  300002                     	org	3145730
  5268  300002  19                 	db	25
  5269                           
  5270                           ;Config register CONFIG2H @ 0x300003
  5271                           ;	Watchdog Timer Enable bit
  5272                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5273                           ;	Watchdog Timer Postscale Select bits
  5274                           ;	WDTPS = 32768, 1:32768
  5275  300003                     	org	3145731
  5276  300003  1E                 	db	30
  5277                           
  5278                           ; Padding undefined space
  5279  300004                     	org	3145732
  5280  300004  FF                 	db	255
  5281                           
  5282                           ;Config register CONFIG3H @ 0x300005
  5283                           ;	CCP2 MUX bit
  5284                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  5285                           ;	PORTB A/D Enable bit
  5286                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5287                           ;	Low-Power Timer 1 Oscillator Enable bit
  5288                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5289                           ;	MCLR Pin Enable bit
  5290                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  5291  300005                     	org	3145733
  5292  300005  01                 	db	1
  5293                           
  5294                           ;Config register CONFIG4L @ 0x300006
  5295                           ;	Stack Full/Underflow Reset Enable bit
  5296                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5297                           ;	Single-Supply ICSP Enable bit
  5298                           ;	LVP = ON, Single-Supply ICSP enabled
  5299                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5300                           ;	ICPRT = OFF, ICPORT disabled
  5301                           ;	Extended Instruction Set Enable bit
  5302                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5303                           ;	Background Debugger Enable bit
  5304                           ;	DEBUG = 0x1, unprogrammed default
  5305  300006                     	org	3145734
  5306  300006  85                 	db	133
  5307                           
  5308                           ; Padding undefined space
  5309  300007                     	org	3145735
  5310  300007  FF                 	db	255
  5311                           
  5312                           ;Config register CONFIG5L @ 0x300008
  5313                           ;	unspecified, using default values
  5314                           ;	Code Protection bit
  5315                           ;	CP0 = 0x1, unprogrammed default
  5316                           ;	Code Protection bit
  5317                           ;	CP1 = 0x1, unprogrammed default
  5318                           ;	Code Protection bit
  5319                           ;	CP2 = 0x1, unprogrammed default
  5320                           ;	Code Protection bit
  5321                           ;	CP3 = 0x1, unprogrammed default
  5322  300008                     	org	3145736
  5323  300008  0F                 	db	15
  5324                           
  5325                           ;Config register CONFIG5H @ 0x300009
  5326                           ;	unspecified, using default values
  5327                           ;	Boot Block Code Protection bit
  5328                           ;	CPB = 0x1, unprogrammed default
  5329                           ;	Data EEPROM Code Protection bit
  5330                           ;	CPD = 0x1, unprogrammed default
  5331  300009                     	org	3145737
  5332  300009  C0                 	db	192
  5333                           
  5334                           ;Config register CONFIG6L @ 0x30000A
  5335                           ;	unspecified, using default values
  5336                           ;	Write Protection bit
  5337                           ;	WRT0 = 0x1, unprogrammed default
  5338                           ;	Write Protection bit
  5339                           ;	WRT1 = 0x1, unprogrammed default
  5340                           ;	Write Protection bit
  5341                           ;	WRT2 = 0x1, unprogrammed default
  5342                           ;	Write Protection bit
  5343                           ;	WRT3 = 0x1, unprogrammed default
  5344  30000A                     	org	3145738
  5345  30000A  0F                 	db	15
  5346                           
  5347                           ;Config register CONFIG6H @ 0x30000B
  5348                           ;	unspecified, using default values
  5349                           ;	Configuration Register Write Protection bit
  5350                           ;	WRTC = 0x1, unprogrammed default
  5351                           ;	Boot Block Write Protection bit
  5352                           ;	WRTB = 0x1, unprogrammed default
  5353                           ;	Data EEPROM Write Protection bit
  5354                           ;	WRTD = 0x1, unprogrammed default
  5355  30000B                     	org	3145739
  5356  30000B  E0                 	db	224
  5357                           
  5358                           ;Config register CONFIG7L @ 0x30000C
  5359                           ;	unspecified, using default values
  5360                           ;	Table Read Protection bit
  5361                           ;	EBTR0 = 0x1, unprogrammed default
  5362                           ;	Table Read Protection bit
  5363                           ;	EBTR1 = 0x1, unprogrammed default
  5364                           ;	Table Read Protection bit
  5365                           ;	EBTR2 = 0x1, unprogrammed default
  5366                           ;	Table Read Protection bit
  5367                           ;	EBTR3 = 0x1, unprogrammed default
  5368  30000C                     	org	3145740
  5369  30000C  0F                 	db	15
  5370                           
  5371                           ;Config register CONFIG7H @ 0x30000D
  5372                           ;	unspecified, using default values
  5373                           ;	Boot Block Table Read Protection bit
  5374                           ;	EBTRB = 0x1, unprogrammed default
  5375  30000D                     	org	3145741
  5376  30000D  40                 	db	64
  5377                           tosu	equ	0xFFF
  5378                           tosh	equ	0xFFE
  5379                           tosl	equ	0xFFD
  5380                           stkptr	equ	0xFFC
  5381                           pclatu	equ	0xFFB
  5382                           pclath	equ	0xFFA
  5383                           pcl	equ	0xFF9
  5384                           tblptru	equ	0xFF8
  5385                           tblptrh	equ	0xFF7
  5386                           tblptrl	equ	0xFF6
  5387                           tablat	equ	0xFF5
  5388                           prodh	equ	0xFF4
  5389                           prodl	equ	0xFF3
  5390                           indf0	equ	0xFEF
  5391                           postinc0	equ	0xFEE
  5392                           postdec0	equ	0xFED
  5393                           preinc0	equ	0xFEC
  5394                           plusw0	equ	0xFEB
  5395                           fsr0h	equ	0xFEA
  5396                           fsr0l	equ	0xFE9
  5397                           wreg	equ	0xFE8
  5398                           indf1	equ	0xFE7
  5399                           postinc1	equ	0xFE6
  5400                           postdec1	equ	0xFE5
  5401                           preinc1	equ	0xFE4
  5402                           plusw1	equ	0xFE3
  5403                           fsr1h	equ	0xFE2
  5404                           fsr1l	equ	0xFE1
  5405                           bsr	equ	0xFE0
  5406                           indf2	equ	0xFDF
  5407                           postinc2	equ	0xFDE
  5408                           postdec2	equ	0xFDD
  5409                           preinc2	equ	0xFDC
  5410                           plusw2	equ	0xFDB
  5411                           fsr2h	equ	0xFDA
  5412                           fsr2l	equ	0xFD9
  5413                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         61
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     69      82
    BANK0           160     62     110
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 6
		 -> main@txt(BANK0[6]), main@txt2(BANK0[6]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[4]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[4]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[4]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 6
		 -> main@txt(BANK0[6]), main@txt2(BANK0[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S750_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 6
		 -> main@txt(BANK0[6]), main@txt2(BANK0[6]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 6
		 -> main@txt(BANK0[6]), main@txt2(BANK0[6]), 

    LCD_Print@LCD_Str	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_number@txt(COMRAM[5]), STR_4(CODE[4]), main@txt(BANK0[6]), STR_2(CODE[3]), 
		 -> main@txt2(BANK0[6]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    ___xxtofl->___lmul
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble

Critical Paths under _my_isr_routine in COMRAM

    _my_isr_routine->i2___lmul

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _my_isr_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr_routine in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr_routine in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_isr_routine in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _my_isr_routine in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _my_isr_routine in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _my_isr_routine in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _my_isr_routine in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   14318
                                             67 COMRAM     2     2      0
                                             50 BANK0     12    12      0
                         _InitConfig
                         _InitTimer0
                          _LCD_Begin
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
                            ___fldiv
                            ___flmul
                             ___lmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8    8597
                                             32 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7931
                                             65 COMRAM     2     2      0
                                             26 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    7458
                                             57 COMRAM     8     2      6
                                             18 BANK0      8     8      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5683
                                             39 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             28 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             21 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                             12 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             30 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             12 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             12 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                             24 COMRAM    14    10      4
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     470
                                             12 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1896
                                             12 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1399
                                             12 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _LCD_Print                                            6     4      2     602
                                             14 COMRAM     6     4      2
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_Goto                                             4     3      1     438
                                             16 COMRAM     4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            2     2      0     176
                                             16 COMRAM     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              2     2      0     176
                                             14 COMRAM     2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Nibble                                     2     2      0      88
                                             12 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitConfig                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _my_isr_routine                                       0     0      0     144
                           i2___lmul
 ---------------------------------------------------------------------------------
 (10) i2___lmul                                           12     4      8     144
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitConfig
   _InitTimer0
   _LCD_Begin
     _LCD_Cmd
       _LCD_Write_Nibble
   _LCD_Cmd
     _LCD_Write_Nibble
   _LCD_Goto
     _LCD_Cmd
       _LCD_Write_Nibble
   _LCD_Print
     _LCD_Write_Nibble
   ___fldiv
   ___flmul
   ___lmul
   ___xxtofl
     ___lmul (ARG)
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 _my_isr_routine (ROOT)
   i2___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3E      6E       5       68.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     45      52       1       87.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C0      20        0.0%
DATA                 0      0      C0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Jul 05 12:21:12 2020

             ___fldiv@aexp 0025               ___fldiv@bexp 0024               ___fldiv@sign 001D  
                       l50 231A                         l47 22D8                         _RS 004E  
                      l121 21F4                        l130 208E                        l115 1FBA  
                      l142 1CE0                        l160 2024                        l139 1F1E  
                      l262 197C                        l159 2014                        l275 1AE0  
                      l730 0FD2                        l810 1730                        l803 1698  
                      l732 0E32                        l741 0E78                        l806 17F4  
                      l902 2270                        l743 0EF0                        l735 0DF6  
                      l744 0EDE                        l817 178C                        l905 2278  
                      l762 08D4                        l826 21AC                        l771 0B42  
                      l772 0B30                        l917 1DAA                        l925 2238  
                      l853 1DF0                        l766 0C38                        l934 22AE  
                      l928 231C                        l856 1E32                        l864 1074  
                      l769 0ACA                        l858 1E6C                        l866 107C  
                      l779 0BFA                        l891 1640                        l884 12B4  
                      l897 2152                        l898 215A                        _GIE 007F97  
                      _PSA 007EAB                        _abs 223A                        _pad 1DAC  
                      wreg 000FE8               ___flmul@aexp 001E               ___flmul@bexp 001F  
             ___flmul@sign 0019               ___flmul@temp 0024               ___flmul@prod 0020  
          __end_of_LCD_Cmd 21F6                       ?_abs 001F                       l2100 1C00  
                     l2030 21B0                       l2110 1C40                       l2102 1C18  
                     l2040 21E4                       l2032 21B4                       l2120 1C6E  
                     l2112 1C46                       l2104 1C1E                       l2200 0CA6  
                     l2050 22B0                       l2034 21BC                       l2130 1CC2  
                     l2122 1C86                       l2114 1C54                       l2106 1C2C  
                     l2210 0CDC                       l2202 0CAC                       l2060 22D0  
                     l2052 22B6                       l2036 21C2                       l2132 1CC8  
                     l2124 1C8C                       l2116 1C5A                       l2108 1C32  
                     l2300 0F92                       l2220 0D1C                       l2212 0CEC  
                     l2204 0CBA                       l2062 22D2                       l2054 22CA  
                     l2070 2310                       l2038 21D2                       l2126 1CA4  
                     l2118 1C68                       l2150 2038                       l2310 0FC8  
                     l2302 0FAE                       l2222 0D2C                       l2230 0D4C  
                     l2214 0CEE                       l2206 0CBC                       l2064 22D4  
                     l2056 22CC                       l2072 2318                       l2128 1CAA  
                     l2080 1BEC                       l2152 2044                       l2304 0FB2  
                     l2240 0D8A                       l2232 0D5C                       l2224 0D34  
                     l2208 0CCC                       l2216 0CF6                       l2400 0AB0  
                     l2320 081C                       l2066 22D6                       l2058 22CE  
                     l2090 1BF6                       l2082 1BEE                       l2074 1BE4  
                     l2154 2050                       l2146 2028                       l2162 1E6E  
                     l2306 0FC0                       l2250 0DD2                       l2242 0D9A  
                     l2234 0D5C                       l2226 0D38                       l2218 0D06  
                     l2410 0AEC                       l2402 0ABA                       l2330 085C  
                     l2322 082A                       l2170 1FBC                       l2068 2300  
                     l2092 1BF8                       l2084 1BF0                       l2076 1BE8  
                     l2148 202C                       l2156 205C                       l2164 1E7A  
                     l2308 0FC6                       l2260 0E20                       l2252 0DE6  
                     l2244 0DAA                       l2180 0C3A                       l2420 0B5E  
                     l2412 0AFA                       l2404 0AC8                       l2340 088C  
                     l2332 0862                       l2324 082C                       l2172 1FCC  
                     l2094 1BFA                       l2086 1BF2                       l2078 1BEA  
                     l2166 1EE0                       l2270 0E68                       l2262 0E30  
                     l2254 0DF4                       l2246 0DBA                       l2238 0D70  
                     l2190 0C76                       l2182 0C46                       l2430 0BC8  
                     l2422 0B6C                       l2414 0B28                       l2406 0ADA  
                     l2350 08C4                       l2342 088E                       l2334 0872  
                     l2326 083C                       l2318 0810                       l2174 1FDA  
                     l2096 1BFC                       l2088 1BF4                       l2168 1EE2  
                     l2280 0EA8                       l2272 0E76                       l2264 0E42  
                     l2256 0E00                       l2248 0DC2                       l2192 0C86  
                     l2184 0C54                       l2440 0C1E                       l2432 0BE2  
                     l2424 0B96                       l2408 0AE8                       l2360 0914  
                     l2352 08E4                       l2344 089E                       l2336 0878  
                     l2328 084C                       l2176 1FEA                       l2098 1BFE  
                     l2290 0F1A                       l2282 0ED6                       l2266 0E58  
                     l2274 0E88                       l2258 0E1E                       l2194 0C88  
                     l2186 0C56                       l2434 0BFE                       l2442 0C24  
                     l2418 0B52                       l2426 0B9A                       l2370 0964  
                     l2362 091E                       l2354 08F4                       l2346 08AE  
                     l2338 087E                       l2178 1FF4                       l2450 1654  
                     l2610 1CF4                       l2292 0F44                       l2276 0E96  
                     l2268 0E5E                       l2188 0C66                       l2196 0C90  
                     l2444 0C28                       l2436 0C0E                       l2428 0BB4  
                     l2380 09A6                       l2372 0970                       l2364 0934  
                     l2348 08BE                       l2460 16D2                       l2452 1662  
                     l2700 1A08                       l2612 1D06                       l2286 0F00  
                     l2294 0F48                       l2278 0E9A                       l2198 0CA0  
                     l2438 0C1C                       l2390 0A08                       l2382 09B6  
                     l2374 097E                       l2366 0940                       l2358 0908  
                     l2470 1726                       l2462 16DA                       l2454 16A8  
                     l2710 1A8A                       l2702 1A1C                       l2614 1D10  
                     l2622 21F6                       l2630 227A                       l2296 0F62  
                     l2288 0F0C                       l2392 0A24                       l2384 09D0  
                     l2376 098A                       l2368 0958                       l2480 179C  
                     l2472 1762                       l2464 16E6                       l2456 16BE  
                     l2448 1644                       l2640 17F6                       l2704 1A2A  
                     l2712 1A90                       l2616 1D2E                       l2608 1CE2  
                     l2624 2202                       l2632 2286                       l2720 1DAC  
                     l2800 1274                       l2298 0F78                       l2394 0A4E  
                     l2386 09E0                       l2378 099A                       l2490 17E4  
                     l2482 17A0                       l2474 176E                       l2466 1718  
                     l2650 183A                       l2642 17FA                       l2714 1AA0  
                     l2706 1A58                       l2618 1D64                       l2626 2214  
                     l2634 228A                       l2730 1DFC                       l2722 1DBA  
                     l2802 127C                       l2810 14B2                       l2396 0A84  
                     l2388 09FC                       l2484 17C4                       l2476 177C  
                     l2468 171A                       l2660 1890                       l2652 185A  
                     l2644 1808                       l2716 1AC0                       l2708 1A78  
                     l2628 2218                       l2636 22A2                       l2732 1E10  
                     l2724 1DCE                       l2804 128C                       l2820 151E  
                     l2812 14C0                       l2900 1456                       l2398 0A92  
                     l2486 17D4                       l2478 179A                       l2670 1912  
                     l2662 18A4                       l2654 185E                       l2646 1828  
                     l2742 223A                       l2734 1E14                       l2726 1DDC  
                     l2750 101E                       l2830 15D0                       l2822 1566  
                     l2814 14D2                       l2902 146E                       l2488 17E2  
                     l2680 195C                       l2672 1914                       l2664 18B2  
                     l2656 186A                       l2648 182C                       l2744 2254  
                     l2736 1E40                       l2728 1DE8                       l2760 1084  
                     l2752 103E                       l2832 15E4                       l2816 14D6  
                     l2808 148E                       l2904 147A                       l2674 1926  
                     l2666 18C4                       l2658 1888                       l2690 19B0  
                     l2738 1E54                       l2770 10BA                       l2762 1096  
                     l2754 104C                       l2746 0FD4                       l2826 159E  
                     l2818 14FA                       l2842 160A                       l2850 20FA  
                     l1980 1FA6                       l1972 1F22                       l2668 18F2  
                     l2676 192C                       l2692 19B4                       l2684 197E  
                     l2772 10C0                       l2780 11B4                       l2764 10A4  
                     l2756 104E                       l2748 0FF4                       l2844 162E  
                     l2828 15C2                       l2836 15F0                       l2852 2102  
                     l2860 216E                       l1982 1FA8                       l1974 1F2C  
                     l2926 2070                       l2678 193C                       l2694 19C2  
                     l2686 1982                       l2782 11D0                       l2790 1230  
                     l2774 1142                       l2766 10AA                       l2758 1068  
                     l2838 15FE                       l2854 2110                       l2862 2176  
                     l2870 12B6                       ?_pad 001D                       l1984 1FB0  
                     l1976 1F9C                       l2696 19E2                       l2688 1990  
                     l2792 1242                       l2784 11EE                       l2776 114A  
                     l2768 10B2                       l2856 2136                       l2864 217E  
                     l2880 1306                       l2872 12BE                       l1986 1FB2  
                     l1978 1F9E                       l2698 1A00                       l2794 1250  
                     l2786 1208                       l2778 1150                       l2866 219A  
                     l2858 215C                       l2890 138A                       l2882 1310  
                     l2874 12C2                       l2796 1256                       l2788 1222  
                     l2892 13BE                       l2884 1328                       l2876 12DA  
                     l2798 1268                       l2894 13F2                       l2886 1334  
                     l2878 12E0                       l2896 1426                       l2888 1340  
        ?_LCD_Write_Nibble 0001                       l2898 144C                       STR_1 0809  
                     STR_2 080C                       STR_3 0801                       STR_4 0805  
                     _T0CS 007EAD                       u2000 0B28                       u2001 0B24  
                     u2010 0B3E                       u2011 0B3A                       u2020 0B52  
                     u2100 1714                       u2021 0B4E                       u2101 1710  
                     u2030 0B6C                       u2110 175E                       u2031 0B68  
                     u2111 175A                       u2040 0BB4                       u2120 177C  
                     u2041 0BB0                       u2121 1778                       u2050 0BE2  
                     u2130 178C                       u2051 0BDE                       u2131 1788  
                     _T0SE 007EAC                       u2060 0C1C                       u2140 179A  
                     u2300 183A                       u2061 0C18                       u2141 1796  
                     u2301 1836                       u2150 17D4                       u2070 1654  
                     u2230 1CF4                       u2151 17D0                       u2071 1650  
                     u2311 1864                       u2231 1CF0                       u1600 1EDC  
                     u2160 17E2                       u2080 1662                       u2320 1888  
                     u2400 1A58                       u2240 1D06                       u2161 17DE  
                     u2081 165E                       u2321 1884                       u2401 1A54  
                     u2241 1D02                       u1610 1F0E                       u2090 16BE  
                     u2330 18B2                       u2410 1AA0                       u2250 1D2E  
                     u1515 1F2A                       u2091 16BA                       u2331 18AE  
                     u2411 1A9C                       u2251 1D2A                       u1516 1F2C  
                     u1620 1F1E                       u1700 0CDC                       u2340 18F2  
                     u2260 1D64                       u2420 1DBA                       u2500 104C  
                     u1621 1F1A                       u1701 0CD8                       u2341 18EE  
                     u2261 1D60                       u2421 1DB6                       u2501 1048  
                     u1710 0D1C                       u1630 1FDA                       u2350 193C  
                     u2270 2238                       u2430 1DDC                       u2510 1068  
                     u1607 1ED2                       u1711 0D18                       u1631 1FD6  
                     u2351 1938                       u2271 2234                       u2431 1DD8  
                     u2511 1064                       u1560 21D2                       u1800 0EA8  
                     u1720 0D5C                       u1640 2014                       u2360 1990  
                     u2280 22A2                       u2440 1E32                       u2600 1250  
                     u2520 1096                       u1561 21CE                       u1617 1F04  
                     u1801 0EA4                       u1721 0D58                       u1641 2010  
                     u2361 198C                       u2281 229E                       u2441 1E2E  
                     u2601 124C                       u2521 1092                       u1570 21E4  
                     u1810 0ED6                       u1730 0DD2                       u1650 0C54  
                     u2290 1808                       u2370 19C2                       u2450 1E40  
                     u2610 1268                       u2530 10A4                       u1571 21E0  
                     u1811 0ED2                       u1731 0DCE                       u1651 0C50  
                     u2291 1804                       u2371 19BE                       u2451 1E3C  
                     u2611 1264                       u2531 10A0                       u1820 0EEC  
                     u1740 0DF4                       u1660 0C66                       u1900 084C  
                     u2380 1A00                       u2460 2254                       u2540 11D0  
                     u2620 14B2                       u1821 0EE8                       u1741 0DF0  
                     u1661 0C62                       u1901 0848                       u2381 19FC  
                     u2461 2250                       u2541 11CC                       u2621 14AE  
                     u1590 1EA6                       u1830 0F00                       u1750 0E1E  
                     u1670 0C76                       u1910 088C                       u2390 1A2A  
                     u2550 11EE                       u2470 1006                       u2630 14FA  
                     u1831 0EFC                       u1751 0E1A                       u1671 0C72  
                     u1911 0888                       u2391 1A26                       u2551 11EA  
                     u2471 1000                       u2631 14F6                       u1840 0F1A  
                     u1760 0E42                       u1680 0CBA                       u1920 089E  
                     u2560 1208                       u2480 1008                       u2640 151E  
                     u1841 0F16                       u1761 0E3E                       u1681 0CB6  
                     u1921 089A                       u2561 1204                       u2641 151A  
                     u1850 0F62                       u1770 0E58                       u1690 0CCC  
                     u1930 08AE                       u2570 1222                       u2490 101E  
                     u2650 15C2                       u2707 1C0A                       u1851 0F5E  
                     u1771 0E54                       u1691 0CC8                       u1931 08AA  
                     u2571 121E                       u2491 101A                       u2651 15BE  
                     u1860 0F92                       u1780 0E76                       u1940 08E4  
                     u2580 1230                       u2660 2152                       u2717 1C24  
                     u1597 1E9C                       u1861 0F8E                       u1781 0E72  
                     u1941 08E0                       u2581 122C                       u2661 214E  
                     u1870 0FC0                       u1790 0E96                       u1950 08F4  
                     u2590 1242                       u2807 1FB4                       u2727 1C38  
                     u1871 0FBC                       u1791 0E92                       u1951 08F0  
                     u2591 123E                       u1960 0A6E                       u1880 082A  
                     u2737 1C4C                       u1881 0826                       u1970 0AC8  
                     u1890 083C                       u2747 1C60                       u1971 0AC4  
                     u1891 0838                       _PEIE 007F96                       u1980 0AE8  
                     u2757 1C78                       u1981 0AE4                       u1965 0A64  
                     u2677 12CC                       u1990 0AFA                       u2767 1C96  
                     u1991 0AF6                       u2687 131A                       u2777 1CB4  
                     u2697 1460                       u2787 1CD2                       u2797 21EA  
                     i2l96 1BE0                       _TMR0 000FD6         ??_LCD_Write_Nibble 000D  
                     abs@a 001F                       _dbuf 00AA                       _main 12B6  
                     _dtoa 0FD4         __size_of_LCD_Begin 00FE                       _auxx 00A8  
                     _prec 004A                       _temp 004F                       _nout 00A2  
                     pad@i 0024                       pad@p 0021                       fsr0h 000FEA  
                     fsr1h 000FE2                       indf0 000FEF                       fsr2h 000FDA  
                     fsr0l 000FE9                       indf2 000FDF                       fsr1l 000FE1  
                     pad@w 0026                       fsr2l 000FD9                       btemp 0053  
                     prodh 000FF4                       prodl 000FF3         __size_of_LCD_Print 00B2  
                     start 000E            ___fldiv@new_exp 001E                LCD_Goto@col 0014  
              LCD_Goto@row 0011               ___param_bank 000000                      ??_abs 0021  
                    ??_pad 0023           __end_of_LCD_Goto 2090            __end_of___aodiv 197E  
                    ?_main 0001                      ?_dtoa 0028            __end_of___aomod 1AE2  
          __end_of___fldiv 0FD4            __end_of___flmul 0C3A                      i2l160 20F8  
                    i2l159 20E8               vfpfcnvrt@fmt 003C                      _PORTD 000F83  
                    _TRISA 000F92                      _TRISB 000F93                      _TRISD 000F95  
      ___lmul@multiplicand 0011                      _falha 00A6                      _flags 004C  
                    _fputc 1CE2                      _fputs 21F6                      pad@fp 001D  
                    _width 00A4                      _putch 231C                      dtoa@d 002A  
                    dtoa@i 0070                      dtoa@n 0068                      dtoa@p 0062  
                    dtoa@s 0066                      dtoa@w 0064                      tablat 000FF5  
         __end_ofi2___lmul 20FA                      ttemp5 0054                      ttemp6 0057  
                    ttemp7 005B                      status 000FD8                      wtemp8 0054  
          __end_of_sprintf 21AE                 _InitConfig 22B0            __initialization 22DA  
               _InitTimer0 2300               __end_of_main 148E               __end_of_dtoa 12B6  
                   ??_main 0044                     ??_dtoa 0032          __end_of_LCD_Begin 1CE2  
            __activetblptr 000002                  ??_LCD_Cmd 000F          __end_of_LCD_Print 1F20  
                   _ADCON0 000FC2                     _ADCON1 000FC1                     _ADCON2 000FC0  
                   ?_fputc 000D                     ?_fputs 0016                     _T08BIT 007EAE  
                   ?_putch 0001                     _INT0IE 007F94                     _INT0IF 007F91  
                   i2l2500 20BE                     i2l2502 20C8                     i2l2510 1B12  
                   i2l2520 1BA2                     i2l2512 1B1A                     i2l2504 1AE4  
                   i2l2522 1BB4                     i2l2514 1B32                     i2l2530 1BC8  
                   i2l2506 1AF2                     i2l2532 1BD4                     i2l2524 1BBA  
                   i2l2516 1B74                     i2l2508 1B06                     i2l2534 1BD6  
                   i2l2526 1BBC                     i2l2518 1B8E                     i2l2536 1BD8  
                   i2l2528 1BBE                     i2l2494 2090                     i2l2496 20A0  
                   i2l2498 20AE                     _TMR0IE 007F95                     _TMR0IF 007F92  
                   _TMR0ON 007EAF           i2___lmul@product 0009           __end_of___xxtofl 17F6  
             vfprintf@cfmt 0042                     ___lmul 1FBC                  ??___aodiv 001D  
                ??___aomod 001D                  ??___fldiv 0015                  ??___flmul 0015  
                   clear_0 22E0                     clear_1 22EC                     pad@buf 001F  
                   _subida 0046                     dtoa@fp 0028                     _strlen 227A  
                   fputc@c 000D                     fputs@c 001A                     fputs@i 001B  
                   fputs@s 0016               __mediumconst 0000                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                     putch@c 0001  
         __end_of_vfprintf 215C                  ??_sprintf 0044               ___xxtofl@arg 0023  
             ___xxtofl@exp 0022               ___xxtofl@val 0019                 __accesstop 0060  
  __end_of__initialization 22F2                  ?_LCD_Goto 0011              ___rparam_used 000001  
              ?_InitConfig 0001             __pcstackCOMRAM 0001                ?_InitTimer0 0001  
            __end_of_fputc 1DAC              __end_of_fputs 223A             LCD_Cmd@Command 0010  
            __end_of_putch 231E                  ?i2___lmul 0001                    ??_fputc 0011  
                  ??_fputs 001A                    ??_putch 000D                 __pbssBANK0 009E  
               ??_LCD_Goto 0012                    ?___lmul 000D  __size_of_LCD_Write_Nibble 009C  
           ___lmul@product 0015                    ?_strlen 000D                 ??i2___lmul 0009  
                  _LCD_Cmd 21AE                    _INTEDG0 007F8E                  ?___xxtofl 0019  
       __size_of_vfpfcnvrt 01B4        __size_of_InitConfig 002A        __size_of_InitTimer0 001C  
  __size_of_my_isr_routine 1BDC                    __Hparam 0000                    __Lparam 0000  
                  ___aodiv 17F6                    ___aomod 197E                    ___fldiv 0C3A  
          __size_of___lmul 006A                    ___flmul 0810                  ?_vfprintf 007A  
             __psmallconst 0800                    __pcinit 22DA                    __ramtop 0800  
                  _descida 009E                    __ptext0 12B6                    __ptext1 215C  
                  __ptext2 20FA                    __ptext3 148E                    __ptext4 0FD4  
                  __ptext5 1DAC                    __ptext6 227A                    __ptext7 21F6  
                  __ptext8 1CE2                    __ptext9 231C                  _T0CONbits 000FD5  
          __size_of_strlen 0036               __size_of_abs 0040               __size_of_pad 00C2  
               ??___xxtofl 001D                  _LCD_Begin 1BE4                    _rotacao 00CA  
                _LCD_Print 1E6E                    _sprintf 215C                    main@txt 0092  
           __pintcode_body 1AE2       end_of_initialization 22F2                    fputc@fp 000F  
            __Lmediumconst 0000                    int_func 1AE2                    fputs@fp 0018  
        __end_of_vfpfcnvrt 1642                    postdec2 000FDD                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE        i2___lmul@multiplier 0001  
               ??_vfprintf 0042          LCD_Write_Nibble@n 000E                    strlen@a 000F  
                  strlen@s 000D                  _PORTBbits 000F81                  _PORTDbits 000F83  
            ___xxtofl@sign 0021                  _TRISDbits 000F95                 ?_LCD_Begin 0001  
              ___fldiv@grs 0020                ___fldiv@rem 0019                 ?_LCD_Print 000F  
              ___flmul@grs 001A               ??_InitConfig 000D          __size_of_LCD_Goto 006A  
             ??_InitTimer0 000D           _LCD_Write_Nibble 1F20                 LCD_Print@i 0014  
           __end_of___lmul 2026                vfpfcnvrt@ap 003E                vfpfcnvrt@fp 003A  
              vfpfcnvrt@ll 0072             __end_of_strlen 22B0        start_initialization 22DA  
        __size_ofi2___lmul 006A                __end_of_abs 227A                __end_of_pad 1E6E  
       __end_of_InitConfig 22DA             _my_isr_routine 0008         __end_of_InitTimer0 231C  
              vfprintf@fmt 007C                   ??___lmul 0015                   ??_strlen 000F  
                 ?_LCD_Cmd 0001                  ___fldiv@a 0011                  ___fldiv@b 000D  
                ___flmul@a 0011                  ___flmul@b 000D                __pbssCOMRAM 0046  
            __pcstackBANK0 0060     __end_of_my_isr_routine 1BE4           ___aodiv@dividend 000D  
              ??_LCD_Begin 0011          __size_of___xxtofl 01B4                ??_LCD_Print 0011  
                __pintcode 0008                   ?___aodiv 000D                   ?___aomod 000D  
                 ?___fldiv 000D           ___aodiv@quotient 001F                   ?___flmul 000D  
         LCD_Print@LCD_Str 000F          __size_of_vfprintf 0062                __smallconst 0800  
          ?_my_isr_routine 0001                   ?_sprintf 0080             __size_of_fputc 00CA  
           __size_of_fputs 0044             __size_of_putch 0002                   _LCD_Goto 2026  
                 i2u220_40 1B06                   i2u220_41 1B02                   i2u221_40 1B74  
                 i2u221_41 1B70                   i2u222_40 1B8E                   i2u222_41 1B8A  
                 i2u217_40 20AE                   i2u217_41 20AA                   i2u218_40 20E8  
                 i2u218_41 20E4                   i2u219_40 1AF2                   i2u219_41 1AEE  
                _vfpfcnvrt 148E                   i2___lmul 2090           __size_of_LCD_Cmd 0048  
 __end_of_LCD_Write_Nibble 1FBC          ___lmul@multiplier 000D                   __Hrparam 0000  
               vfprintf@ap 007E                   __Lrparam 0000                 vfprintf@fp 007A  
         __size_of___aodiv 0188           __size_of___aomod 0164           __size_of___fldiv 039A  
         __size_of___flmul 042A                 ?_vfpfcnvrt 003A            ___aodiv@divisor 0015  
          ___aodiv@counter 001D                 sprintf@fmt 0082                   ___xxtofl 1642  
                 _dtoa$823 0060                   __ptext10 223A                   __ptext11 197E  
                 __ptext20 21AE                   __ptext12 17F6                   __ptext21 1F20  
                 __ptext13 1642                   __ptext22 2300                   __ptext14 1FBC  
                 __ptext23 22B0                   __ptext15 0810                   __ptext16 0C3A  
                 __ptext25 2090                   __ptext17 1E6E                   __ptext18 2026  
                 __ptext19 1BE4           __size_of_sprintf 0052              __size_of_main 01D8  
            __size_of_dtoa 02E2                   int$flags 0053                   _vfprintf 20FA  
                 main@txt2 0098           ___aomod@dividend 000D      i2___lmul@multiplicand 0005  
                 intlevel2 0000                  sprintf@ap 008A            ___aomod@divisor 0015  
              ??_vfpfcnvrt 0040            ___aomod@counter 001D           ??_my_isr_routine 000D  
                 sprintf@f 008C                   sprintf@s 0080               ___aodiv@sign 001E  
             ___aomod@sign 001E  
